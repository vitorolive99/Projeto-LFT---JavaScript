Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ASPAS
    ASPASD
    AWAIT
    BOOLEAN
    BREAK
    BYTE
    CASE
    CATCH
    CHAR
    CLASS
    COMMENT
    COMMENTMULTI
    CONTINUE
    DEBUGGER
    DEFAULT
    DELETE
    DO
    DOUBLE
    EXPORT
    EXTENDS
    FINAL
    FINALLY
    HEXADECIMAL
    IMPORT
    IN
    INSTANCEOF
    INT
    LONG
    NEW
    NFLOAT
    NULL
    OCTAL
    PRIVATE
    PROTECTED
    PUBLIC
    SHORT
    STATIC
    SUPER
    SWITCH
    THIS
    THROW
    TRY
    TYPEOF
    WITH
    YIELD

Grammar

Rule 0     S' -> program
Rule 1     program -> funcdecl
Rule 2     program -> funcdecl program
Rule 3     program -> vardecl PV
Rule 4     program -> vardecl PV program
Rule 5     vardecl -> tipodecl ID
Rule 6     vardecl -> tipodecl ID ATRIBUICAO exp
Rule 7     vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
Rule 8     vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
Rule 9     vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
Rule 10    vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
Rule 11    funcdecl -> signature body
Rule 12    signature -> FUNCTION ID LPAREN sigParams RPAREN
Rule 13    sigParams -> ID
Rule 14    sigParams -> ID VIRGULA sigParams
Rule 15    body -> LCHAVES stms RCHAVES
Rule 16    stms -> stm
Rule 17    stms -> stm stms
Rule 18    stm -> vardecl PV
Rule 19    stm -> RETURN exp PV
Rule 20    stm -> exp PV
Rule 21    stm -> WHILE LPAREN exp RPAREN bodyorstm
Rule 22    stm -> IF LPAREN exp RPAREN bodyorstm
Rule 23    stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm
Rule 24    stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm
Rule 25    opexp -> exp
Rule 26    opexp -> VOID
Rule 27    bodyorstm -> body
Rule 28    bodyorstm -> stm
Rule 29    exp -> exp SOMA exp
Rule 30    exp -> FALSE
Rule 31    exp -> TRUE
Rule 32    exp -> string
Rule 33    exp -> ID
Rule 34    exp -> FLOAT
Rule 35    exp -> INTEIRO
Rule 36    exp -> assign
Rule 37    exp -> call
Rule 38    exp -> exp TERNARIO1 exp TERNARIO2 exp
Rule 39    exp -> NEGACAO exp
Rule 40    exp -> exp OR exp
Rule 41    exp -> exp AND exp
Rule 42    exp -> exp MAIORIGUALQ exp
Rule 43    exp -> exp MENORIGUALQ exp
Rule 44    exp -> exp MENORQ exp
Rule 45    exp -> exp MAIORQ exp
Rule 46    exp -> exp DIFERENTEPACARAI exp
Rule 47    exp -> exp DIFERENTE exp
Rule 48    exp -> exp IGUALPACARAI exp
Rule 49    exp -> exp IGUAL exp
Rule 50    exp -> exp RESTOINCREMENT exp
Rule 51    exp -> exp DIVINCREMENT exp
Rule 52    exp -> exp MULTINCREMENT exp
Rule 53    exp -> DECREMENTN exp
Rule 54    exp -> INCREMENTN exp
Rule 55    exp -> exp DECREMENT
Rule 56    exp -> exp EXPONENCIACAO exp
Rule 57    exp -> exp INCREMENT
Rule 58    exp -> exp RESTO exp
Rule 59    exp -> exp MULT exp
Rule 60    exp -> exp DIV exp
Rule 61    exp -> exp SUB exp
Rule 62    call -> ID LPAREN params RPAREN
Rule 63    call -> ID LPAREN RPAREN
Rule 64    params -> exp VIRGULA params
Rule 65    params -> exp
Rule 66    assign -> ID ATRIBUICAO exp
Rule 67    tipodecl -> LET
Rule 68    tipodecl -> CONST
Rule 69    tipodecl -> VAR
Rule 70    string -> STRINGD
Rule 71    string -> STRINGS
Rule 72    listexp -> exp
Rule 73    listexp -> exp VIRGULA listexp

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 41
ASPAS                : 
ASPASD               : 
ATRIBUICAO           : 6 8 9 10 66
AWAIT                : 
BOOLEAN              : 
BREAK                : 
BYTE                 : 
CASE                 : 
CATCH                : 
CHAR                 : 
CLASS                : 
COMMENT              : 
COMMENTMULTI         : 
CONST                : 68
CONTINUE             : 
DEBUGGER             : 
DECREMENT            : 55
DECREMENTN           : 53
DEFAULT              : 
DELETE               : 
DIFERENTE            : 47
DIFERENTEPACARAI     : 46
DIV                  : 60
DIVINCREMENT         : 51
DO                   : 
DOUBLE               : 
ELSE                 : 24
EXPONENCIACAO        : 56
EXPORT               : 
EXTENDS              : 
FALSE                : 30
FINAL                : 
FINALLY              : 
FLOAT                : 34
FOR                  : 23
FUNCTION             : 12
HEXADECIMAL          : 
ID                   : 5 6 7 8 9 10 12 13 14 33 62 63 66
IF                   : 22 24
IGUAL                : 49
IGUALPACARAI         : 48
IMPORT               : 
IN                   : 
INCREMENT            : 57
INCREMENTN           : 54
INSTANCEOF           : 
INT                  : 
INTEIRO              : 7 9 35
LCHAVES              : 15
LCOLCHETE            : 7 8 9 10
LET                  : 67
LONG                 : 
LPAREN               : 12 21 22 23 24 62 63
MAIORIGUALQ          : 42
MAIORQ               : 45
MENORIGUALQ          : 43
MENORQ               : 44
MULT                 : 59
MULTINCREMENT        : 52
NEGACAO              : 39
NEW                  : 
NFLOAT               : 
NULL                 : 
OCTAL                : 
OR                   : 40
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PV                   : 3 4 18 19 20 23 23
RCHAVES              : 15
RCOLCHETE            : 7 8 9 10
RESTO                : 58
RESTOINCREMENT       : 50
RETURN               : 19
RPAREN               : 12 21 22 23 24 62 63
SHORT                : 
SOMA                 : 29
STATIC               : 
STRINGD              : 70
STRINGS              : 71
SUB                  : 61
SUPER                : 
SWITCH               : 
TERNARIO1            : 38
TERNARIO2            : 38
THIS                 : 
THROW                : 
TRUE                 : 31
TRY                  : 
TYPEOF               : 
VAR                  : 69
VIRGULA              : 14 64 73
VOID                 : 26
WHILE                : 21
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

assign               : 36
body                 : 11 27
bodyorstm            : 21 22 23 24 24
call                 : 37
exp                  : 6 19 20 21 22 24 25 29 29 38 38 38 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 54 55 56 56 57 58 58 59 59 60 60 61 61 64 65 66 72 73
funcdecl             : 1 2
listexp              : 8 9 73
opexp                : 23 23 23
params               : 62 64
program              : 2 4 0
sigParams            : 12 14
signature            : 11
stm                  : 16 17 28
stms                 : 15 17
string               : 32
tipodecl             : 5 6 7 8 9 10
vardecl              : 3 4 18

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . funcdecl
    (2) program -> . funcdecl program
    (3) program -> . vardecl PV
    (4) program -> . vardecl PV program
    (11) funcdecl -> . signature body
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (12) signature -> . FUNCTION ID LPAREN sigParams RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FUNCTION        shift and go to state 6
    LET             shift and go to state 7
    CONST           shift and go to state 8
    VAR             shift and go to state 9

    program                        shift and go to state 1
    funcdecl                       shift and go to state 2
    vardecl                        shift and go to state 3
    signature                      shift and go to state 4
    tipodecl                       shift and go to state 5

state 1

    (0) S' -> program .



state 2

    (1) program -> funcdecl .
    (2) program -> funcdecl . program
    (1) program -> . funcdecl
    (2) program -> . funcdecl program
    (3) program -> . vardecl PV
    (4) program -> . vardecl PV program
    (11) funcdecl -> . signature body
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (12) signature -> . FUNCTION ID LPAREN sigParams RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    $end            reduce using rule 1 (program -> funcdecl .)
    FUNCTION        shift and go to state 6
    LET             shift and go to state 7
    CONST           shift and go to state 8
    VAR             shift and go to state 9

    funcdecl                       shift and go to state 2
    program                        shift and go to state 10
    vardecl                        shift and go to state 3
    signature                      shift and go to state 4
    tipodecl                       shift and go to state 5

state 3

    (3) program -> vardecl . PV
    (4) program -> vardecl . PV program

    PV              shift and go to state 11


state 4

    (11) funcdecl -> signature . body
    (15) body -> . LCHAVES stms RCHAVES

    LCHAVES         shift and go to state 13

    body                           shift and go to state 12

state 5

    (5) vardecl -> tipodecl . ID
    (6) vardecl -> tipodecl . ID ATRIBUICAO exp
    (7) vardecl -> tipodecl . ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> tipodecl . ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> tipodecl . ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> tipodecl . ID ATRIBUICAO LCOLCHETE RCOLCHETE

    ID              shift and go to state 14


state 6

    (12) signature -> FUNCTION . ID LPAREN sigParams RPAREN

    ID              shift and go to state 15


state 7

    (67) tipodecl -> LET .

    ID              reduce using rule 67 (tipodecl -> LET .)


state 8

    (68) tipodecl -> CONST .

    ID              reduce using rule 68 (tipodecl -> CONST .)


state 9

    (69) tipodecl -> VAR .

    ID              reduce using rule 69 (tipodecl -> VAR .)


state 10

    (2) program -> funcdecl program .

    $end            reduce using rule 2 (program -> funcdecl program .)


state 11

    (3) program -> vardecl PV .
    (4) program -> vardecl PV . program
    (1) program -> . funcdecl
    (2) program -> . funcdecl program
    (3) program -> . vardecl PV
    (4) program -> . vardecl PV program
    (11) funcdecl -> . signature body
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (12) signature -> . FUNCTION ID LPAREN sigParams RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    $end            reduce using rule 3 (program -> vardecl PV .)
    FUNCTION        shift and go to state 6
    LET             shift and go to state 7
    CONST           shift and go to state 8
    VAR             shift and go to state 9

    vardecl                        shift and go to state 3
    program                        shift and go to state 16
    funcdecl                       shift and go to state 2
    signature                      shift and go to state 4
    tipodecl                       shift and go to state 5

state 12

    (11) funcdecl -> signature body .

    FUNCTION        reduce using rule 11 (funcdecl -> signature body .)
    LET             reduce using rule 11 (funcdecl -> signature body .)
    CONST           reduce using rule 11 (funcdecl -> signature body .)
    VAR             reduce using rule 11 (funcdecl -> signature body .)
    $end            reduce using rule 11 (funcdecl -> signature body .)


state 13

    (15) body -> LCHAVES . stms RCHAVES
    (16) stms -> . stm
    (17) stms -> . stm stms
    (18) stm -> . vardecl PV
    (19) stm -> . RETURN exp PV
    (20) stm -> . exp PV
    (21) stm -> . WHILE LPAREN exp RPAREN bodyorstm
    (22) stm -> . IF LPAREN exp RPAREN bodyorstm
    (23) stm -> . FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm
    (24) stm -> . IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    RETURN          shift and go to state 20
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    LET             shift and go to state 7
    CONST           shift and go to state 8
    VAR             shift and go to state 9
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    stms                           shift and go to state 17
    stm                            shift and go to state 18
    vardecl                        shift and go to state 19
    exp                            shift and go to state 21
    tipodecl                       shift and go to state 5
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 14

    (5) vardecl -> tipodecl ID .
    (6) vardecl -> tipodecl ID . ATRIBUICAO exp
    (7) vardecl -> tipodecl ID . LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> tipodecl ID . ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> tipodecl ID . LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> tipodecl ID . ATRIBUICAO LCOLCHETE RCOLCHETE

    PV              reduce using rule 5 (vardecl -> tipodecl ID .)
    ATRIBUICAO      shift and go to state 38
    LCOLCHETE       shift and go to state 39


state 15

    (12) signature -> FUNCTION ID . LPAREN sigParams RPAREN

    LPAREN          shift and go to state 40


state 16

    (4) program -> vardecl PV program .

    $end            reduce using rule 4 (program -> vardecl PV program .)


state 17

    (15) body -> LCHAVES stms . RCHAVES

    RCHAVES         shift and go to state 41


state 18

    (16) stms -> stm .
    (17) stms -> stm . stms
    (16) stms -> . stm
    (17) stms -> . stm stms
    (18) stm -> . vardecl PV
    (19) stm -> . RETURN exp PV
    (20) stm -> . exp PV
    (21) stm -> . WHILE LPAREN exp RPAREN bodyorstm
    (22) stm -> . IF LPAREN exp RPAREN bodyorstm
    (23) stm -> . FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm
    (24) stm -> . IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    RCHAVES         reduce using rule 16 (stms -> stm .)
    RETURN          shift and go to state 20
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    LET             shift and go to state 7
    CONST           shift and go to state 8
    VAR             shift and go to state 9
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    stm                            shift and go to state 18
    stms                           shift and go to state 42
    vardecl                        shift and go to state 19
    exp                            shift and go to state 21
    tipodecl                       shift and go to state 5
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 19

    (18) stm -> vardecl . PV

    PV              shift and go to state 43


state 20

    (19) stm -> RETURN . exp PV
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 44
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 21

    (20) stm -> exp . PV
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              shift and go to state 45
    SOMA            shift and go to state 46
    TERNARIO1       shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    MAIORIGUALQ     shift and go to state 50
    MENORIGUALQ     shift and go to state 51
    MENORQ          shift and go to state 52
    MAIORQ          shift and go to state 53
    DIFERENTEPACARAI shift and go to state 54
    DIFERENTE       shift and go to state 55
    IGUALPACARAI    shift and go to state 56
    IGUAL           shift and go to state 57
    RESTOINCREMENT  shift and go to state 58
    DIVINCREMENT    shift and go to state 59
    MULTINCREMENT   shift and go to state 60
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67


state 22

    (21) stm -> WHILE . LPAREN exp RPAREN bodyorstm

    LPAREN          shift and go to state 68


state 23

    (22) stm -> IF . LPAREN exp RPAREN bodyorstm
    (24) stm -> IF . LPAREN exp RPAREN bodyorstm ELSE bodyorstm

    LPAREN          shift and go to state 69


state 24

    (23) stm -> FOR . LPAREN opexp PV opexp PV opexp RPAREN bodyorstm

    LPAREN          shift and go to state 70


state 25

    (33) exp -> ID .
    (66) assign -> ID . ATRIBUICAO exp
    (62) call -> ID . LPAREN params RPAREN
    (63) call -> ID . LPAREN RPAREN

    PV              reduce using rule 33 (exp -> ID .)
    SOMA            reduce using rule 33 (exp -> ID .)
    TERNARIO1       reduce using rule 33 (exp -> ID .)
    OR              reduce using rule 33 (exp -> ID .)
    AND             reduce using rule 33 (exp -> ID .)
    MAIORIGUALQ     reduce using rule 33 (exp -> ID .)
    MENORIGUALQ     reduce using rule 33 (exp -> ID .)
    MENORQ          reduce using rule 33 (exp -> ID .)
    MAIORQ          reduce using rule 33 (exp -> ID .)
    DIFERENTEPACARAI reduce using rule 33 (exp -> ID .)
    DIFERENTE       reduce using rule 33 (exp -> ID .)
    IGUALPACARAI    reduce using rule 33 (exp -> ID .)
    IGUAL           reduce using rule 33 (exp -> ID .)
    RESTOINCREMENT  reduce using rule 33 (exp -> ID .)
    DIVINCREMENT    reduce using rule 33 (exp -> ID .)
    MULTINCREMENT   reduce using rule 33 (exp -> ID .)
    DECREMENT       reduce using rule 33 (exp -> ID .)
    EXPONENCIACAO   reduce using rule 33 (exp -> ID .)
    INCREMENT       reduce using rule 33 (exp -> ID .)
    RESTO           reduce using rule 33 (exp -> ID .)
    MULT            reduce using rule 33 (exp -> ID .)
    DIV             reduce using rule 33 (exp -> ID .)
    SUB             reduce using rule 33 (exp -> ID .)
    TERNARIO2       reduce using rule 33 (exp -> ID .)
    RPAREN          reduce using rule 33 (exp -> ID .)
    VIRGULA         reduce using rule 33 (exp -> ID .)
    RCOLCHETE       reduce using rule 33 (exp -> ID .)
    ATRIBUICAO      shift and go to state 71
    LPAREN          shift and go to state 72


state 26

    (35) exp -> INTEIRO .

    PV              reduce using rule 35 (exp -> INTEIRO .)
    SOMA            reduce using rule 35 (exp -> INTEIRO .)
    TERNARIO1       reduce using rule 35 (exp -> INTEIRO .)
    OR              reduce using rule 35 (exp -> INTEIRO .)
    AND             reduce using rule 35 (exp -> INTEIRO .)
    MAIORIGUALQ     reduce using rule 35 (exp -> INTEIRO .)
    MENORIGUALQ     reduce using rule 35 (exp -> INTEIRO .)
    MENORQ          reduce using rule 35 (exp -> INTEIRO .)
    MAIORQ          reduce using rule 35 (exp -> INTEIRO .)
    DIFERENTEPACARAI reduce using rule 35 (exp -> INTEIRO .)
    DIFERENTE       reduce using rule 35 (exp -> INTEIRO .)
    IGUALPACARAI    reduce using rule 35 (exp -> INTEIRO .)
    IGUAL           reduce using rule 35 (exp -> INTEIRO .)
    RESTOINCREMENT  reduce using rule 35 (exp -> INTEIRO .)
    DIVINCREMENT    reduce using rule 35 (exp -> INTEIRO .)
    MULTINCREMENT   reduce using rule 35 (exp -> INTEIRO .)
    DECREMENT       reduce using rule 35 (exp -> INTEIRO .)
    EXPONENCIACAO   reduce using rule 35 (exp -> INTEIRO .)
    INCREMENT       reduce using rule 35 (exp -> INTEIRO .)
    RESTO           reduce using rule 35 (exp -> INTEIRO .)
    MULT            reduce using rule 35 (exp -> INTEIRO .)
    DIV             reduce using rule 35 (exp -> INTEIRO .)
    SUB             reduce using rule 35 (exp -> INTEIRO .)
    TERNARIO2       reduce using rule 35 (exp -> INTEIRO .)
    RPAREN          reduce using rule 35 (exp -> INTEIRO .)
    VIRGULA         reduce using rule 35 (exp -> INTEIRO .)
    RCOLCHETE       reduce using rule 35 (exp -> INTEIRO .)


state 27

    (30) exp -> FALSE .

    PV              reduce using rule 30 (exp -> FALSE .)
    SOMA            reduce using rule 30 (exp -> FALSE .)
    TERNARIO1       reduce using rule 30 (exp -> FALSE .)
    OR              reduce using rule 30 (exp -> FALSE .)
    AND             reduce using rule 30 (exp -> FALSE .)
    MAIORIGUALQ     reduce using rule 30 (exp -> FALSE .)
    MENORIGUALQ     reduce using rule 30 (exp -> FALSE .)
    MENORQ          reduce using rule 30 (exp -> FALSE .)
    MAIORQ          reduce using rule 30 (exp -> FALSE .)
    DIFERENTEPACARAI reduce using rule 30 (exp -> FALSE .)
    DIFERENTE       reduce using rule 30 (exp -> FALSE .)
    IGUALPACARAI    reduce using rule 30 (exp -> FALSE .)
    IGUAL           reduce using rule 30 (exp -> FALSE .)
    RESTOINCREMENT  reduce using rule 30 (exp -> FALSE .)
    DIVINCREMENT    reduce using rule 30 (exp -> FALSE .)
    MULTINCREMENT   reduce using rule 30 (exp -> FALSE .)
    DECREMENT       reduce using rule 30 (exp -> FALSE .)
    EXPONENCIACAO   reduce using rule 30 (exp -> FALSE .)
    INCREMENT       reduce using rule 30 (exp -> FALSE .)
    RESTO           reduce using rule 30 (exp -> FALSE .)
    MULT            reduce using rule 30 (exp -> FALSE .)
    DIV             reduce using rule 30 (exp -> FALSE .)
    SUB             reduce using rule 30 (exp -> FALSE .)
    TERNARIO2       reduce using rule 30 (exp -> FALSE .)
    RPAREN          reduce using rule 30 (exp -> FALSE .)
    VIRGULA         reduce using rule 30 (exp -> FALSE .)
    RCOLCHETE       reduce using rule 30 (exp -> FALSE .)


state 28

    (31) exp -> TRUE .

    PV              reduce using rule 31 (exp -> TRUE .)
    SOMA            reduce using rule 31 (exp -> TRUE .)
    TERNARIO1       reduce using rule 31 (exp -> TRUE .)
    OR              reduce using rule 31 (exp -> TRUE .)
    AND             reduce using rule 31 (exp -> TRUE .)
    MAIORIGUALQ     reduce using rule 31 (exp -> TRUE .)
    MENORIGUALQ     reduce using rule 31 (exp -> TRUE .)
    MENORQ          reduce using rule 31 (exp -> TRUE .)
    MAIORQ          reduce using rule 31 (exp -> TRUE .)
    DIFERENTEPACARAI reduce using rule 31 (exp -> TRUE .)
    DIFERENTE       reduce using rule 31 (exp -> TRUE .)
    IGUALPACARAI    reduce using rule 31 (exp -> TRUE .)
    IGUAL           reduce using rule 31 (exp -> TRUE .)
    RESTOINCREMENT  reduce using rule 31 (exp -> TRUE .)
    DIVINCREMENT    reduce using rule 31 (exp -> TRUE .)
    MULTINCREMENT   reduce using rule 31 (exp -> TRUE .)
    DECREMENT       reduce using rule 31 (exp -> TRUE .)
    EXPONENCIACAO   reduce using rule 31 (exp -> TRUE .)
    INCREMENT       reduce using rule 31 (exp -> TRUE .)
    RESTO           reduce using rule 31 (exp -> TRUE .)
    MULT            reduce using rule 31 (exp -> TRUE .)
    DIV             reduce using rule 31 (exp -> TRUE .)
    SUB             reduce using rule 31 (exp -> TRUE .)
    TERNARIO2       reduce using rule 31 (exp -> TRUE .)
    RPAREN          reduce using rule 31 (exp -> TRUE .)
    VIRGULA         reduce using rule 31 (exp -> TRUE .)
    RCOLCHETE       reduce using rule 31 (exp -> TRUE .)


state 29

    (32) exp -> string .

    PV              reduce using rule 32 (exp -> string .)
    SOMA            reduce using rule 32 (exp -> string .)
    TERNARIO1       reduce using rule 32 (exp -> string .)
    OR              reduce using rule 32 (exp -> string .)
    AND             reduce using rule 32 (exp -> string .)
    MAIORIGUALQ     reduce using rule 32 (exp -> string .)
    MENORIGUALQ     reduce using rule 32 (exp -> string .)
    MENORQ          reduce using rule 32 (exp -> string .)
    MAIORQ          reduce using rule 32 (exp -> string .)
    DIFERENTEPACARAI reduce using rule 32 (exp -> string .)
    DIFERENTE       reduce using rule 32 (exp -> string .)
    IGUALPACARAI    reduce using rule 32 (exp -> string .)
    IGUAL           reduce using rule 32 (exp -> string .)
    RESTOINCREMENT  reduce using rule 32 (exp -> string .)
    DIVINCREMENT    reduce using rule 32 (exp -> string .)
    MULTINCREMENT   reduce using rule 32 (exp -> string .)
    DECREMENT       reduce using rule 32 (exp -> string .)
    EXPONENCIACAO   reduce using rule 32 (exp -> string .)
    INCREMENT       reduce using rule 32 (exp -> string .)
    RESTO           reduce using rule 32 (exp -> string .)
    MULT            reduce using rule 32 (exp -> string .)
    DIV             reduce using rule 32 (exp -> string .)
    SUB             reduce using rule 32 (exp -> string .)
    TERNARIO2       reduce using rule 32 (exp -> string .)
    RPAREN          reduce using rule 32 (exp -> string .)
    VIRGULA         reduce using rule 32 (exp -> string .)
    RCOLCHETE       reduce using rule 32 (exp -> string .)


state 30

    (34) exp -> FLOAT .

    PV              reduce using rule 34 (exp -> FLOAT .)
    SOMA            reduce using rule 34 (exp -> FLOAT .)
    TERNARIO1       reduce using rule 34 (exp -> FLOAT .)
    OR              reduce using rule 34 (exp -> FLOAT .)
    AND             reduce using rule 34 (exp -> FLOAT .)
    MAIORIGUALQ     reduce using rule 34 (exp -> FLOAT .)
    MENORIGUALQ     reduce using rule 34 (exp -> FLOAT .)
    MENORQ          reduce using rule 34 (exp -> FLOAT .)
    MAIORQ          reduce using rule 34 (exp -> FLOAT .)
    DIFERENTEPACARAI reduce using rule 34 (exp -> FLOAT .)
    DIFERENTE       reduce using rule 34 (exp -> FLOAT .)
    IGUALPACARAI    reduce using rule 34 (exp -> FLOAT .)
    IGUAL           reduce using rule 34 (exp -> FLOAT .)
    RESTOINCREMENT  reduce using rule 34 (exp -> FLOAT .)
    DIVINCREMENT    reduce using rule 34 (exp -> FLOAT .)
    MULTINCREMENT   reduce using rule 34 (exp -> FLOAT .)
    DECREMENT       reduce using rule 34 (exp -> FLOAT .)
    EXPONENCIACAO   reduce using rule 34 (exp -> FLOAT .)
    INCREMENT       reduce using rule 34 (exp -> FLOAT .)
    RESTO           reduce using rule 34 (exp -> FLOAT .)
    MULT            reduce using rule 34 (exp -> FLOAT .)
    DIV             reduce using rule 34 (exp -> FLOAT .)
    SUB             reduce using rule 34 (exp -> FLOAT .)
    TERNARIO2       reduce using rule 34 (exp -> FLOAT .)
    RPAREN          reduce using rule 34 (exp -> FLOAT .)
    VIRGULA         reduce using rule 34 (exp -> FLOAT .)
    RCOLCHETE       reduce using rule 34 (exp -> FLOAT .)


state 31

    (36) exp -> assign .

    PV              reduce using rule 36 (exp -> assign .)
    SOMA            reduce using rule 36 (exp -> assign .)
    TERNARIO1       reduce using rule 36 (exp -> assign .)
    OR              reduce using rule 36 (exp -> assign .)
    AND             reduce using rule 36 (exp -> assign .)
    MAIORIGUALQ     reduce using rule 36 (exp -> assign .)
    MENORIGUALQ     reduce using rule 36 (exp -> assign .)
    MENORQ          reduce using rule 36 (exp -> assign .)
    MAIORQ          reduce using rule 36 (exp -> assign .)
    DIFERENTEPACARAI reduce using rule 36 (exp -> assign .)
    DIFERENTE       reduce using rule 36 (exp -> assign .)
    IGUALPACARAI    reduce using rule 36 (exp -> assign .)
    IGUAL           reduce using rule 36 (exp -> assign .)
    RESTOINCREMENT  reduce using rule 36 (exp -> assign .)
    DIVINCREMENT    reduce using rule 36 (exp -> assign .)
    MULTINCREMENT   reduce using rule 36 (exp -> assign .)
    DECREMENT       reduce using rule 36 (exp -> assign .)
    EXPONENCIACAO   reduce using rule 36 (exp -> assign .)
    INCREMENT       reduce using rule 36 (exp -> assign .)
    RESTO           reduce using rule 36 (exp -> assign .)
    MULT            reduce using rule 36 (exp -> assign .)
    DIV             reduce using rule 36 (exp -> assign .)
    SUB             reduce using rule 36 (exp -> assign .)
    TERNARIO2       reduce using rule 36 (exp -> assign .)
    RPAREN          reduce using rule 36 (exp -> assign .)
    VIRGULA         reduce using rule 36 (exp -> assign .)
    RCOLCHETE       reduce using rule 36 (exp -> assign .)


state 32

    (37) exp -> call .

    PV              reduce using rule 37 (exp -> call .)
    SOMA            reduce using rule 37 (exp -> call .)
    TERNARIO1       reduce using rule 37 (exp -> call .)
    OR              reduce using rule 37 (exp -> call .)
    AND             reduce using rule 37 (exp -> call .)
    MAIORIGUALQ     reduce using rule 37 (exp -> call .)
    MENORIGUALQ     reduce using rule 37 (exp -> call .)
    MENORQ          reduce using rule 37 (exp -> call .)
    MAIORQ          reduce using rule 37 (exp -> call .)
    DIFERENTEPACARAI reduce using rule 37 (exp -> call .)
    DIFERENTE       reduce using rule 37 (exp -> call .)
    IGUALPACARAI    reduce using rule 37 (exp -> call .)
    IGUAL           reduce using rule 37 (exp -> call .)
    RESTOINCREMENT  reduce using rule 37 (exp -> call .)
    DIVINCREMENT    reduce using rule 37 (exp -> call .)
    MULTINCREMENT   reduce using rule 37 (exp -> call .)
    DECREMENT       reduce using rule 37 (exp -> call .)
    EXPONENCIACAO   reduce using rule 37 (exp -> call .)
    INCREMENT       reduce using rule 37 (exp -> call .)
    RESTO           reduce using rule 37 (exp -> call .)
    MULT            reduce using rule 37 (exp -> call .)
    DIV             reduce using rule 37 (exp -> call .)
    SUB             reduce using rule 37 (exp -> call .)
    TERNARIO2       reduce using rule 37 (exp -> call .)
    RPAREN          reduce using rule 37 (exp -> call .)
    VIRGULA         reduce using rule 37 (exp -> call .)
    RCOLCHETE       reduce using rule 37 (exp -> call .)


state 33

    (39) exp -> NEGACAO . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 73
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 34

    (53) exp -> DECREMENTN . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 74
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 35

    (54) exp -> INCREMENTN . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 75
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 36

    (70) string -> STRINGD .

    PV              reduce using rule 70 (string -> STRINGD .)
    SOMA            reduce using rule 70 (string -> STRINGD .)
    TERNARIO1       reduce using rule 70 (string -> STRINGD .)
    OR              reduce using rule 70 (string -> STRINGD .)
    AND             reduce using rule 70 (string -> STRINGD .)
    MAIORIGUALQ     reduce using rule 70 (string -> STRINGD .)
    MENORIGUALQ     reduce using rule 70 (string -> STRINGD .)
    MENORQ          reduce using rule 70 (string -> STRINGD .)
    MAIORQ          reduce using rule 70 (string -> STRINGD .)
    DIFERENTEPACARAI reduce using rule 70 (string -> STRINGD .)
    DIFERENTE       reduce using rule 70 (string -> STRINGD .)
    IGUALPACARAI    reduce using rule 70 (string -> STRINGD .)
    IGUAL           reduce using rule 70 (string -> STRINGD .)
    RESTOINCREMENT  reduce using rule 70 (string -> STRINGD .)
    DIVINCREMENT    reduce using rule 70 (string -> STRINGD .)
    MULTINCREMENT   reduce using rule 70 (string -> STRINGD .)
    DECREMENT       reduce using rule 70 (string -> STRINGD .)
    EXPONENCIACAO   reduce using rule 70 (string -> STRINGD .)
    INCREMENT       reduce using rule 70 (string -> STRINGD .)
    RESTO           reduce using rule 70 (string -> STRINGD .)
    MULT            reduce using rule 70 (string -> STRINGD .)
    DIV             reduce using rule 70 (string -> STRINGD .)
    SUB             reduce using rule 70 (string -> STRINGD .)
    TERNARIO2       reduce using rule 70 (string -> STRINGD .)
    RPAREN          reduce using rule 70 (string -> STRINGD .)
    VIRGULA         reduce using rule 70 (string -> STRINGD .)
    RCOLCHETE       reduce using rule 70 (string -> STRINGD .)


state 37

    (71) string -> STRINGS .

    PV              reduce using rule 71 (string -> STRINGS .)
    SOMA            reduce using rule 71 (string -> STRINGS .)
    TERNARIO1       reduce using rule 71 (string -> STRINGS .)
    OR              reduce using rule 71 (string -> STRINGS .)
    AND             reduce using rule 71 (string -> STRINGS .)
    MAIORIGUALQ     reduce using rule 71 (string -> STRINGS .)
    MENORIGUALQ     reduce using rule 71 (string -> STRINGS .)
    MENORQ          reduce using rule 71 (string -> STRINGS .)
    MAIORQ          reduce using rule 71 (string -> STRINGS .)
    DIFERENTEPACARAI reduce using rule 71 (string -> STRINGS .)
    DIFERENTE       reduce using rule 71 (string -> STRINGS .)
    IGUALPACARAI    reduce using rule 71 (string -> STRINGS .)
    IGUAL           reduce using rule 71 (string -> STRINGS .)
    RESTOINCREMENT  reduce using rule 71 (string -> STRINGS .)
    DIVINCREMENT    reduce using rule 71 (string -> STRINGS .)
    MULTINCREMENT   reduce using rule 71 (string -> STRINGS .)
    DECREMENT       reduce using rule 71 (string -> STRINGS .)
    EXPONENCIACAO   reduce using rule 71 (string -> STRINGS .)
    INCREMENT       reduce using rule 71 (string -> STRINGS .)
    RESTO           reduce using rule 71 (string -> STRINGS .)
    MULT            reduce using rule 71 (string -> STRINGS .)
    DIV             reduce using rule 71 (string -> STRINGS .)
    SUB             reduce using rule 71 (string -> STRINGS .)
    TERNARIO2       reduce using rule 71 (string -> STRINGS .)
    RPAREN          reduce using rule 71 (string -> STRINGS .)
    VIRGULA         reduce using rule 71 (string -> STRINGS .)
    RCOLCHETE       reduce using rule 71 (string -> STRINGS .)


state 38

    (6) vardecl -> tipodecl ID ATRIBUICAO . exp
    (8) vardecl -> tipodecl ID ATRIBUICAO . LCOLCHETE listexp RCOLCHETE
    (10) vardecl -> tipodecl ID ATRIBUICAO . LCOLCHETE RCOLCHETE
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    LCOLCHETE       shift and go to state 77
    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 76
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 39

    (7) vardecl -> tipodecl ID LCOLCHETE . INTEIRO RCOLCHETE
    (9) vardecl -> tipodecl ID LCOLCHETE . INTEIRO RCOLCHETE ATRIBUICAO listexp

    INTEIRO         shift and go to state 78


state 40

    (12) signature -> FUNCTION ID LPAREN . sigParams RPAREN
    (13) sigParams -> . ID
    (14) sigParams -> . ID VIRGULA sigParams

    ID              shift and go to state 79

    sigParams                      shift and go to state 80

state 41

    (15) body -> LCHAVES stms RCHAVES .

    FUNCTION        reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    LET             reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    CONST           reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    VAR             reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    $end            reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    RETURN          reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    WHILE           reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    IF              reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    FOR             reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    FALSE           reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    TRUE            reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    ID              reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    FLOAT           reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    INTEIRO         reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    NEGACAO         reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    DECREMENTN      reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    INCREMENTN      reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    STRINGD         reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    STRINGS         reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    RCHAVES         reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    ELSE            reduce using rule 15 (body -> LCHAVES stms RCHAVES .)


state 42

    (17) stms -> stm stms .

    RCHAVES         reduce using rule 17 (stms -> stm stms .)


state 43

    (18) stm -> vardecl PV .

    RETURN          reduce using rule 18 (stm -> vardecl PV .)
    WHILE           reduce using rule 18 (stm -> vardecl PV .)
    IF              reduce using rule 18 (stm -> vardecl PV .)
    FOR             reduce using rule 18 (stm -> vardecl PV .)
    FALSE           reduce using rule 18 (stm -> vardecl PV .)
    TRUE            reduce using rule 18 (stm -> vardecl PV .)
    ID              reduce using rule 18 (stm -> vardecl PV .)
    FLOAT           reduce using rule 18 (stm -> vardecl PV .)
    INTEIRO         reduce using rule 18 (stm -> vardecl PV .)
    NEGACAO         reduce using rule 18 (stm -> vardecl PV .)
    DECREMENTN      reduce using rule 18 (stm -> vardecl PV .)
    INCREMENTN      reduce using rule 18 (stm -> vardecl PV .)
    LET             reduce using rule 18 (stm -> vardecl PV .)
    CONST           reduce using rule 18 (stm -> vardecl PV .)
    VAR             reduce using rule 18 (stm -> vardecl PV .)
    STRINGD         reduce using rule 18 (stm -> vardecl PV .)
    STRINGS         reduce using rule 18 (stm -> vardecl PV .)
    RCHAVES         reduce using rule 18 (stm -> vardecl PV .)
    ELSE            reduce using rule 18 (stm -> vardecl PV .)


state 44

    (19) stm -> RETURN exp . PV
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              shift and go to state 81
    SOMA            shift and go to state 46
    TERNARIO1       shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    MAIORIGUALQ     shift and go to state 50
    MENORIGUALQ     shift and go to state 51
    MENORQ          shift and go to state 52
    MAIORQ          shift and go to state 53
    DIFERENTEPACARAI shift and go to state 54
    DIFERENTE       shift and go to state 55
    IGUALPACARAI    shift and go to state 56
    IGUAL           shift and go to state 57
    RESTOINCREMENT  shift and go to state 58
    DIVINCREMENT    shift and go to state 59
    MULTINCREMENT   shift and go to state 60
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67


state 45

    (20) stm -> exp PV .

    RETURN          reduce using rule 20 (stm -> exp PV .)
    WHILE           reduce using rule 20 (stm -> exp PV .)
    IF              reduce using rule 20 (stm -> exp PV .)
    FOR             reduce using rule 20 (stm -> exp PV .)
    FALSE           reduce using rule 20 (stm -> exp PV .)
    TRUE            reduce using rule 20 (stm -> exp PV .)
    ID              reduce using rule 20 (stm -> exp PV .)
    FLOAT           reduce using rule 20 (stm -> exp PV .)
    INTEIRO         reduce using rule 20 (stm -> exp PV .)
    NEGACAO         reduce using rule 20 (stm -> exp PV .)
    DECREMENTN      reduce using rule 20 (stm -> exp PV .)
    INCREMENTN      reduce using rule 20 (stm -> exp PV .)
    LET             reduce using rule 20 (stm -> exp PV .)
    CONST           reduce using rule 20 (stm -> exp PV .)
    VAR             reduce using rule 20 (stm -> exp PV .)
    STRINGD         reduce using rule 20 (stm -> exp PV .)
    STRINGS         reduce using rule 20 (stm -> exp PV .)
    RCHAVES         reduce using rule 20 (stm -> exp PV .)
    ELSE            reduce using rule 20 (stm -> exp PV .)


state 46

    (29) exp -> exp SOMA . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 82
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 47

    (38) exp -> exp TERNARIO1 . exp TERNARIO2 exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 83
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 48

    (40) exp -> exp OR . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 84
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 49

    (41) exp -> exp AND . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 85
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 50

    (42) exp -> exp MAIORIGUALQ . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 86
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 51

    (43) exp -> exp MENORIGUALQ . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 87
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 52

    (44) exp -> exp MENORQ . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 88
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 53

    (45) exp -> exp MAIORQ . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 89
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 54

    (46) exp -> exp DIFERENTEPACARAI . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 90
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 55

    (47) exp -> exp DIFERENTE . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 91
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 56

    (48) exp -> exp IGUALPACARAI . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 92
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 57

    (49) exp -> exp IGUAL . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 93
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 58

    (50) exp -> exp RESTOINCREMENT . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 94
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 59

    (51) exp -> exp DIVINCREMENT . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 95
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 60

    (52) exp -> exp MULTINCREMENT . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 96
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 61

    (55) exp -> exp DECREMENT .

    PV              reduce using rule 55 (exp -> exp DECREMENT .)
    SOMA            reduce using rule 55 (exp -> exp DECREMENT .)
    TERNARIO1       reduce using rule 55 (exp -> exp DECREMENT .)
    OR              reduce using rule 55 (exp -> exp DECREMENT .)
    AND             reduce using rule 55 (exp -> exp DECREMENT .)
    MAIORIGUALQ     reduce using rule 55 (exp -> exp DECREMENT .)
    MENORIGUALQ     reduce using rule 55 (exp -> exp DECREMENT .)
    MENORQ          reduce using rule 55 (exp -> exp DECREMENT .)
    MAIORQ          reduce using rule 55 (exp -> exp DECREMENT .)
    DIFERENTEPACARAI reduce using rule 55 (exp -> exp DECREMENT .)
    DIFERENTE       reduce using rule 55 (exp -> exp DECREMENT .)
    IGUALPACARAI    reduce using rule 55 (exp -> exp DECREMENT .)
    IGUAL           reduce using rule 55 (exp -> exp DECREMENT .)
    RESTOINCREMENT  reduce using rule 55 (exp -> exp DECREMENT .)
    DIVINCREMENT    reduce using rule 55 (exp -> exp DECREMENT .)
    MULTINCREMENT   reduce using rule 55 (exp -> exp DECREMENT .)
    DECREMENT       reduce using rule 55 (exp -> exp DECREMENT .)
    EXPONENCIACAO   reduce using rule 55 (exp -> exp DECREMENT .)
    INCREMENT       reduce using rule 55 (exp -> exp DECREMENT .)
    RESTO           reduce using rule 55 (exp -> exp DECREMENT .)
    MULT            reduce using rule 55 (exp -> exp DECREMENT .)
    DIV             reduce using rule 55 (exp -> exp DECREMENT .)
    SUB             reduce using rule 55 (exp -> exp DECREMENT .)
    TERNARIO2       reduce using rule 55 (exp -> exp DECREMENT .)
    RPAREN          reduce using rule 55 (exp -> exp DECREMENT .)
    VIRGULA         reduce using rule 55 (exp -> exp DECREMENT .)
    RCOLCHETE       reduce using rule 55 (exp -> exp DECREMENT .)


state 62

    (56) exp -> exp EXPONENCIACAO . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 97
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 63

    (57) exp -> exp INCREMENT .

    PV              reduce using rule 57 (exp -> exp INCREMENT .)
    SOMA            reduce using rule 57 (exp -> exp INCREMENT .)
    TERNARIO1       reduce using rule 57 (exp -> exp INCREMENT .)
    OR              reduce using rule 57 (exp -> exp INCREMENT .)
    AND             reduce using rule 57 (exp -> exp INCREMENT .)
    MAIORIGUALQ     reduce using rule 57 (exp -> exp INCREMENT .)
    MENORIGUALQ     reduce using rule 57 (exp -> exp INCREMENT .)
    MENORQ          reduce using rule 57 (exp -> exp INCREMENT .)
    MAIORQ          reduce using rule 57 (exp -> exp INCREMENT .)
    DIFERENTEPACARAI reduce using rule 57 (exp -> exp INCREMENT .)
    DIFERENTE       reduce using rule 57 (exp -> exp INCREMENT .)
    IGUALPACARAI    reduce using rule 57 (exp -> exp INCREMENT .)
    IGUAL           reduce using rule 57 (exp -> exp INCREMENT .)
    RESTOINCREMENT  reduce using rule 57 (exp -> exp INCREMENT .)
    DIVINCREMENT    reduce using rule 57 (exp -> exp INCREMENT .)
    MULTINCREMENT   reduce using rule 57 (exp -> exp INCREMENT .)
    DECREMENT       reduce using rule 57 (exp -> exp INCREMENT .)
    EXPONENCIACAO   reduce using rule 57 (exp -> exp INCREMENT .)
    INCREMENT       reduce using rule 57 (exp -> exp INCREMENT .)
    RESTO           reduce using rule 57 (exp -> exp INCREMENT .)
    MULT            reduce using rule 57 (exp -> exp INCREMENT .)
    DIV             reduce using rule 57 (exp -> exp INCREMENT .)
    SUB             reduce using rule 57 (exp -> exp INCREMENT .)
    TERNARIO2       reduce using rule 57 (exp -> exp INCREMENT .)
    RPAREN          reduce using rule 57 (exp -> exp INCREMENT .)
    VIRGULA         reduce using rule 57 (exp -> exp INCREMENT .)
    RCOLCHETE       reduce using rule 57 (exp -> exp INCREMENT .)


state 64

    (58) exp -> exp RESTO . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 98
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 65

    (59) exp -> exp MULT . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 99
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 66

    (60) exp -> exp DIV . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 100
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 67

    (61) exp -> exp SUB . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 101
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 68

    (21) stm -> WHILE LPAREN . exp RPAREN bodyorstm
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 102
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 69

    (22) stm -> IF LPAREN . exp RPAREN bodyorstm
    (24) stm -> IF LPAREN . exp RPAREN bodyorstm ELSE bodyorstm
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 103
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 70

    (23) stm -> FOR LPAREN . opexp PV opexp PV opexp RPAREN bodyorstm
    (25) opexp -> . exp
    (26) opexp -> . VOID
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    VOID            shift and go to state 106
    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    opexp                          shift and go to state 104
    exp                            shift and go to state 105
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 71

    (66) assign -> ID ATRIBUICAO . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 107
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 72

    (62) call -> ID LPAREN . params RPAREN
    (63) call -> ID LPAREN . RPAREN
    (64) params -> . exp VIRGULA params
    (65) params -> . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    RPAREN          shift and go to state 109
    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    params                         shift and go to state 108
    exp                            shift and go to state 110
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 73

    (39) exp -> NEGACAO exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 39 (exp -> NEGACAO exp .)
    SOMA            reduce using rule 39 (exp -> NEGACAO exp .)
    TERNARIO1       reduce using rule 39 (exp -> NEGACAO exp .)
    OR              reduce using rule 39 (exp -> NEGACAO exp .)
    AND             reduce using rule 39 (exp -> NEGACAO exp .)
    MAIORIGUALQ     reduce using rule 39 (exp -> NEGACAO exp .)
    MENORIGUALQ     reduce using rule 39 (exp -> NEGACAO exp .)
    MENORQ          reduce using rule 39 (exp -> NEGACAO exp .)
    MAIORQ          reduce using rule 39 (exp -> NEGACAO exp .)
    DIFERENTEPACARAI reduce using rule 39 (exp -> NEGACAO exp .)
    DIFERENTE       reduce using rule 39 (exp -> NEGACAO exp .)
    IGUALPACARAI    reduce using rule 39 (exp -> NEGACAO exp .)
    IGUAL           reduce using rule 39 (exp -> NEGACAO exp .)
    RESTOINCREMENT  reduce using rule 39 (exp -> NEGACAO exp .)
    DIVINCREMENT    reduce using rule 39 (exp -> NEGACAO exp .)
    MULTINCREMENT   reduce using rule 39 (exp -> NEGACAO exp .)
    EXPONENCIACAO   reduce using rule 39 (exp -> NEGACAO exp .)
    RESTO           reduce using rule 39 (exp -> NEGACAO exp .)
    MULT            reduce using rule 39 (exp -> NEGACAO exp .)
    DIV             reduce using rule 39 (exp -> NEGACAO exp .)
    SUB             reduce using rule 39 (exp -> NEGACAO exp .)
    TERNARIO2       reduce using rule 39 (exp -> NEGACAO exp .)
    RPAREN          reduce using rule 39 (exp -> NEGACAO exp .)
    VIRGULA         reduce using rule 39 (exp -> NEGACAO exp .)
    RCOLCHETE       reduce using rule 39 (exp -> NEGACAO exp .)
    DECREMENT       shift and go to state 61
    INCREMENT       shift and go to state 63

  ! DECREMENT       [ reduce using rule 39 (exp -> NEGACAO exp .) ]
  ! INCREMENT       [ reduce using rule 39 (exp -> NEGACAO exp .) ]
  ! SOMA            [ shift and go to state 46 ]
  ! TERNARIO1       [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! MAIORIGUALQ     [ shift and go to state 50 ]
  ! MENORIGUALQ     [ shift and go to state 51 ]
  ! MENORQ          [ shift and go to state 52 ]
  ! MAIORQ          [ shift and go to state 53 ]
  ! DIFERENTEPACARAI [ shift and go to state 54 ]
  ! DIFERENTE       [ shift and go to state 55 ]
  ! IGUALPACARAI    [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! RESTOINCREMENT  [ shift and go to state 58 ]
  ! DIVINCREMENT    [ shift and go to state 59 ]
  ! MULTINCREMENT   [ shift and go to state 60 ]
  ! EXPONENCIACAO   [ shift and go to state 62 ]
  ! RESTO           [ shift and go to state 64 ]
  ! MULT            [ shift and go to state 65 ]
  ! DIV             [ shift and go to state 66 ]
  ! SUB             [ shift and go to state 67 ]


state 74

    (53) exp -> DECREMENTN exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 53 (exp -> DECREMENTN exp .)
    TERNARIO2       reduce using rule 53 (exp -> DECREMENTN exp .)
    RPAREN          reduce using rule 53 (exp -> DECREMENTN exp .)
    VIRGULA         reduce using rule 53 (exp -> DECREMENTN exp .)
    RCOLCHETE       reduce using rule 53 (exp -> DECREMENTN exp .)
    SOMA            shift and go to state 46
    TERNARIO1       shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    MAIORIGUALQ     shift and go to state 50
    MENORIGUALQ     shift and go to state 51
    MENORQ          shift and go to state 52
    MAIORQ          shift and go to state 53
    DIFERENTEPACARAI shift and go to state 54
    DIFERENTE       shift and go to state 55
    IGUALPACARAI    shift and go to state 56
    IGUAL           shift and go to state 57
    RESTOINCREMENT  shift and go to state 58
    DIVINCREMENT    shift and go to state 59
    MULTINCREMENT   shift and go to state 60
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67

  ! SOMA            [ reduce using rule 53 (exp -> DECREMENTN exp .) ]
  ! TERNARIO1       [ reduce using rule 53 (exp -> DECREMENTN exp .) ]
  ! OR              [ reduce using rule 53 (exp -> DECREMENTN exp .) ]
  ! AND             [ reduce using rule 53 (exp -> DECREMENTN exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 53 (exp -> DECREMENTN exp .) ]
  ! MENORIGUALQ     [ reduce using rule 53 (exp -> DECREMENTN exp .) ]
  ! MENORQ          [ reduce using rule 53 (exp -> DECREMENTN exp .) ]
  ! MAIORQ          [ reduce using rule 53 (exp -> DECREMENTN exp .) ]
  ! DIFERENTEPACARAI [ reduce using rule 53 (exp -> DECREMENTN exp .) ]
  ! DIFERENTE       [ reduce using rule 53 (exp -> DECREMENTN exp .) ]
  ! IGUALPACARAI    [ reduce using rule 53 (exp -> DECREMENTN exp .) ]
  ! IGUAL           [ reduce using rule 53 (exp -> DECREMENTN exp .) ]
  ! RESTOINCREMENT  [ reduce using rule 53 (exp -> DECREMENTN exp .) ]
  ! DIVINCREMENT    [ reduce using rule 53 (exp -> DECREMENTN exp .) ]
  ! MULTINCREMENT   [ reduce using rule 53 (exp -> DECREMENTN exp .) ]
  ! DECREMENT       [ reduce using rule 53 (exp -> DECREMENTN exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 53 (exp -> DECREMENTN exp .) ]
  ! INCREMENT       [ reduce using rule 53 (exp -> DECREMENTN exp .) ]
  ! RESTO           [ reduce using rule 53 (exp -> DECREMENTN exp .) ]
  ! MULT            [ reduce using rule 53 (exp -> DECREMENTN exp .) ]
  ! DIV             [ reduce using rule 53 (exp -> DECREMENTN exp .) ]
  ! SUB             [ reduce using rule 53 (exp -> DECREMENTN exp .) ]


state 75

    (54) exp -> INCREMENTN exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 54 (exp -> INCREMENTN exp .)
    TERNARIO2       reduce using rule 54 (exp -> INCREMENTN exp .)
    RPAREN          reduce using rule 54 (exp -> INCREMENTN exp .)
    VIRGULA         reduce using rule 54 (exp -> INCREMENTN exp .)
    RCOLCHETE       reduce using rule 54 (exp -> INCREMENTN exp .)
    SOMA            shift and go to state 46
    TERNARIO1       shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    MAIORIGUALQ     shift and go to state 50
    MENORIGUALQ     shift and go to state 51
    MENORQ          shift and go to state 52
    MAIORQ          shift and go to state 53
    DIFERENTEPACARAI shift and go to state 54
    DIFERENTE       shift and go to state 55
    IGUALPACARAI    shift and go to state 56
    IGUAL           shift and go to state 57
    RESTOINCREMENT  shift and go to state 58
    DIVINCREMENT    shift and go to state 59
    MULTINCREMENT   shift and go to state 60
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67

  ! SOMA            [ reduce using rule 54 (exp -> INCREMENTN exp .) ]
  ! TERNARIO1       [ reduce using rule 54 (exp -> INCREMENTN exp .) ]
  ! OR              [ reduce using rule 54 (exp -> INCREMENTN exp .) ]
  ! AND             [ reduce using rule 54 (exp -> INCREMENTN exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 54 (exp -> INCREMENTN exp .) ]
  ! MENORIGUALQ     [ reduce using rule 54 (exp -> INCREMENTN exp .) ]
  ! MENORQ          [ reduce using rule 54 (exp -> INCREMENTN exp .) ]
  ! MAIORQ          [ reduce using rule 54 (exp -> INCREMENTN exp .) ]
  ! DIFERENTEPACARAI [ reduce using rule 54 (exp -> INCREMENTN exp .) ]
  ! DIFERENTE       [ reduce using rule 54 (exp -> INCREMENTN exp .) ]
  ! IGUALPACARAI    [ reduce using rule 54 (exp -> INCREMENTN exp .) ]
  ! IGUAL           [ reduce using rule 54 (exp -> INCREMENTN exp .) ]
  ! RESTOINCREMENT  [ reduce using rule 54 (exp -> INCREMENTN exp .) ]
  ! DIVINCREMENT    [ reduce using rule 54 (exp -> INCREMENTN exp .) ]
  ! MULTINCREMENT   [ reduce using rule 54 (exp -> INCREMENTN exp .) ]
  ! DECREMENT       [ reduce using rule 54 (exp -> INCREMENTN exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 54 (exp -> INCREMENTN exp .) ]
  ! INCREMENT       [ reduce using rule 54 (exp -> INCREMENTN exp .) ]
  ! RESTO           [ reduce using rule 54 (exp -> INCREMENTN exp .) ]
  ! MULT            [ reduce using rule 54 (exp -> INCREMENTN exp .) ]
  ! DIV             [ reduce using rule 54 (exp -> INCREMENTN exp .) ]
  ! SUB             [ reduce using rule 54 (exp -> INCREMENTN exp .) ]


state 76

    (6) vardecl -> tipodecl ID ATRIBUICAO exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .)
    SOMA            shift and go to state 46
    TERNARIO1       shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    MAIORIGUALQ     shift and go to state 50
    MENORIGUALQ     shift and go to state 51
    MENORQ          shift and go to state 52
    MAIORQ          shift and go to state 53
    DIFERENTEPACARAI shift and go to state 54
    DIFERENTE       shift and go to state 55
    IGUALPACARAI    shift and go to state 56
    IGUAL           shift and go to state 57
    RESTOINCREMENT  shift and go to state 58
    DIVINCREMENT    shift and go to state 59
    MULTINCREMENT   shift and go to state 60
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67


state 77

    (8) vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE . listexp RCOLCHETE
    (10) vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE . RCOLCHETE
    (72) listexp -> . exp
    (73) listexp -> . exp VIRGULA listexp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    RCOLCHETE       shift and go to state 112
    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    listexp                        shift and go to state 111
    exp                            shift and go to state 113
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 78

    (7) vardecl -> tipodecl ID LCOLCHETE INTEIRO . RCOLCHETE
    (9) vardecl -> tipodecl ID LCOLCHETE INTEIRO . RCOLCHETE ATRIBUICAO listexp

    RCOLCHETE       shift and go to state 114


state 79

    (13) sigParams -> ID .
    (14) sigParams -> ID . VIRGULA sigParams

    RPAREN          reduce using rule 13 (sigParams -> ID .)
    VIRGULA         shift and go to state 115


state 80

    (12) signature -> FUNCTION ID LPAREN sigParams . RPAREN

    RPAREN          shift and go to state 116


state 81

    (19) stm -> RETURN exp PV .

    RETURN          reduce using rule 19 (stm -> RETURN exp PV .)
    WHILE           reduce using rule 19 (stm -> RETURN exp PV .)
    IF              reduce using rule 19 (stm -> RETURN exp PV .)
    FOR             reduce using rule 19 (stm -> RETURN exp PV .)
    FALSE           reduce using rule 19 (stm -> RETURN exp PV .)
    TRUE            reduce using rule 19 (stm -> RETURN exp PV .)
    ID              reduce using rule 19 (stm -> RETURN exp PV .)
    FLOAT           reduce using rule 19 (stm -> RETURN exp PV .)
    INTEIRO         reduce using rule 19 (stm -> RETURN exp PV .)
    NEGACAO         reduce using rule 19 (stm -> RETURN exp PV .)
    DECREMENTN      reduce using rule 19 (stm -> RETURN exp PV .)
    INCREMENTN      reduce using rule 19 (stm -> RETURN exp PV .)
    LET             reduce using rule 19 (stm -> RETURN exp PV .)
    CONST           reduce using rule 19 (stm -> RETURN exp PV .)
    VAR             reduce using rule 19 (stm -> RETURN exp PV .)
    STRINGD         reduce using rule 19 (stm -> RETURN exp PV .)
    STRINGS         reduce using rule 19 (stm -> RETURN exp PV .)
    RCHAVES         reduce using rule 19 (stm -> RETURN exp PV .)
    ELSE            reduce using rule 19 (stm -> RETURN exp PV .)


state 82

    (29) exp -> exp SOMA exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 29 (exp -> exp SOMA exp .)
    SOMA            reduce using rule 29 (exp -> exp SOMA exp .)
    TERNARIO1       reduce using rule 29 (exp -> exp SOMA exp .)
    OR              reduce using rule 29 (exp -> exp SOMA exp .)
    AND             reduce using rule 29 (exp -> exp SOMA exp .)
    MAIORIGUALQ     reduce using rule 29 (exp -> exp SOMA exp .)
    MENORIGUALQ     reduce using rule 29 (exp -> exp SOMA exp .)
    MENORQ          reduce using rule 29 (exp -> exp SOMA exp .)
    MAIORQ          reduce using rule 29 (exp -> exp SOMA exp .)
    DIFERENTEPACARAI reduce using rule 29 (exp -> exp SOMA exp .)
    DIFERENTE       reduce using rule 29 (exp -> exp SOMA exp .)
    IGUALPACARAI    reduce using rule 29 (exp -> exp SOMA exp .)
    IGUAL           reduce using rule 29 (exp -> exp SOMA exp .)
    RESTOINCREMENT  reduce using rule 29 (exp -> exp SOMA exp .)
    DIVINCREMENT    reduce using rule 29 (exp -> exp SOMA exp .)
    MULTINCREMENT   reduce using rule 29 (exp -> exp SOMA exp .)
    SUB             reduce using rule 29 (exp -> exp SOMA exp .)
    TERNARIO2       reduce using rule 29 (exp -> exp SOMA exp .)
    RPAREN          reduce using rule 29 (exp -> exp SOMA exp .)
    VIRGULA         reduce using rule 29 (exp -> exp SOMA exp .)
    RCOLCHETE       reduce using rule 29 (exp -> exp SOMA exp .)
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66

  ! DECREMENT       [ reduce using rule 29 (exp -> exp SOMA exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 29 (exp -> exp SOMA exp .) ]
  ! INCREMENT       [ reduce using rule 29 (exp -> exp SOMA exp .) ]
  ! RESTO           [ reduce using rule 29 (exp -> exp SOMA exp .) ]
  ! MULT            [ reduce using rule 29 (exp -> exp SOMA exp .) ]
  ! DIV             [ reduce using rule 29 (exp -> exp SOMA exp .) ]
  ! SOMA            [ shift and go to state 46 ]
  ! TERNARIO1       [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! MAIORIGUALQ     [ shift and go to state 50 ]
  ! MENORIGUALQ     [ shift and go to state 51 ]
  ! MENORQ          [ shift and go to state 52 ]
  ! MAIORQ          [ shift and go to state 53 ]
  ! DIFERENTEPACARAI [ shift and go to state 54 ]
  ! DIFERENTE       [ shift and go to state 55 ]
  ! IGUALPACARAI    [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! RESTOINCREMENT  [ shift and go to state 58 ]
  ! DIVINCREMENT    [ shift and go to state 59 ]
  ! MULTINCREMENT   [ shift and go to state 60 ]
  ! SUB             [ shift and go to state 67 ]


state 83

    (38) exp -> exp TERNARIO1 exp . TERNARIO2 exp
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    TERNARIO2       shift and go to state 117
    SOMA            shift and go to state 46
    TERNARIO1       shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    MAIORIGUALQ     shift and go to state 50
    MENORIGUALQ     shift and go to state 51
    MENORQ          shift and go to state 52
    MAIORQ          shift and go to state 53
    DIFERENTEPACARAI shift and go to state 54
    DIFERENTE       shift and go to state 55
    IGUALPACARAI    shift and go to state 56
    IGUAL           shift and go to state 57
    RESTOINCREMENT  shift and go to state 58
    DIVINCREMENT    shift and go to state 59
    MULTINCREMENT   shift and go to state 60
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67


state 84

    (40) exp -> exp OR exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 40 (exp -> exp OR exp .)
    TERNARIO1       reduce using rule 40 (exp -> exp OR exp .)
    OR              reduce using rule 40 (exp -> exp OR exp .)
    RESTOINCREMENT  reduce using rule 40 (exp -> exp OR exp .)
    DIVINCREMENT    reduce using rule 40 (exp -> exp OR exp .)
    MULTINCREMENT   reduce using rule 40 (exp -> exp OR exp .)
    TERNARIO2       reduce using rule 40 (exp -> exp OR exp .)
    RPAREN          reduce using rule 40 (exp -> exp OR exp .)
    VIRGULA         reduce using rule 40 (exp -> exp OR exp .)
    RCOLCHETE       reduce using rule 40 (exp -> exp OR exp .)
    SOMA            shift and go to state 46
    AND             shift and go to state 49
    MAIORIGUALQ     shift and go to state 50
    MENORIGUALQ     shift and go to state 51
    MENORQ          shift and go to state 52
    MAIORQ          shift and go to state 53
    DIFERENTEPACARAI shift and go to state 54
    DIFERENTE       shift and go to state 55
    IGUALPACARAI    shift and go to state 56
    IGUAL           shift and go to state 57
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67

  ! SOMA            [ reduce using rule 40 (exp -> exp OR exp .) ]
  ! AND             [ reduce using rule 40 (exp -> exp OR exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 40 (exp -> exp OR exp .) ]
  ! MENORIGUALQ     [ reduce using rule 40 (exp -> exp OR exp .) ]
  ! MENORQ          [ reduce using rule 40 (exp -> exp OR exp .) ]
  ! MAIORQ          [ reduce using rule 40 (exp -> exp OR exp .) ]
  ! DIFERENTEPACARAI [ reduce using rule 40 (exp -> exp OR exp .) ]
  ! DIFERENTE       [ reduce using rule 40 (exp -> exp OR exp .) ]
  ! IGUALPACARAI    [ reduce using rule 40 (exp -> exp OR exp .) ]
  ! IGUAL           [ reduce using rule 40 (exp -> exp OR exp .) ]
  ! DECREMENT       [ reduce using rule 40 (exp -> exp OR exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 40 (exp -> exp OR exp .) ]
  ! INCREMENT       [ reduce using rule 40 (exp -> exp OR exp .) ]
  ! RESTO           [ reduce using rule 40 (exp -> exp OR exp .) ]
  ! MULT            [ reduce using rule 40 (exp -> exp OR exp .) ]
  ! DIV             [ reduce using rule 40 (exp -> exp OR exp .) ]
  ! SUB             [ reduce using rule 40 (exp -> exp OR exp .) ]
  ! TERNARIO1       [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! RESTOINCREMENT  [ shift and go to state 58 ]
  ! DIVINCREMENT    [ shift and go to state 59 ]
  ! MULTINCREMENT   [ shift and go to state 60 ]


state 85

    (41) exp -> exp AND exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 41 (exp -> exp AND exp .)
    TERNARIO1       reduce using rule 41 (exp -> exp AND exp .)
    OR              reduce using rule 41 (exp -> exp AND exp .)
    AND             reduce using rule 41 (exp -> exp AND exp .)
    RESTOINCREMENT  reduce using rule 41 (exp -> exp AND exp .)
    DIVINCREMENT    reduce using rule 41 (exp -> exp AND exp .)
    MULTINCREMENT   reduce using rule 41 (exp -> exp AND exp .)
    TERNARIO2       reduce using rule 41 (exp -> exp AND exp .)
    RPAREN          reduce using rule 41 (exp -> exp AND exp .)
    VIRGULA         reduce using rule 41 (exp -> exp AND exp .)
    RCOLCHETE       reduce using rule 41 (exp -> exp AND exp .)
    SOMA            shift and go to state 46
    MAIORIGUALQ     shift and go to state 50
    MENORIGUALQ     shift and go to state 51
    MENORQ          shift and go to state 52
    MAIORQ          shift and go to state 53
    DIFERENTEPACARAI shift and go to state 54
    DIFERENTE       shift and go to state 55
    IGUALPACARAI    shift and go to state 56
    IGUAL           shift and go to state 57
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67

  ! SOMA            [ reduce using rule 41 (exp -> exp AND exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 41 (exp -> exp AND exp .) ]
  ! MENORIGUALQ     [ reduce using rule 41 (exp -> exp AND exp .) ]
  ! MENORQ          [ reduce using rule 41 (exp -> exp AND exp .) ]
  ! MAIORQ          [ reduce using rule 41 (exp -> exp AND exp .) ]
  ! DIFERENTEPACARAI [ reduce using rule 41 (exp -> exp AND exp .) ]
  ! DIFERENTE       [ reduce using rule 41 (exp -> exp AND exp .) ]
  ! IGUALPACARAI    [ reduce using rule 41 (exp -> exp AND exp .) ]
  ! IGUAL           [ reduce using rule 41 (exp -> exp AND exp .) ]
  ! DECREMENT       [ reduce using rule 41 (exp -> exp AND exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 41 (exp -> exp AND exp .) ]
  ! INCREMENT       [ reduce using rule 41 (exp -> exp AND exp .) ]
  ! RESTO           [ reduce using rule 41 (exp -> exp AND exp .) ]
  ! MULT            [ reduce using rule 41 (exp -> exp AND exp .) ]
  ! DIV             [ reduce using rule 41 (exp -> exp AND exp .) ]
  ! SUB             [ reduce using rule 41 (exp -> exp AND exp .) ]
  ! TERNARIO1       [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! RESTOINCREMENT  [ shift and go to state 58 ]
  ! DIVINCREMENT    [ shift and go to state 59 ]
  ! MULTINCREMENT   [ shift and go to state 60 ]


state 86

    (42) exp -> exp MAIORIGUALQ exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 42 (exp -> exp MAIORIGUALQ exp .)
    TERNARIO1       reduce using rule 42 (exp -> exp MAIORIGUALQ exp .)
    OR              reduce using rule 42 (exp -> exp MAIORIGUALQ exp .)
    AND             reduce using rule 42 (exp -> exp MAIORIGUALQ exp .)
    MAIORIGUALQ     reduce using rule 42 (exp -> exp MAIORIGUALQ exp .)
    MENORIGUALQ     reduce using rule 42 (exp -> exp MAIORIGUALQ exp .)
    MENORQ          reduce using rule 42 (exp -> exp MAIORIGUALQ exp .)
    MAIORQ          reduce using rule 42 (exp -> exp MAIORIGUALQ exp .)
    DIFERENTEPACARAI reduce using rule 42 (exp -> exp MAIORIGUALQ exp .)
    DIFERENTE       reduce using rule 42 (exp -> exp MAIORIGUALQ exp .)
    IGUALPACARAI    reduce using rule 42 (exp -> exp MAIORIGUALQ exp .)
    IGUAL           reduce using rule 42 (exp -> exp MAIORIGUALQ exp .)
    RESTOINCREMENT  reduce using rule 42 (exp -> exp MAIORIGUALQ exp .)
    DIVINCREMENT    reduce using rule 42 (exp -> exp MAIORIGUALQ exp .)
    MULTINCREMENT   reduce using rule 42 (exp -> exp MAIORIGUALQ exp .)
    TERNARIO2       reduce using rule 42 (exp -> exp MAIORIGUALQ exp .)
    RPAREN          reduce using rule 42 (exp -> exp MAIORIGUALQ exp .)
    VIRGULA         reduce using rule 42 (exp -> exp MAIORIGUALQ exp .)
    RCOLCHETE       reduce using rule 42 (exp -> exp MAIORIGUALQ exp .)
    SOMA            shift and go to state 46
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67

  ! SOMA            [ reduce using rule 42 (exp -> exp MAIORIGUALQ exp .) ]
  ! DECREMENT       [ reduce using rule 42 (exp -> exp MAIORIGUALQ exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 42 (exp -> exp MAIORIGUALQ exp .) ]
  ! INCREMENT       [ reduce using rule 42 (exp -> exp MAIORIGUALQ exp .) ]
  ! RESTO           [ reduce using rule 42 (exp -> exp MAIORIGUALQ exp .) ]
  ! MULT            [ reduce using rule 42 (exp -> exp MAIORIGUALQ exp .) ]
  ! DIV             [ reduce using rule 42 (exp -> exp MAIORIGUALQ exp .) ]
  ! SUB             [ reduce using rule 42 (exp -> exp MAIORIGUALQ exp .) ]
  ! TERNARIO1       [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! MAIORIGUALQ     [ shift and go to state 50 ]
  ! MENORIGUALQ     [ shift and go to state 51 ]
  ! MENORQ          [ shift and go to state 52 ]
  ! MAIORQ          [ shift and go to state 53 ]
  ! DIFERENTEPACARAI [ shift and go to state 54 ]
  ! DIFERENTE       [ shift and go to state 55 ]
  ! IGUALPACARAI    [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! RESTOINCREMENT  [ shift and go to state 58 ]
  ! DIVINCREMENT    [ shift and go to state 59 ]
  ! MULTINCREMENT   [ shift and go to state 60 ]


state 87

    (43) exp -> exp MENORIGUALQ exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 43 (exp -> exp MENORIGUALQ exp .)
    TERNARIO1       reduce using rule 43 (exp -> exp MENORIGUALQ exp .)
    OR              reduce using rule 43 (exp -> exp MENORIGUALQ exp .)
    AND             reduce using rule 43 (exp -> exp MENORIGUALQ exp .)
    MAIORIGUALQ     reduce using rule 43 (exp -> exp MENORIGUALQ exp .)
    MENORIGUALQ     reduce using rule 43 (exp -> exp MENORIGUALQ exp .)
    MENORQ          reduce using rule 43 (exp -> exp MENORIGUALQ exp .)
    MAIORQ          reduce using rule 43 (exp -> exp MENORIGUALQ exp .)
    DIFERENTEPACARAI reduce using rule 43 (exp -> exp MENORIGUALQ exp .)
    DIFERENTE       reduce using rule 43 (exp -> exp MENORIGUALQ exp .)
    IGUALPACARAI    reduce using rule 43 (exp -> exp MENORIGUALQ exp .)
    IGUAL           reduce using rule 43 (exp -> exp MENORIGUALQ exp .)
    RESTOINCREMENT  reduce using rule 43 (exp -> exp MENORIGUALQ exp .)
    DIVINCREMENT    reduce using rule 43 (exp -> exp MENORIGUALQ exp .)
    MULTINCREMENT   reduce using rule 43 (exp -> exp MENORIGUALQ exp .)
    TERNARIO2       reduce using rule 43 (exp -> exp MENORIGUALQ exp .)
    RPAREN          reduce using rule 43 (exp -> exp MENORIGUALQ exp .)
    VIRGULA         reduce using rule 43 (exp -> exp MENORIGUALQ exp .)
    RCOLCHETE       reduce using rule 43 (exp -> exp MENORIGUALQ exp .)
    SOMA            shift and go to state 46
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67

  ! SOMA            [ reduce using rule 43 (exp -> exp MENORIGUALQ exp .) ]
  ! DECREMENT       [ reduce using rule 43 (exp -> exp MENORIGUALQ exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 43 (exp -> exp MENORIGUALQ exp .) ]
  ! INCREMENT       [ reduce using rule 43 (exp -> exp MENORIGUALQ exp .) ]
  ! RESTO           [ reduce using rule 43 (exp -> exp MENORIGUALQ exp .) ]
  ! MULT            [ reduce using rule 43 (exp -> exp MENORIGUALQ exp .) ]
  ! DIV             [ reduce using rule 43 (exp -> exp MENORIGUALQ exp .) ]
  ! SUB             [ reduce using rule 43 (exp -> exp MENORIGUALQ exp .) ]
  ! TERNARIO1       [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! MAIORIGUALQ     [ shift and go to state 50 ]
  ! MENORIGUALQ     [ shift and go to state 51 ]
  ! MENORQ          [ shift and go to state 52 ]
  ! MAIORQ          [ shift and go to state 53 ]
  ! DIFERENTEPACARAI [ shift and go to state 54 ]
  ! DIFERENTE       [ shift and go to state 55 ]
  ! IGUALPACARAI    [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! RESTOINCREMENT  [ shift and go to state 58 ]
  ! DIVINCREMENT    [ shift and go to state 59 ]
  ! MULTINCREMENT   [ shift and go to state 60 ]


state 88

    (44) exp -> exp MENORQ exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 44 (exp -> exp MENORQ exp .)
    TERNARIO1       reduce using rule 44 (exp -> exp MENORQ exp .)
    OR              reduce using rule 44 (exp -> exp MENORQ exp .)
    AND             reduce using rule 44 (exp -> exp MENORQ exp .)
    MAIORIGUALQ     reduce using rule 44 (exp -> exp MENORQ exp .)
    MENORIGUALQ     reduce using rule 44 (exp -> exp MENORQ exp .)
    MENORQ          reduce using rule 44 (exp -> exp MENORQ exp .)
    MAIORQ          reduce using rule 44 (exp -> exp MENORQ exp .)
    DIFERENTEPACARAI reduce using rule 44 (exp -> exp MENORQ exp .)
    DIFERENTE       reduce using rule 44 (exp -> exp MENORQ exp .)
    IGUALPACARAI    reduce using rule 44 (exp -> exp MENORQ exp .)
    IGUAL           reduce using rule 44 (exp -> exp MENORQ exp .)
    RESTOINCREMENT  reduce using rule 44 (exp -> exp MENORQ exp .)
    DIVINCREMENT    reduce using rule 44 (exp -> exp MENORQ exp .)
    MULTINCREMENT   reduce using rule 44 (exp -> exp MENORQ exp .)
    TERNARIO2       reduce using rule 44 (exp -> exp MENORQ exp .)
    RPAREN          reduce using rule 44 (exp -> exp MENORQ exp .)
    VIRGULA         reduce using rule 44 (exp -> exp MENORQ exp .)
    RCOLCHETE       reduce using rule 44 (exp -> exp MENORQ exp .)
    SOMA            shift and go to state 46
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67

  ! SOMA            [ reduce using rule 44 (exp -> exp MENORQ exp .) ]
  ! DECREMENT       [ reduce using rule 44 (exp -> exp MENORQ exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 44 (exp -> exp MENORQ exp .) ]
  ! INCREMENT       [ reduce using rule 44 (exp -> exp MENORQ exp .) ]
  ! RESTO           [ reduce using rule 44 (exp -> exp MENORQ exp .) ]
  ! MULT            [ reduce using rule 44 (exp -> exp MENORQ exp .) ]
  ! DIV             [ reduce using rule 44 (exp -> exp MENORQ exp .) ]
  ! SUB             [ reduce using rule 44 (exp -> exp MENORQ exp .) ]
  ! TERNARIO1       [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! MAIORIGUALQ     [ shift and go to state 50 ]
  ! MENORIGUALQ     [ shift and go to state 51 ]
  ! MENORQ          [ shift and go to state 52 ]
  ! MAIORQ          [ shift and go to state 53 ]
  ! DIFERENTEPACARAI [ shift and go to state 54 ]
  ! DIFERENTE       [ shift and go to state 55 ]
  ! IGUALPACARAI    [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! RESTOINCREMENT  [ shift and go to state 58 ]
  ! DIVINCREMENT    [ shift and go to state 59 ]
  ! MULTINCREMENT   [ shift and go to state 60 ]


state 89

    (45) exp -> exp MAIORQ exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 45 (exp -> exp MAIORQ exp .)
    TERNARIO1       reduce using rule 45 (exp -> exp MAIORQ exp .)
    OR              reduce using rule 45 (exp -> exp MAIORQ exp .)
    AND             reduce using rule 45 (exp -> exp MAIORQ exp .)
    MAIORIGUALQ     reduce using rule 45 (exp -> exp MAIORQ exp .)
    MENORIGUALQ     reduce using rule 45 (exp -> exp MAIORQ exp .)
    MENORQ          reduce using rule 45 (exp -> exp MAIORQ exp .)
    MAIORQ          reduce using rule 45 (exp -> exp MAIORQ exp .)
    DIFERENTEPACARAI reduce using rule 45 (exp -> exp MAIORQ exp .)
    DIFERENTE       reduce using rule 45 (exp -> exp MAIORQ exp .)
    IGUALPACARAI    reduce using rule 45 (exp -> exp MAIORQ exp .)
    IGUAL           reduce using rule 45 (exp -> exp MAIORQ exp .)
    RESTOINCREMENT  reduce using rule 45 (exp -> exp MAIORQ exp .)
    DIVINCREMENT    reduce using rule 45 (exp -> exp MAIORQ exp .)
    MULTINCREMENT   reduce using rule 45 (exp -> exp MAIORQ exp .)
    TERNARIO2       reduce using rule 45 (exp -> exp MAIORQ exp .)
    RPAREN          reduce using rule 45 (exp -> exp MAIORQ exp .)
    VIRGULA         reduce using rule 45 (exp -> exp MAIORQ exp .)
    RCOLCHETE       reduce using rule 45 (exp -> exp MAIORQ exp .)
    SOMA            shift and go to state 46
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67

  ! SOMA            [ reduce using rule 45 (exp -> exp MAIORQ exp .) ]
  ! DECREMENT       [ reduce using rule 45 (exp -> exp MAIORQ exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 45 (exp -> exp MAIORQ exp .) ]
  ! INCREMENT       [ reduce using rule 45 (exp -> exp MAIORQ exp .) ]
  ! RESTO           [ reduce using rule 45 (exp -> exp MAIORQ exp .) ]
  ! MULT            [ reduce using rule 45 (exp -> exp MAIORQ exp .) ]
  ! DIV             [ reduce using rule 45 (exp -> exp MAIORQ exp .) ]
  ! SUB             [ reduce using rule 45 (exp -> exp MAIORQ exp .) ]
  ! TERNARIO1       [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! MAIORIGUALQ     [ shift and go to state 50 ]
  ! MENORIGUALQ     [ shift and go to state 51 ]
  ! MENORQ          [ shift and go to state 52 ]
  ! MAIORQ          [ shift and go to state 53 ]
  ! DIFERENTEPACARAI [ shift and go to state 54 ]
  ! DIFERENTE       [ shift and go to state 55 ]
  ! IGUALPACARAI    [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! RESTOINCREMENT  [ shift and go to state 58 ]
  ! DIVINCREMENT    [ shift and go to state 59 ]
  ! MULTINCREMENT   [ shift and go to state 60 ]


state 90

    (46) exp -> exp DIFERENTEPACARAI exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .)
    TERNARIO1       reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .)
    OR              reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .)
    AND             reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .)
    DIFERENTEPACARAI reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .)
    DIFERENTE       reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .)
    IGUALPACARAI    reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .)
    IGUAL           reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .)
    RESTOINCREMENT  reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .)
    DIVINCREMENT    reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .)
    MULTINCREMENT   reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .)
    TERNARIO2       reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .)
    RPAREN          reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .)
    VIRGULA         reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .)
    RCOLCHETE       reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .)
    SOMA            shift and go to state 46
    MAIORIGUALQ     shift and go to state 50
    MENORIGUALQ     shift and go to state 51
    MENORQ          shift and go to state 52
    MAIORQ          shift and go to state 53
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67

  ! SOMA            [ reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! MENORIGUALQ     [ reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! MENORQ          [ reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! MAIORQ          [ reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! DECREMENT       [ reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! INCREMENT       [ reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! RESTO           [ reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! MULT            [ reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! DIV             [ reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! SUB             [ reduce using rule 46 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! TERNARIO1       [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! DIFERENTEPACARAI [ shift and go to state 54 ]
  ! DIFERENTE       [ shift and go to state 55 ]
  ! IGUALPACARAI    [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! RESTOINCREMENT  [ shift and go to state 58 ]
  ! DIVINCREMENT    [ shift and go to state 59 ]
  ! MULTINCREMENT   [ shift and go to state 60 ]


state 91

    (47) exp -> exp DIFERENTE exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 47 (exp -> exp DIFERENTE exp .)
    TERNARIO1       reduce using rule 47 (exp -> exp DIFERENTE exp .)
    OR              reduce using rule 47 (exp -> exp DIFERENTE exp .)
    AND             reduce using rule 47 (exp -> exp DIFERENTE exp .)
    DIFERENTEPACARAI reduce using rule 47 (exp -> exp DIFERENTE exp .)
    DIFERENTE       reduce using rule 47 (exp -> exp DIFERENTE exp .)
    IGUALPACARAI    reduce using rule 47 (exp -> exp DIFERENTE exp .)
    IGUAL           reduce using rule 47 (exp -> exp DIFERENTE exp .)
    RESTOINCREMENT  reduce using rule 47 (exp -> exp DIFERENTE exp .)
    DIVINCREMENT    reduce using rule 47 (exp -> exp DIFERENTE exp .)
    MULTINCREMENT   reduce using rule 47 (exp -> exp DIFERENTE exp .)
    TERNARIO2       reduce using rule 47 (exp -> exp DIFERENTE exp .)
    RPAREN          reduce using rule 47 (exp -> exp DIFERENTE exp .)
    VIRGULA         reduce using rule 47 (exp -> exp DIFERENTE exp .)
    RCOLCHETE       reduce using rule 47 (exp -> exp DIFERENTE exp .)
    SOMA            shift and go to state 46
    MAIORIGUALQ     shift and go to state 50
    MENORIGUALQ     shift and go to state 51
    MENORQ          shift and go to state 52
    MAIORQ          shift and go to state 53
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67

  ! SOMA            [ reduce using rule 47 (exp -> exp DIFERENTE exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 47 (exp -> exp DIFERENTE exp .) ]
  ! MENORIGUALQ     [ reduce using rule 47 (exp -> exp DIFERENTE exp .) ]
  ! MENORQ          [ reduce using rule 47 (exp -> exp DIFERENTE exp .) ]
  ! MAIORQ          [ reduce using rule 47 (exp -> exp DIFERENTE exp .) ]
  ! DECREMENT       [ reduce using rule 47 (exp -> exp DIFERENTE exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 47 (exp -> exp DIFERENTE exp .) ]
  ! INCREMENT       [ reduce using rule 47 (exp -> exp DIFERENTE exp .) ]
  ! RESTO           [ reduce using rule 47 (exp -> exp DIFERENTE exp .) ]
  ! MULT            [ reduce using rule 47 (exp -> exp DIFERENTE exp .) ]
  ! DIV             [ reduce using rule 47 (exp -> exp DIFERENTE exp .) ]
  ! SUB             [ reduce using rule 47 (exp -> exp DIFERENTE exp .) ]
  ! TERNARIO1       [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! DIFERENTEPACARAI [ shift and go to state 54 ]
  ! DIFERENTE       [ shift and go to state 55 ]
  ! IGUALPACARAI    [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! RESTOINCREMENT  [ shift and go to state 58 ]
  ! DIVINCREMENT    [ shift and go to state 59 ]
  ! MULTINCREMENT   [ shift and go to state 60 ]


state 92

    (48) exp -> exp IGUALPACARAI exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 48 (exp -> exp IGUALPACARAI exp .)
    TERNARIO1       reduce using rule 48 (exp -> exp IGUALPACARAI exp .)
    OR              reduce using rule 48 (exp -> exp IGUALPACARAI exp .)
    AND             reduce using rule 48 (exp -> exp IGUALPACARAI exp .)
    DIFERENTEPACARAI reduce using rule 48 (exp -> exp IGUALPACARAI exp .)
    DIFERENTE       reduce using rule 48 (exp -> exp IGUALPACARAI exp .)
    IGUALPACARAI    reduce using rule 48 (exp -> exp IGUALPACARAI exp .)
    IGUAL           reduce using rule 48 (exp -> exp IGUALPACARAI exp .)
    RESTOINCREMENT  reduce using rule 48 (exp -> exp IGUALPACARAI exp .)
    DIVINCREMENT    reduce using rule 48 (exp -> exp IGUALPACARAI exp .)
    MULTINCREMENT   reduce using rule 48 (exp -> exp IGUALPACARAI exp .)
    TERNARIO2       reduce using rule 48 (exp -> exp IGUALPACARAI exp .)
    RPAREN          reduce using rule 48 (exp -> exp IGUALPACARAI exp .)
    VIRGULA         reduce using rule 48 (exp -> exp IGUALPACARAI exp .)
    RCOLCHETE       reduce using rule 48 (exp -> exp IGUALPACARAI exp .)
    SOMA            shift and go to state 46
    MAIORIGUALQ     shift and go to state 50
    MENORIGUALQ     shift and go to state 51
    MENORQ          shift and go to state 52
    MAIORQ          shift and go to state 53
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67

  ! SOMA            [ reduce using rule 48 (exp -> exp IGUALPACARAI exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 48 (exp -> exp IGUALPACARAI exp .) ]
  ! MENORIGUALQ     [ reduce using rule 48 (exp -> exp IGUALPACARAI exp .) ]
  ! MENORQ          [ reduce using rule 48 (exp -> exp IGUALPACARAI exp .) ]
  ! MAIORQ          [ reduce using rule 48 (exp -> exp IGUALPACARAI exp .) ]
  ! DECREMENT       [ reduce using rule 48 (exp -> exp IGUALPACARAI exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 48 (exp -> exp IGUALPACARAI exp .) ]
  ! INCREMENT       [ reduce using rule 48 (exp -> exp IGUALPACARAI exp .) ]
  ! RESTO           [ reduce using rule 48 (exp -> exp IGUALPACARAI exp .) ]
  ! MULT            [ reduce using rule 48 (exp -> exp IGUALPACARAI exp .) ]
  ! DIV             [ reduce using rule 48 (exp -> exp IGUALPACARAI exp .) ]
  ! SUB             [ reduce using rule 48 (exp -> exp IGUALPACARAI exp .) ]
  ! TERNARIO1       [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! DIFERENTEPACARAI [ shift and go to state 54 ]
  ! DIFERENTE       [ shift and go to state 55 ]
  ! IGUALPACARAI    [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! RESTOINCREMENT  [ shift and go to state 58 ]
  ! DIVINCREMENT    [ shift and go to state 59 ]
  ! MULTINCREMENT   [ shift and go to state 60 ]


state 93

    (49) exp -> exp IGUAL exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 49 (exp -> exp IGUAL exp .)
    TERNARIO1       reduce using rule 49 (exp -> exp IGUAL exp .)
    OR              reduce using rule 49 (exp -> exp IGUAL exp .)
    AND             reduce using rule 49 (exp -> exp IGUAL exp .)
    DIFERENTEPACARAI reduce using rule 49 (exp -> exp IGUAL exp .)
    DIFERENTE       reduce using rule 49 (exp -> exp IGUAL exp .)
    IGUALPACARAI    reduce using rule 49 (exp -> exp IGUAL exp .)
    IGUAL           reduce using rule 49 (exp -> exp IGUAL exp .)
    RESTOINCREMENT  reduce using rule 49 (exp -> exp IGUAL exp .)
    DIVINCREMENT    reduce using rule 49 (exp -> exp IGUAL exp .)
    MULTINCREMENT   reduce using rule 49 (exp -> exp IGUAL exp .)
    TERNARIO2       reduce using rule 49 (exp -> exp IGUAL exp .)
    RPAREN          reduce using rule 49 (exp -> exp IGUAL exp .)
    VIRGULA         reduce using rule 49 (exp -> exp IGUAL exp .)
    RCOLCHETE       reduce using rule 49 (exp -> exp IGUAL exp .)
    SOMA            shift and go to state 46
    MAIORIGUALQ     shift and go to state 50
    MENORIGUALQ     shift and go to state 51
    MENORQ          shift and go to state 52
    MAIORQ          shift and go to state 53
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67

  ! SOMA            [ reduce using rule 49 (exp -> exp IGUAL exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 49 (exp -> exp IGUAL exp .) ]
  ! MENORIGUALQ     [ reduce using rule 49 (exp -> exp IGUAL exp .) ]
  ! MENORQ          [ reduce using rule 49 (exp -> exp IGUAL exp .) ]
  ! MAIORQ          [ reduce using rule 49 (exp -> exp IGUAL exp .) ]
  ! DECREMENT       [ reduce using rule 49 (exp -> exp IGUAL exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 49 (exp -> exp IGUAL exp .) ]
  ! INCREMENT       [ reduce using rule 49 (exp -> exp IGUAL exp .) ]
  ! RESTO           [ reduce using rule 49 (exp -> exp IGUAL exp .) ]
  ! MULT            [ reduce using rule 49 (exp -> exp IGUAL exp .) ]
  ! DIV             [ reduce using rule 49 (exp -> exp IGUAL exp .) ]
  ! SUB             [ reduce using rule 49 (exp -> exp IGUAL exp .) ]
  ! TERNARIO1       [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! DIFERENTEPACARAI [ shift and go to state 54 ]
  ! DIFERENTE       [ shift and go to state 55 ]
  ! IGUALPACARAI    [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! RESTOINCREMENT  [ shift and go to state 58 ]
  ! DIVINCREMENT    [ shift and go to state 59 ]
  ! MULTINCREMENT   [ shift and go to state 60 ]


state 94

    (50) exp -> exp RESTOINCREMENT exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 50 (exp -> exp RESTOINCREMENT exp .)
    TERNARIO2       reduce using rule 50 (exp -> exp RESTOINCREMENT exp .)
    RPAREN          reduce using rule 50 (exp -> exp RESTOINCREMENT exp .)
    VIRGULA         reduce using rule 50 (exp -> exp RESTOINCREMENT exp .)
    RCOLCHETE       reduce using rule 50 (exp -> exp RESTOINCREMENT exp .)
    SOMA            shift and go to state 46
    TERNARIO1       shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    MAIORIGUALQ     shift and go to state 50
    MENORIGUALQ     shift and go to state 51
    MENORQ          shift and go to state 52
    MAIORQ          shift and go to state 53
    DIFERENTEPACARAI shift and go to state 54
    DIFERENTE       shift and go to state 55
    IGUALPACARAI    shift and go to state 56
    IGUAL           shift and go to state 57
    RESTOINCREMENT  shift and go to state 58
    DIVINCREMENT    shift and go to state 59
    MULTINCREMENT   shift and go to state 60
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67

  ! SOMA            [ reduce using rule 50 (exp -> exp RESTOINCREMENT exp .) ]
  ! TERNARIO1       [ reduce using rule 50 (exp -> exp RESTOINCREMENT exp .) ]
  ! OR              [ reduce using rule 50 (exp -> exp RESTOINCREMENT exp .) ]
  ! AND             [ reduce using rule 50 (exp -> exp RESTOINCREMENT exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 50 (exp -> exp RESTOINCREMENT exp .) ]
  ! MENORIGUALQ     [ reduce using rule 50 (exp -> exp RESTOINCREMENT exp .) ]
  ! MENORQ          [ reduce using rule 50 (exp -> exp RESTOINCREMENT exp .) ]
  ! MAIORQ          [ reduce using rule 50 (exp -> exp RESTOINCREMENT exp .) ]
  ! DIFERENTEPACARAI [ reduce using rule 50 (exp -> exp RESTOINCREMENT exp .) ]
  ! DIFERENTE       [ reduce using rule 50 (exp -> exp RESTOINCREMENT exp .) ]
  ! IGUALPACARAI    [ reduce using rule 50 (exp -> exp RESTOINCREMENT exp .) ]
  ! IGUAL           [ reduce using rule 50 (exp -> exp RESTOINCREMENT exp .) ]
  ! RESTOINCREMENT  [ reduce using rule 50 (exp -> exp RESTOINCREMENT exp .) ]
  ! DIVINCREMENT    [ reduce using rule 50 (exp -> exp RESTOINCREMENT exp .) ]
  ! MULTINCREMENT   [ reduce using rule 50 (exp -> exp RESTOINCREMENT exp .) ]
  ! DECREMENT       [ reduce using rule 50 (exp -> exp RESTOINCREMENT exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 50 (exp -> exp RESTOINCREMENT exp .) ]
  ! INCREMENT       [ reduce using rule 50 (exp -> exp RESTOINCREMENT exp .) ]
  ! RESTO           [ reduce using rule 50 (exp -> exp RESTOINCREMENT exp .) ]
  ! MULT            [ reduce using rule 50 (exp -> exp RESTOINCREMENT exp .) ]
  ! DIV             [ reduce using rule 50 (exp -> exp RESTOINCREMENT exp .) ]
  ! SUB             [ reduce using rule 50 (exp -> exp RESTOINCREMENT exp .) ]


state 95

    (51) exp -> exp DIVINCREMENT exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 51 (exp -> exp DIVINCREMENT exp .)
    TERNARIO2       reduce using rule 51 (exp -> exp DIVINCREMENT exp .)
    RPAREN          reduce using rule 51 (exp -> exp DIVINCREMENT exp .)
    VIRGULA         reduce using rule 51 (exp -> exp DIVINCREMENT exp .)
    RCOLCHETE       reduce using rule 51 (exp -> exp DIVINCREMENT exp .)
    SOMA            shift and go to state 46
    TERNARIO1       shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    MAIORIGUALQ     shift and go to state 50
    MENORIGUALQ     shift and go to state 51
    MENORQ          shift and go to state 52
    MAIORQ          shift and go to state 53
    DIFERENTEPACARAI shift and go to state 54
    DIFERENTE       shift and go to state 55
    IGUALPACARAI    shift and go to state 56
    IGUAL           shift and go to state 57
    RESTOINCREMENT  shift and go to state 58
    DIVINCREMENT    shift and go to state 59
    MULTINCREMENT   shift and go to state 60
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67

  ! SOMA            [ reduce using rule 51 (exp -> exp DIVINCREMENT exp .) ]
  ! TERNARIO1       [ reduce using rule 51 (exp -> exp DIVINCREMENT exp .) ]
  ! OR              [ reduce using rule 51 (exp -> exp DIVINCREMENT exp .) ]
  ! AND             [ reduce using rule 51 (exp -> exp DIVINCREMENT exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 51 (exp -> exp DIVINCREMENT exp .) ]
  ! MENORIGUALQ     [ reduce using rule 51 (exp -> exp DIVINCREMENT exp .) ]
  ! MENORQ          [ reduce using rule 51 (exp -> exp DIVINCREMENT exp .) ]
  ! MAIORQ          [ reduce using rule 51 (exp -> exp DIVINCREMENT exp .) ]
  ! DIFERENTEPACARAI [ reduce using rule 51 (exp -> exp DIVINCREMENT exp .) ]
  ! DIFERENTE       [ reduce using rule 51 (exp -> exp DIVINCREMENT exp .) ]
  ! IGUALPACARAI    [ reduce using rule 51 (exp -> exp DIVINCREMENT exp .) ]
  ! IGUAL           [ reduce using rule 51 (exp -> exp DIVINCREMENT exp .) ]
  ! RESTOINCREMENT  [ reduce using rule 51 (exp -> exp DIVINCREMENT exp .) ]
  ! DIVINCREMENT    [ reduce using rule 51 (exp -> exp DIVINCREMENT exp .) ]
  ! MULTINCREMENT   [ reduce using rule 51 (exp -> exp DIVINCREMENT exp .) ]
  ! DECREMENT       [ reduce using rule 51 (exp -> exp DIVINCREMENT exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 51 (exp -> exp DIVINCREMENT exp .) ]
  ! INCREMENT       [ reduce using rule 51 (exp -> exp DIVINCREMENT exp .) ]
  ! RESTO           [ reduce using rule 51 (exp -> exp DIVINCREMENT exp .) ]
  ! MULT            [ reduce using rule 51 (exp -> exp DIVINCREMENT exp .) ]
  ! DIV             [ reduce using rule 51 (exp -> exp DIVINCREMENT exp .) ]
  ! SUB             [ reduce using rule 51 (exp -> exp DIVINCREMENT exp .) ]


state 96

    (52) exp -> exp MULTINCREMENT exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 52 (exp -> exp MULTINCREMENT exp .)
    TERNARIO2       reduce using rule 52 (exp -> exp MULTINCREMENT exp .)
    RPAREN          reduce using rule 52 (exp -> exp MULTINCREMENT exp .)
    VIRGULA         reduce using rule 52 (exp -> exp MULTINCREMENT exp .)
    RCOLCHETE       reduce using rule 52 (exp -> exp MULTINCREMENT exp .)
    SOMA            shift and go to state 46
    TERNARIO1       shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    MAIORIGUALQ     shift and go to state 50
    MENORIGUALQ     shift and go to state 51
    MENORQ          shift and go to state 52
    MAIORQ          shift and go to state 53
    DIFERENTEPACARAI shift and go to state 54
    DIFERENTE       shift and go to state 55
    IGUALPACARAI    shift and go to state 56
    IGUAL           shift and go to state 57
    RESTOINCREMENT  shift and go to state 58
    DIVINCREMENT    shift and go to state 59
    MULTINCREMENT   shift and go to state 60
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67

  ! SOMA            [ reduce using rule 52 (exp -> exp MULTINCREMENT exp .) ]
  ! TERNARIO1       [ reduce using rule 52 (exp -> exp MULTINCREMENT exp .) ]
  ! OR              [ reduce using rule 52 (exp -> exp MULTINCREMENT exp .) ]
  ! AND             [ reduce using rule 52 (exp -> exp MULTINCREMENT exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 52 (exp -> exp MULTINCREMENT exp .) ]
  ! MENORIGUALQ     [ reduce using rule 52 (exp -> exp MULTINCREMENT exp .) ]
  ! MENORQ          [ reduce using rule 52 (exp -> exp MULTINCREMENT exp .) ]
  ! MAIORQ          [ reduce using rule 52 (exp -> exp MULTINCREMENT exp .) ]
  ! DIFERENTEPACARAI [ reduce using rule 52 (exp -> exp MULTINCREMENT exp .) ]
  ! DIFERENTE       [ reduce using rule 52 (exp -> exp MULTINCREMENT exp .) ]
  ! IGUALPACARAI    [ reduce using rule 52 (exp -> exp MULTINCREMENT exp .) ]
  ! IGUAL           [ reduce using rule 52 (exp -> exp MULTINCREMENT exp .) ]
  ! RESTOINCREMENT  [ reduce using rule 52 (exp -> exp MULTINCREMENT exp .) ]
  ! DIVINCREMENT    [ reduce using rule 52 (exp -> exp MULTINCREMENT exp .) ]
  ! MULTINCREMENT   [ reduce using rule 52 (exp -> exp MULTINCREMENT exp .) ]
  ! DECREMENT       [ reduce using rule 52 (exp -> exp MULTINCREMENT exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 52 (exp -> exp MULTINCREMENT exp .) ]
  ! INCREMENT       [ reduce using rule 52 (exp -> exp MULTINCREMENT exp .) ]
  ! RESTO           [ reduce using rule 52 (exp -> exp MULTINCREMENT exp .) ]
  ! MULT            [ reduce using rule 52 (exp -> exp MULTINCREMENT exp .) ]
  ! DIV             [ reduce using rule 52 (exp -> exp MULTINCREMENT exp .) ]
  ! SUB             [ reduce using rule 52 (exp -> exp MULTINCREMENT exp .) ]


state 97

    (56) exp -> exp EXPONENCIACAO exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    SOMA            reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    TERNARIO1       reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    OR              reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    AND             reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    MAIORIGUALQ     reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    MENORIGUALQ     reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    MENORQ          reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    MAIORQ          reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    DIFERENTEPACARAI reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    DIFERENTE       reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    IGUALPACARAI    reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    IGUAL           reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    RESTOINCREMENT  reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    DIVINCREMENT    reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    MULTINCREMENT   reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    RESTO           reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    MULT            reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    DIV             reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    SUB             reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    TERNARIO2       reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    RPAREN          reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    VIRGULA         reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    RCOLCHETE       reduce using rule 56 (exp -> exp EXPONENCIACAO exp .)
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63

  ! DECREMENT       [ reduce using rule 56 (exp -> exp EXPONENCIACAO exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 56 (exp -> exp EXPONENCIACAO exp .) ]
  ! INCREMENT       [ reduce using rule 56 (exp -> exp EXPONENCIACAO exp .) ]
  ! SOMA            [ shift and go to state 46 ]
  ! TERNARIO1       [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! MAIORIGUALQ     [ shift and go to state 50 ]
  ! MENORIGUALQ     [ shift and go to state 51 ]
  ! MENORQ          [ shift and go to state 52 ]
  ! MAIORQ          [ shift and go to state 53 ]
  ! DIFERENTEPACARAI [ shift and go to state 54 ]
  ! DIFERENTE       [ shift and go to state 55 ]
  ! IGUALPACARAI    [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! RESTOINCREMENT  [ shift and go to state 58 ]
  ! DIVINCREMENT    [ shift and go to state 59 ]
  ! MULTINCREMENT   [ shift and go to state 60 ]
  ! RESTO           [ shift and go to state 64 ]
  ! MULT            [ shift and go to state 65 ]
  ! DIV             [ shift and go to state 66 ]
  ! SUB             [ shift and go to state 67 ]


state 98

    (58) exp -> exp RESTO exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 58 (exp -> exp RESTO exp .)
    SOMA            reduce using rule 58 (exp -> exp RESTO exp .)
    TERNARIO1       reduce using rule 58 (exp -> exp RESTO exp .)
    OR              reduce using rule 58 (exp -> exp RESTO exp .)
    AND             reduce using rule 58 (exp -> exp RESTO exp .)
    MAIORIGUALQ     reduce using rule 58 (exp -> exp RESTO exp .)
    MENORIGUALQ     reduce using rule 58 (exp -> exp RESTO exp .)
    MENORQ          reduce using rule 58 (exp -> exp RESTO exp .)
    MAIORQ          reduce using rule 58 (exp -> exp RESTO exp .)
    DIFERENTEPACARAI reduce using rule 58 (exp -> exp RESTO exp .)
    DIFERENTE       reduce using rule 58 (exp -> exp RESTO exp .)
    IGUALPACARAI    reduce using rule 58 (exp -> exp RESTO exp .)
    IGUAL           reduce using rule 58 (exp -> exp RESTO exp .)
    RESTOINCREMENT  reduce using rule 58 (exp -> exp RESTO exp .)
    DIVINCREMENT    reduce using rule 58 (exp -> exp RESTO exp .)
    MULTINCREMENT   reduce using rule 58 (exp -> exp RESTO exp .)
    RESTO           reduce using rule 58 (exp -> exp RESTO exp .)
    MULT            reduce using rule 58 (exp -> exp RESTO exp .)
    DIV             reduce using rule 58 (exp -> exp RESTO exp .)
    SUB             reduce using rule 58 (exp -> exp RESTO exp .)
    TERNARIO2       reduce using rule 58 (exp -> exp RESTO exp .)
    RPAREN          reduce using rule 58 (exp -> exp RESTO exp .)
    VIRGULA         reduce using rule 58 (exp -> exp RESTO exp .)
    RCOLCHETE       reduce using rule 58 (exp -> exp RESTO exp .)
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63

  ! DECREMENT       [ reduce using rule 58 (exp -> exp RESTO exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 58 (exp -> exp RESTO exp .) ]
  ! INCREMENT       [ reduce using rule 58 (exp -> exp RESTO exp .) ]
  ! SOMA            [ shift and go to state 46 ]
  ! TERNARIO1       [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! MAIORIGUALQ     [ shift and go to state 50 ]
  ! MENORIGUALQ     [ shift and go to state 51 ]
  ! MENORQ          [ shift and go to state 52 ]
  ! MAIORQ          [ shift and go to state 53 ]
  ! DIFERENTEPACARAI [ shift and go to state 54 ]
  ! DIFERENTE       [ shift and go to state 55 ]
  ! IGUALPACARAI    [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! RESTOINCREMENT  [ shift and go to state 58 ]
  ! DIVINCREMENT    [ shift and go to state 59 ]
  ! MULTINCREMENT   [ shift and go to state 60 ]
  ! RESTO           [ shift and go to state 64 ]
  ! MULT            [ shift and go to state 65 ]
  ! DIV             [ shift and go to state 66 ]
  ! SUB             [ shift and go to state 67 ]


state 99

    (59) exp -> exp MULT exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 59 (exp -> exp MULT exp .)
    SOMA            reduce using rule 59 (exp -> exp MULT exp .)
    TERNARIO1       reduce using rule 59 (exp -> exp MULT exp .)
    OR              reduce using rule 59 (exp -> exp MULT exp .)
    AND             reduce using rule 59 (exp -> exp MULT exp .)
    MAIORIGUALQ     reduce using rule 59 (exp -> exp MULT exp .)
    MENORIGUALQ     reduce using rule 59 (exp -> exp MULT exp .)
    MENORQ          reduce using rule 59 (exp -> exp MULT exp .)
    MAIORQ          reduce using rule 59 (exp -> exp MULT exp .)
    DIFERENTEPACARAI reduce using rule 59 (exp -> exp MULT exp .)
    DIFERENTE       reduce using rule 59 (exp -> exp MULT exp .)
    IGUALPACARAI    reduce using rule 59 (exp -> exp MULT exp .)
    IGUAL           reduce using rule 59 (exp -> exp MULT exp .)
    RESTOINCREMENT  reduce using rule 59 (exp -> exp MULT exp .)
    DIVINCREMENT    reduce using rule 59 (exp -> exp MULT exp .)
    MULTINCREMENT   reduce using rule 59 (exp -> exp MULT exp .)
    RESTO           reduce using rule 59 (exp -> exp MULT exp .)
    MULT            reduce using rule 59 (exp -> exp MULT exp .)
    DIV             reduce using rule 59 (exp -> exp MULT exp .)
    SUB             reduce using rule 59 (exp -> exp MULT exp .)
    TERNARIO2       reduce using rule 59 (exp -> exp MULT exp .)
    RPAREN          reduce using rule 59 (exp -> exp MULT exp .)
    VIRGULA         reduce using rule 59 (exp -> exp MULT exp .)
    RCOLCHETE       reduce using rule 59 (exp -> exp MULT exp .)
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63

  ! DECREMENT       [ reduce using rule 59 (exp -> exp MULT exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 59 (exp -> exp MULT exp .) ]
  ! INCREMENT       [ reduce using rule 59 (exp -> exp MULT exp .) ]
  ! SOMA            [ shift and go to state 46 ]
  ! TERNARIO1       [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! MAIORIGUALQ     [ shift and go to state 50 ]
  ! MENORIGUALQ     [ shift and go to state 51 ]
  ! MENORQ          [ shift and go to state 52 ]
  ! MAIORQ          [ shift and go to state 53 ]
  ! DIFERENTEPACARAI [ shift and go to state 54 ]
  ! DIFERENTE       [ shift and go to state 55 ]
  ! IGUALPACARAI    [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! RESTOINCREMENT  [ shift and go to state 58 ]
  ! DIVINCREMENT    [ shift and go to state 59 ]
  ! MULTINCREMENT   [ shift and go to state 60 ]
  ! RESTO           [ shift and go to state 64 ]
  ! MULT            [ shift and go to state 65 ]
  ! DIV             [ shift and go to state 66 ]
  ! SUB             [ shift and go to state 67 ]


state 100

    (60) exp -> exp DIV exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 60 (exp -> exp DIV exp .)
    SOMA            reduce using rule 60 (exp -> exp DIV exp .)
    TERNARIO1       reduce using rule 60 (exp -> exp DIV exp .)
    OR              reduce using rule 60 (exp -> exp DIV exp .)
    AND             reduce using rule 60 (exp -> exp DIV exp .)
    MAIORIGUALQ     reduce using rule 60 (exp -> exp DIV exp .)
    MENORIGUALQ     reduce using rule 60 (exp -> exp DIV exp .)
    MENORQ          reduce using rule 60 (exp -> exp DIV exp .)
    MAIORQ          reduce using rule 60 (exp -> exp DIV exp .)
    DIFERENTEPACARAI reduce using rule 60 (exp -> exp DIV exp .)
    DIFERENTE       reduce using rule 60 (exp -> exp DIV exp .)
    IGUALPACARAI    reduce using rule 60 (exp -> exp DIV exp .)
    IGUAL           reduce using rule 60 (exp -> exp DIV exp .)
    RESTOINCREMENT  reduce using rule 60 (exp -> exp DIV exp .)
    DIVINCREMENT    reduce using rule 60 (exp -> exp DIV exp .)
    MULTINCREMENT   reduce using rule 60 (exp -> exp DIV exp .)
    RESTO           reduce using rule 60 (exp -> exp DIV exp .)
    MULT            reduce using rule 60 (exp -> exp DIV exp .)
    DIV             reduce using rule 60 (exp -> exp DIV exp .)
    SUB             reduce using rule 60 (exp -> exp DIV exp .)
    TERNARIO2       reduce using rule 60 (exp -> exp DIV exp .)
    RPAREN          reduce using rule 60 (exp -> exp DIV exp .)
    VIRGULA         reduce using rule 60 (exp -> exp DIV exp .)
    RCOLCHETE       reduce using rule 60 (exp -> exp DIV exp .)
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63

  ! DECREMENT       [ reduce using rule 60 (exp -> exp DIV exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 60 (exp -> exp DIV exp .) ]
  ! INCREMENT       [ reduce using rule 60 (exp -> exp DIV exp .) ]
  ! SOMA            [ shift and go to state 46 ]
  ! TERNARIO1       [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! MAIORIGUALQ     [ shift and go to state 50 ]
  ! MENORIGUALQ     [ shift and go to state 51 ]
  ! MENORQ          [ shift and go to state 52 ]
  ! MAIORQ          [ shift and go to state 53 ]
  ! DIFERENTEPACARAI [ shift and go to state 54 ]
  ! DIFERENTE       [ shift and go to state 55 ]
  ! IGUALPACARAI    [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! RESTOINCREMENT  [ shift and go to state 58 ]
  ! DIVINCREMENT    [ shift and go to state 59 ]
  ! MULTINCREMENT   [ shift and go to state 60 ]
  ! RESTO           [ shift and go to state 64 ]
  ! MULT            [ shift and go to state 65 ]
  ! DIV             [ shift and go to state 66 ]
  ! SUB             [ shift and go to state 67 ]


state 101

    (61) exp -> exp SUB exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 61 (exp -> exp SUB exp .)
    SOMA            reduce using rule 61 (exp -> exp SUB exp .)
    TERNARIO1       reduce using rule 61 (exp -> exp SUB exp .)
    OR              reduce using rule 61 (exp -> exp SUB exp .)
    AND             reduce using rule 61 (exp -> exp SUB exp .)
    MAIORIGUALQ     reduce using rule 61 (exp -> exp SUB exp .)
    MENORIGUALQ     reduce using rule 61 (exp -> exp SUB exp .)
    MENORQ          reduce using rule 61 (exp -> exp SUB exp .)
    MAIORQ          reduce using rule 61 (exp -> exp SUB exp .)
    DIFERENTEPACARAI reduce using rule 61 (exp -> exp SUB exp .)
    DIFERENTE       reduce using rule 61 (exp -> exp SUB exp .)
    IGUALPACARAI    reduce using rule 61 (exp -> exp SUB exp .)
    IGUAL           reduce using rule 61 (exp -> exp SUB exp .)
    RESTOINCREMENT  reduce using rule 61 (exp -> exp SUB exp .)
    DIVINCREMENT    reduce using rule 61 (exp -> exp SUB exp .)
    MULTINCREMENT   reduce using rule 61 (exp -> exp SUB exp .)
    SUB             reduce using rule 61 (exp -> exp SUB exp .)
    TERNARIO2       reduce using rule 61 (exp -> exp SUB exp .)
    RPAREN          reduce using rule 61 (exp -> exp SUB exp .)
    VIRGULA         reduce using rule 61 (exp -> exp SUB exp .)
    RCOLCHETE       reduce using rule 61 (exp -> exp SUB exp .)
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66

  ! DECREMENT       [ reduce using rule 61 (exp -> exp SUB exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 61 (exp -> exp SUB exp .) ]
  ! INCREMENT       [ reduce using rule 61 (exp -> exp SUB exp .) ]
  ! RESTO           [ reduce using rule 61 (exp -> exp SUB exp .) ]
  ! MULT            [ reduce using rule 61 (exp -> exp SUB exp .) ]
  ! DIV             [ reduce using rule 61 (exp -> exp SUB exp .) ]
  ! SOMA            [ shift and go to state 46 ]
  ! TERNARIO1       [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! MAIORIGUALQ     [ shift and go to state 50 ]
  ! MENORIGUALQ     [ shift and go to state 51 ]
  ! MENORQ          [ shift and go to state 52 ]
  ! MAIORQ          [ shift and go to state 53 ]
  ! DIFERENTEPACARAI [ shift and go to state 54 ]
  ! DIFERENTE       [ shift and go to state 55 ]
  ! IGUALPACARAI    [ shift and go to state 56 ]
  ! IGUAL           [ shift and go to state 57 ]
  ! RESTOINCREMENT  [ shift and go to state 58 ]
  ! DIVINCREMENT    [ shift and go to state 59 ]
  ! MULTINCREMENT   [ shift and go to state 60 ]
  ! SUB             [ shift and go to state 67 ]


state 102

    (21) stm -> WHILE LPAREN exp . RPAREN bodyorstm
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    RPAREN          shift and go to state 118
    SOMA            shift and go to state 46
    TERNARIO1       shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    MAIORIGUALQ     shift and go to state 50
    MENORIGUALQ     shift and go to state 51
    MENORQ          shift and go to state 52
    MAIORQ          shift and go to state 53
    DIFERENTEPACARAI shift and go to state 54
    DIFERENTE       shift and go to state 55
    IGUALPACARAI    shift and go to state 56
    IGUAL           shift and go to state 57
    RESTOINCREMENT  shift and go to state 58
    DIVINCREMENT    shift and go to state 59
    MULTINCREMENT   shift and go to state 60
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67


state 103

    (22) stm -> IF LPAREN exp . RPAREN bodyorstm
    (24) stm -> IF LPAREN exp . RPAREN bodyorstm ELSE bodyorstm
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    RPAREN          shift and go to state 119
    SOMA            shift and go to state 46
    TERNARIO1       shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    MAIORIGUALQ     shift and go to state 50
    MENORIGUALQ     shift and go to state 51
    MENORQ          shift and go to state 52
    MAIORQ          shift and go to state 53
    DIFERENTEPACARAI shift and go to state 54
    DIFERENTE       shift and go to state 55
    IGUALPACARAI    shift and go to state 56
    IGUAL           shift and go to state 57
    RESTOINCREMENT  shift and go to state 58
    DIVINCREMENT    shift and go to state 59
    MULTINCREMENT   shift and go to state 60
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67


state 104

    (23) stm -> FOR LPAREN opexp . PV opexp PV opexp RPAREN bodyorstm

    PV              shift and go to state 120


state 105

    (25) opexp -> exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 25 (opexp -> exp .)
    RPAREN          reduce using rule 25 (opexp -> exp .)
    SOMA            shift and go to state 46
    TERNARIO1       shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    MAIORIGUALQ     shift and go to state 50
    MENORIGUALQ     shift and go to state 51
    MENORQ          shift and go to state 52
    MAIORQ          shift and go to state 53
    DIFERENTEPACARAI shift and go to state 54
    DIFERENTE       shift and go to state 55
    IGUALPACARAI    shift and go to state 56
    IGUAL           shift and go to state 57
    RESTOINCREMENT  shift and go to state 58
    DIVINCREMENT    shift and go to state 59
    MULTINCREMENT   shift and go to state 60
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67


state 106

    (26) opexp -> VOID .

    PV              reduce using rule 26 (opexp -> VOID .)
    RPAREN          reduce using rule 26 (opexp -> VOID .)


state 107

    (66) assign -> ID ATRIBUICAO exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 66 (assign -> ID ATRIBUICAO exp .)
    TERNARIO2       reduce using rule 66 (assign -> ID ATRIBUICAO exp .)
    RPAREN          reduce using rule 66 (assign -> ID ATRIBUICAO exp .)
    VIRGULA         reduce using rule 66 (assign -> ID ATRIBUICAO exp .)
    RCOLCHETE       reduce using rule 66 (assign -> ID ATRIBUICAO exp .)
    SOMA            shift and go to state 46
    TERNARIO1       shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    MAIORIGUALQ     shift and go to state 50
    MENORIGUALQ     shift and go to state 51
    MENORQ          shift and go to state 52
    MAIORQ          shift and go to state 53
    DIFERENTEPACARAI shift and go to state 54
    DIFERENTE       shift and go to state 55
    IGUALPACARAI    shift and go to state 56
    IGUAL           shift and go to state 57
    RESTOINCREMENT  shift and go to state 58
    DIVINCREMENT    shift and go to state 59
    MULTINCREMENT   shift and go to state 60
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67

  ! SOMA            [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! TERNARIO1       [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! OR              [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! AND             [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! MENORIGUALQ     [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! MENORQ          [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! MAIORQ          [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! DIFERENTEPACARAI [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! DIFERENTE       [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! IGUALPACARAI    [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! IGUAL           [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! RESTOINCREMENT  [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! DIVINCREMENT    [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! MULTINCREMENT   [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! DECREMENT       [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! INCREMENT       [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! RESTO           [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! MULT            [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! DIV             [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! SUB             [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]


state 108

    (62) call -> ID LPAREN params . RPAREN

    RPAREN          shift and go to state 121


state 109

    (63) call -> ID LPAREN RPAREN .

    PV              reduce using rule 63 (call -> ID LPAREN RPAREN .)
    SOMA            reduce using rule 63 (call -> ID LPAREN RPAREN .)
    TERNARIO1       reduce using rule 63 (call -> ID LPAREN RPAREN .)
    OR              reduce using rule 63 (call -> ID LPAREN RPAREN .)
    AND             reduce using rule 63 (call -> ID LPAREN RPAREN .)
    MAIORIGUALQ     reduce using rule 63 (call -> ID LPAREN RPAREN .)
    MENORIGUALQ     reduce using rule 63 (call -> ID LPAREN RPAREN .)
    MENORQ          reduce using rule 63 (call -> ID LPAREN RPAREN .)
    MAIORQ          reduce using rule 63 (call -> ID LPAREN RPAREN .)
    DIFERENTEPACARAI reduce using rule 63 (call -> ID LPAREN RPAREN .)
    DIFERENTE       reduce using rule 63 (call -> ID LPAREN RPAREN .)
    IGUALPACARAI    reduce using rule 63 (call -> ID LPAREN RPAREN .)
    IGUAL           reduce using rule 63 (call -> ID LPAREN RPAREN .)
    RESTOINCREMENT  reduce using rule 63 (call -> ID LPAREN RPAREN .)
    DIVINCREMENT    reduce using rule 63 (call -> ID LPAREN RPAREN .)
    MULTINCREMENT   reduce using rule 63 (call -> ID LPAREN RPAREN .)
    DECREMENT       reduce using rule 63 (call -> ID LPAREN RPAREN .)
    EXPONENCIACAO   reduce using rule 63 (call -> ID LPAREN RPAREN .)
    INCREMENT       reduce using rule 63 (call -> ID LPAREN RPAREN .)
    RESTO           reduce using rule 63 (call -> ID LPAREN RPAREN .)
    MULT            reduce using rule 63 (call -> ID LPAREN RPAREN .)
    DIV             reduce using rule 63 (call -> ID LPAREN RPAREN .)
    SUB             reduce using rule 63 (call -> ID LPAREN RPAREN .)
    TERNARIO2       reduce using rule 63 (call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 63 (call -> ID LPAREN RPAREN .)
    VIRGULA         reduce using rule 63 (call -> ID LPAREN RPAREN .)
    RCOLCHETE       reduce using rule 63 (call -> ID LPAREN RPAREN .)


state 110

    (64) params -> exp . VIRGULA params
    (65) params -> exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    VIRGULA         shift and go to state 122
    RPAREN          reduce using rule 65 (params -> exp .)
    SOMA            shift and go to state 46
    TERNARIO1       shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    MAIORIGUALQ     shift and go to state 50
    MENORIGUALQ     shift and go to state 51
    MENORQ          shift and go to state 52
    MAIORQ          shift and go to state 53
    DIFERENTEPACARAI shift and go to state 54
    DIFERENTE       shift and go to state 55
    IGUALPACARAI    shift and go to state 56
    IGUAL           shift and go to state 57
    RESTOINCREMENT  shift and go to state 58
    DIVINCREMENT    shift and go to state 59
    MULTINCREMENT   shift and go to state 60
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67


state 111

    (8) vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp . RCOLCHETE

    RCOLCHETE       shift and go to state 123


state 112

    (10) vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .

    PV              reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)


state 113

    (72) listexp -> exp .
    (73) listexp -> exp . VIRGULA listexp
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    RCOLCHETE       reduce using rule 72 (listexp -> exp .)
    PV              reduce using rule 72 (listexp -> exp .)
    VIRGULA         shift and go to state 124
    SOMA            shift and go to state 46
    TERNARIO1       shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    MAIORIGUALQ     shift and go to state 50
    MENORIGUALQ     shift and go to state 51
    MENORQ          shift and go to state 52
    MAIORQ          shift and go to state 53
    DIFERENTEPACARAI shift and go to state 54
    DIFERENTE       shift and go to state 55
    IGUALPACARAI    shift and go to state 56
    IGUAL           shift and go to state 57
    RESTOINCREMENT  shift and go to state 58
    DIVINCREMENT    shift and go to state 59
    MULTINCREMENT   shift and go to state 60
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67


state 114

    (7) vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .
    (9) vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE . ATRIBUICAO listexp

    PV              reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    ATRIBUICAO      shift and go to state 125


state 115

    (14) sigParams -> ID VIRGULA . sigParams
    (13) sigParams -> . ID
    (14) sigParams -> . ID VIRGULA sigParams

    ID              shift and go to state 79

    sigParams                      shift and go to state 126

state 116

    (12) signature -> FUNCTION ID LPAREN sigParams RPAREN .

    LCHAVES         reduce using rule 12 (signature -> FUNCTION ID LPAREN sigParams RPAREN .)


state 117

    (38) exp -> exp TERNARIO1 exp TERNARIO2 . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 127
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 118

    (21) stm -> WHILE LPAREN exp RPAREN . bodyorstm
    (27) bodyorstm -> . body
    (28) bodyorstm -> . stm
    (15) body -> . LCHAVES stms RCHAVES
    (18) stm -> . vardecl PV
    (19) stm -> . RETURN exp PV
    (20) stm -> . exp PV
    (21) stm -> . WHILE LPAREN exp RPAREN bodyorstm
    (22) stm -> . IF LPAREN exp RPAREN bodyorstm
    (23) stm -> . FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm
    (24) stm -> . IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    LCHAVES         shift and go to state 13
    RETURN          shift and go to state 20
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    LET             shift and go to state 7
    CONST           shift and go to state 8
    VAR             shift and go to state 9
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 21
    bodyorstm                      shift and go to state 128
    body                           shift and go to state 129
    stm                            shift and go to state 130
    vardecl                        shift and go to state 19
    tipodecl                       shift and go to state 5
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 119

    (22) stm -> IF LPAREN exp RPAREN . bodyorstm
    (24) stm -> IF LPAREN exp RPAREN . bodyorstm ELSE bodyorstm
    (27) bodyorstm -> . body
    (28) bodyorstm -> . stm
    (15) body -> . LCHAVES stms RCHAVES
    (18) stm -> . vardecl PV
    (19) stm -> . RETURN exp PV
    (20) stm -> . exp PV
    (21) stm -> . WHILE LPAREN exp RPAREN bodyorstm
    (22) stm -> . IF LPAREN exp RPAREN bodyorstm
    (23) stm -> . FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm
    (24) stm -> . IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    LCHAVES         shift and go to state 13
    RETURN          shift and go to state 20
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    LET             shift and go to state 7
    CONST           shift and go to state 8
    VAR             shift and go to state 9
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 21
    bodyorstm                      shift and go to state 131
    body                           shift and go to state 129
    stm                            shift and go to state 130
    vardecl                        shift and go to state 19
    tipodecl                       shift and go to state 5
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 120

    (23) stm -> FOR LPAREN opexp PV . opexp PV opexp RPAREN bodyorstm
    (25) opexp -> . exp
    (26) opexp -> . VOID
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    VOID            shift and go to state 106
    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    opexp                          shift and go to state 132
    exp                            shift and go to state 105
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 121

    (62) call -> ID LPAREN params RPAREN .

    PV              reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    SOMA            reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    TERNARIO1       reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    OR              reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    AND             reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    MAIORIGUALQ     reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    MENORIGUALQ     reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    MENORQ          reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    MAIORQ          reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    DIFERENTEPACARAI reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    DIFERENTE       reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    IGUALPACARAI    reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    IGUAL           reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    RESTOINCREMENT  reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    DIVINCREMENT    reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    MULTINCREMENT   reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    DECREMENT       reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    EXPONENCIACAO   reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    INCREMENT       reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    RESTO           reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    MULT            reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    DIV             reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    SUB             reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    TERNARIO2       reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    RPAREN          reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    VIRGULA         reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    RCOLCHETE       reduce using rule 62 (call -> ID LPAREN params RPAREN .)


state 122

    (64) params -> exp VIRGULA . params
    (64) params -> . exp VIRGULA params
    (65) params -> . exp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 110
    params                         shift and go to state 133
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 123

    (8) vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .

    PV              reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)


state 124

    (73) listexp -> exp VIRGULA . listexp
    (72) listexp -> . exp
    (73) listexp -> . exp VIRGULA listexp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 113
    listexp                        shift and go to state 134
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 125

    (9) vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO . listexp
    (72) listexp -> . exp
    (73) listexp -> . exp VIRGULA listexp
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    listexp                        shift and go to state 135
    exp                            shift and go to state 113
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 126

    (14) sigParams -> ID VIRGULA sigParams .

    RPAREN          reduce using rule 14 (sigParams -> ID VIRGULA sigParams .)


state 127

    (38) exp -> exp TERNARIO1 exp TERNARIO2 exp .
    (29) exp -> exp . SOMA exp
    (38) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (40) exp -> exp . OR exp
    (41) exp -> exp . AND exp
    (42) exp -> exp . MAIORIGUALQ exp
    (43) exp -> exp . MENORIGUALQ exp
    (44) exp -> exp . MENORQ exp
    (45) exp -> exp . MAIORQ exp
    (46) exp -> exp . DIFERENTEPACARAI exp
    (47) exp -> exp . DIFERENTE exp
    (48) exp -> exp . IGUALPACARAI exp
    (49) exp -> exp . IGUAL exp
    (50) exp -> exp . RESTOINCREMENT exp
    (51) exp -> exp . DIVINCREMENT exp
    (52) exp -> exp . MULTINCREMENT exp
    (55) exp -> exp . DECREMENT
    (56) exp -> exp . EXPONENCIACAO exp
    (57) exp -> exp . INCREMENT
    (58) exp -> exp . RESTO exp
    (59) exp -> exp . MULT exp
    (60) exp -> exp . DIV exp
    (61) exp -> exp . SUB exp

    PV              reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .)
    RESTOINCREMENT  reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .)
    DIVINCREMENT    reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .)
    MULTINCREMENT   reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .)
    TERNARIO2       reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .)
    RPAREN          reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .)
    VIRGULA         reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .)
    RCOLCHETE       reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .)
    SOMA            shift and go to state 46
    TERNARIO1       shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    MAIORIGUALQ     shift and go to state 50
    MENORIGUALQ     shift and go to state 51
    MENORQ          shift and go to state 52
    MAIORQ          shift and go to state 53
    DIFERENTEPACARAI shift and go to state 54
    DIFERENTE       shift and go to state 55
    IGUALPACARAI    shift and go to state 56
    IGUAL           shift and go to state 57
    DECREMENT       shift and go to state 61
    EXPONENCIACAO   shift and go to state 62
    INCREMENT       shift and go to state 63
    RESTO           shift and go to state 64
    MULT            shift and go to state 65
    DIV             shift and go to state 66
    SUB             shift and go to state 67

  ! SOMA            [ reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! TERNARIO1       [ reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! OR              [ reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! AND             [ reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! MENORIGUALQ     [ reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! MENORQ          [ reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! MAIORQ          [ reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! DIFERENTEPACARAI [ reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! DIFERENTE       [ reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! IGUALPACARAI    [ reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! IGUAL           [ reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! DECREMENT       [ reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! INCREMENT       [ reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! RESTO           [ reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! MULT            [ reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! DIV             [ reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! SUB             [ reduce using rule 38 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! RESTOINCREMENT  [ shift and go to state 58 ]
  ! DIVINCREMENT    [ shift and go to state 59 ]
  ! MULTINCREMENT   [ shift and go to state 60 ]


state 128

    (21) stm -> WHILE LPAREN exp RPAREN bodyorstm .

    RETURN          reduce using rule 21 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    WHILE           reduce using rule 21 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    IF              reduce using rule 21 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    FOR             reduce using rule 21 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    FALSE           reduce using rule 21 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    TRUE            reduce using rule 21 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    ID              reduce using rule 21 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    FLOAT           reduce using rule 21 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    INTEIRO         reduce using rule 21 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    NEGACAO         reduce using rule 21 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    DECREMENTN      reduce using rule 21 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    INCREMENTN      reduce using rule 21 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    LET             reduce using rule 21 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    CONST           reduce using rule 21 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    VAR             reduce using rule 21 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    STRINGD         reduce using rule 21 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    STRINGS         reduce using rule 21 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    RCHAVES         reduce using rule 21 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    ELSE            reduce using rule 21 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)


state 129

    (27) bodyorstm -> body .

    RETURN          reduce using rule 27 (bodyorstm -> body .)
    WHILE           reduce using rule 27 (bodyorstm -> body .)
    IF              reduce using rule 27 (bodyorstm -> body .)
    FOR             reduce using rule 27 (bodyorstm -> body .)
    FALSE           reduce using rule 27 (bodyorstm -> body .)
    TRUE            reduce using rule 27 (bodyorstm -> body .)
    ID              reduce using rule 27 (bodyorstm -> body .)
    FLOAT           reduce using rule 27 (bodyorstm -> body .)
    INTEIRO         reduce using rule 27 (bodyorstm -> body .)
    NEGACAO         reduce using rule 27 (bodyorstm -> body .)
    DECREMENTN      reduce using rule 27 (bodyorstm -> body .)
    INCREMENTN      reduce using rule 27 (bodyorstm -> body .)
    LET             reduce using rule 27 (bodyorstm -> body .)
    CONST           reduce using rule 27 (bodyorstm -> body .)
    VAR             reduce using rule 27 (bodyorstm -> body .)
    STRINGD         reduce using rule 27 (bodyorstm -> body .)
    STRINGS         reduce using rule 27 (bodyorstm -> body .)
    RCHAVES         reduce using rule 27 (bodyorstm -> body .)
    ELSE            reduce using rule 27 (bodyorstm -> body .)


state 130

    (28) bodyorstm -> stm .

    RETURN          reduce using rule 28 (bodyorstm -> stm .)
    WHILE           reduce using rule 28 (bodyorstm -> stm .)
    IF              reduce using rule 28 (bodyorstm -> stm .)
    FOR             reduce using rule 28 (bodyorstm -> stm .)
    FALSE           reduce using rule 28 (bodyorstm -> stm .)
    TRUE            reduce using rule 28 (bodyorstm -> stm .)
    ID              reduce using rule 28 (bodyorstm -> stm .)
    FLOAT           reduce using rule 28 (bodyorstm -> stm .)
    INTEIRO         reduce using rule 28 (bodyorstm -> stm .)
    NEGACAO         reduce using rule 28 (bodyorstm -> stm .)
    DECREMENTN      reduce using rule 28 (bodyorstm -> stm .)
    INCREMENTN      reduce using rule 28 (bodyorstm -> stm .)
    LET             reduce using rule 28 (bodyorstm -> stm .)
    CONST           reduce using rule 28 (bodyorstm -> stm .)
    VAR             reduce using rule 28 (bodyorstm -> stm .)
    STRINGD         reduce using rule 28 (bodyorstm -> stm .)
    STRINGS         reduce using rule 28 (bodyorstm -> stm .)
    RCHAVES         reduce using rule 28 (bodyorstm -> stm .)
    ELSE            reduce using rule 28 (bodyorstm -> stm .)


state 131

    (22) stm -> IF LPAREN exp RPAREN bodyorstm .
    (24) stm -> IF LPAREN exp RPAREN bodyorstm . ELSE bodyorstm

    RETURN          reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    WHILE           reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    IF              reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    FOR             reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    FALSE           reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    TRUE            reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    ID              reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    FLOAT           reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    INTEIRO         reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    NEGACAO         reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    DECREMENTN      reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    INCREMENTN      reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    LET             reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    CONST           reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    VAR             reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    STRINGD         reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    STRINGS         reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    RCHAVES         reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    ELSE            reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm .)

  ! ELSE            [ shift and go to state 136 ]


state 132

    (23) stm -> FOR LPAREN opexp PV opexp . PV opexp RPAREN bodyorstm

    PV              shift and go to state 137


state 133

    (64) params -> exp VIRGULA params .

    RPAREN          reduce using rule 64 (params -> exp VIRGULA params .)


state 134

    (73) listexp -> exp VIRGULA listexp .

    RCOLCHETE       reduce using rule 73 (listexp -> exp VIRGULA listexp .)
    PV              reduce using rule 73 (listexp -> exp VIRGULA listexp .)


state 135

    (9) vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .

    PV              reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)


state 136

    (24) stm -> IF LPAREN exp RPAREN bodyorstm ELSE . bodyorstm
    (27) bodyorstm -> . body
    (28) bodyorstm -> . stm
    (15) body -> . LCHAVES stms RCHAVES
    (18) stm -> . vardecl PV
    (19) stm -> . RETURN exp PV
    (20) stm -> . exp PV
    (21) stm -> . WHILE LPAREN exp RPAREN bodyorstm
    (22) stm -> . IF LPAREN exp RPAREN bodyorstm
    (23) stm -> . FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm
    (24) stm -> . IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    LCHAVES         shift and go to state 13
    RETURN          shift and go to state 20
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    LET             shift and go to state 7
    CONST           shift and go to state 8
    VAR             shift and go to state 9
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    exp                            shift and go to state 21
    bodyorstm                      shift and go to state 138
    body                           shift and go to state 129
    stm                            shift and go to state 130
    vardecl                        shift and go to state 19
    tipodecl                       shift and go to state 5
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 137

    (23) stm -> FOR LPAREN opexp PV opexp PV . opexp RPAREN bodyorstm
    (25) opexp -> . exp
    (26) opexp -> . VOID
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    VOID            shift and go to state 106
    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    opexp                          shift and go to state 139
    exp                            shift and go to state 105
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 138

    (24) stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .

    RETURN          reduce using rule 24 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    WHILE           reduce using rule 24 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    IF              reduce using rule 24 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    FOR             reduce using rule 24 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    FALSE           reduce using rule 24 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    TRUE            reduce using rule 24 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    ID              reduce using rule 24 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    FLOAT           reduce using rule 24 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    INTEIRO         reduce using rule 24 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    NEGACAO         reduce using rule 24 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    DECREMENTN      reduce using rule 24 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    INCREMENTN      reduce using rule 24 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    LET             reduce using rule 24 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    CONST           reduce using rule 24 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    VAR             reduce using rule 24 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    STRINGD         reduce using rule 24 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    STRINGS         reduce using rule 24 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    RCHAVES         reduce using rule 24 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    ELSE            reduce using rule 24 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)


state 139

    (23) stm -> FOR LPAREN opexp PV opexp PV opexp . RPAREN bodyorstm

    RPAREN          shift and go to state 140


state 140

    (23) stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN . bodyorstm
    (27) bodyorstm -> . body
    (28) bodyorstm -> . stm
    (15) body -> . LCHAVES stms RCHAVES
    (18) stm -> . vardecl PV
    (19) stm -> . RETURN exp PV
    (20) stm -> . exp PV
    (21) stm -> . WHILE LPAREN exp RPAREN bodyorstm
    (22) stm -> . IF LPAREN exp RPAREN bodyorstm
    (23) stm -> . FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm
    (24) stm -> . IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . string
    (33) exp -> . ID
    (34) exp -> . FLOAT
    (35) exp -> . INTEIRO
    (36) exp -> . assign
    (37) exp -> . call
    (38) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (39) exp -> . NEGACAO exp
    (40) exp -> . exp OR exp
    (41) exp -> . exp AND exp
    (42) exp -> . exp MAIORIGUALQ exp
    (43) exp -> . exp MENORIGUALQ exp
    (44) exp -> . exp MENORQ exp
    (45) exp -> . exp MAIORQ exp
    (46) exp -> . exp DIFERENTEPACARAI exp
    (47) exp -> . exp DIFERENTE exp
    (48) exp -> . exp IGUALPACARAI exp
    (49) exp -> . exp IGUAL exp
    (50) exp -> . exp RESTOINCREMENT exp
    (51) exp -> . exp DIVINCREMENT exp
    (52) exp -> . exp MULTINCREMENT exp
    (53) exp -> . DECREMENTN exp
    (54) exp -> . INCREMENTN exp
    (55) exp -> . exp DECREMENT
    (56) exp -> . exp EXPONENCIACAO exp
    (57) exp -> . exp INCREMENT
    (58) exp -> . exp RESTO exp
    (59) exp -> . exp MULT exp
    (60) exp -> . exp DIV exp
    (61) exp -> . exp SUB exp
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR
    (70) string -> . STRINGD
    (71) string -> . STRINGS
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN

    LCHAVES         shift and go to state 13
    RETURN          shift and go to state 20
    WHILE           shift and go to state 22
    IF              shift and go to state 23
    FOR             shift and go to state 24
    FALSE           shift and go to state 27
    TRUE            shift and go to state 28
    ID              shift and go to state 25
    FLOAT           shift and go to state 30
    INTEIRO         shift and go to state 26
    NEGACAO         shift and go to state 33
    DECREMENTN      shift and go to state 34
    INCREMENTN      shift and go to state 35
    LET             shift and go to state 7
    CONST           shift and go to state 8
    VAR             shift and go to state 9
    STRINGD         shift and go to state 36
    STRINGS         shift and go to state 37

    bodyorstm                      shift and go to state 141
    body                           shift and go to state 129
    stm                            shift and go to state 130
    vardecl                        shift and go to state 19
    exp                            shift and go to state 21
    tipodecl                       shift and go to state 5
    string                         shift and go to state 29
    assign                         shift and go to state 31
    call                           shift and go to state 32

state 141

    (23) stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .

    RETURN          reduce using rule 23 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    WHILE           reduce using rule 23 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    IF              reduce using rule 23 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    FOR             reduce using rule 23 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    FALSE           reduce using rule 23 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    TRUE            reduce using rule 23 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    ID              reduce using rule 23 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    FLOAT           reduce using rule 23 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    INTEIRO         reduce using rule 23 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    NEGACAO         reduce using rule 23 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    DECREMENTN      reduce using rule 23 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    INCREMENTN      reduce using rule 23 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    LET             reduce using rule 23 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    CONST           reduce using rule 23 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    VAR             reduce using rule 23 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    STRINGD         reduce using rule 23 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    STRINGS         reduce using rule 23 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    RCHAVES         reduce using rule 23 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    ELSE            reduce using rule 23 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)

