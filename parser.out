Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ASPAS
    ASPASD
    AWAIT
    BOOLEAN
    BREAK
    BYTE
    CASE
    CATCH
    CHAR
    CLASS
    COMMENT
    COMMENTMULTI
    CONTINUE
    DEBUGGER
    DEFAULT
    DELETE
    DO
    DOUBLE
    EXPORT
    EXTENDS
    FINAL
    FINALLY
    HEXADECIMAL
    IMPORT
    IN
    INSTANCEOF
    INT
    LONG
    NEW
    NFLOAT
    NULL
    OCTAL
    PRIVATE
    PROTECTED
    PUBLIC
    SHORT
    STATIC
    SUPER
    SWITCH
    THIS
    THROW
    TRY
    TYPEOF
    WITH
    YIELD

Grammar

Rule 0     S' -> program
Rule 1     program -> funcdecl
Rule 2     program -> funcdecl program
Rule 3     program -> stms
Rule 4     program -> stms program
Rule 5     vardecl -> tipodecl ID
Rule 6     vardecl -> tipodecl ID ATRIBUICAO exp
Rule 7     vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
Rule 8     vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
Rule 9     vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
Rule 10    vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
Rule 11    funcdecl -> signature body
Rule 12    signature -> FUNCTION ID LPAREN sigParams RPAREN
Rule 13    sigParams -> ID
Rule 14    sigParams -> ID VIRGULA sigParams
Rule 15    body -> LCHAVES stms RCHAVES
Rule 16    stms -> stm
Rule 17    stms -> stm stms
Rule 18    stm -> RETURN exp PV
Rule 19    stm -> exp PV
Rule 20    stm -> WHILE LPAREN exp RPAREN bodyorstm
Rule 21    stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm
Rule 22    stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm
Rule 23    stm -> IF LPAREN exp RPAREN bodyorstm
Rule 24    opexp -> exp
Rule 25    opexp -> VOID
Rule 26    bodyorstm -> body
Rule 27    bodyorstm -> stm
Rule 28    exp -> vardecl
Rule 29    exp -> exp SOMA exp
Rule 30    exp -> FALSE
Rule 31    exp -> TRUE
Rule 32    exp -> ID
Rule 33    exp -> FLOAT
Rule 34    exp -> INTEIRO
Rule 35    exp -> assign
Rule 36    exp -> call
Rule 37    exp -> exp TERNARIO1 exp TERNARIO2 exp
Rule 38    exp -> NEGACAO exp
Rule 39    exp -> exp OR exp
Rule 40    exp -> exp AND exp
Rule 41    exp -> exp MAIORIGUALQ exp
Rule 42    exp -> exp MENORIGUALQ exp
Rule 43    exp -> exp MENORQ exp
Rule 44    exp -> exp MAIORQ exp
Rule 45    exp -> exp DIFERENTEPACARAI exp
Rule 46    exp -> exp DIFERENTE exp
Rule 47    exp -> exp IGUALPACARAI exp
Rule 48    exp -> exp IGUAL exp
Rule 49    exp -> exp RESTOINCREMENT exp
Rule 50    exp -> exp DIVINCREMENT exp
Rule 51    exp -> exp MULTINCREMENT exp
Rule 52    exp -> exp DECREMENTN exp
Rule 53    exp -> exp INCREMENTN exp
Rule 54    exp -> exp DECREMENT
Rule 55    exp -> exp EXPONENCIACAO exp
Rule 56    exp -> exp INCREMENT
Rule 57    exp -> exp RESTO exp
Rule 58    exp -> exp MULT exp
Rule 59    exp -> exp DIV exp
Rule 60    exp -> exp SUB exp
Rule 61    exp -> STRING
Rule 62    call -> ID LPAREN params RPAREN
Rule 63    call -> ID LPAREN RPAREN
Rule 64    params -> exp VIRGULA params
Rule 65    params -> exp
Rule 66    assign -> ID ATRIBUICAO exp
Rule 67    tipodecl -> LET
Rule 68    tipodecl -> CONST
Rule 69    tipodecl -> VAR
Rule 70    listexp -> exp
Rule 71    listexp -> exp VIRGULA listexp

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 40
ASPAS                : 
ASPASD               : 
ATRIBUICAO           : 6 8 9 10 66
AWAIT                : 
BOOLEAN              : 
BREAK                : 
BYTE                 : 
CASE                 : 
CATCH                : 
CHAR                 : 
CLASS                : 
COMMENT              : 
COMMENTMULTI         : 
CONST                : 68
CONTINUE             : 
DEBUGGER             : 
DECREMENT            : 54
DECREMENTN           : 52
DEFAULT              : 
DELETE               : 
DIFERENTE            : 46
DIFERENTEPACARAI     : 45
DIV                  : 59
DIVINCREMENT         : 50
DO                   : 
DOUBLE               : 
ELSE                 : 22
EXPONENCIACAO        : 55
EXPORT               : 
EXTENDS              : 
FALSE                : 30
FINAL                : 
FINALLY              : 
FLOAT                : 33
FOR                  : 21
FUNCTION             : 12
HEXADECIMAL          : 
ID                   : 5 6 7 8 9 10 12 13 14 32 62 63 66
IF                   : 22 23
IGUAL                : 48
IGUALPACARAI         : 47
IMPORT               : 
IN                   : 
INCREMENT            : 56
INCREMENTN           : 53
INSTANCEOF           : 
INT                  : 
INTEIRO              : 7 9 34
LCHAVES              : 15
LCOLCHETE            : 7 8 9 10
LET                  : 67
LONG                 : 
LPAREN               : 12 20 21 22 23 62 63
MAIORIGUALQ          : 41
MAIORQ               : 44
MENORIGUALQ          : 42
MENORQ               : 43
MULT                 : 58
MULTINCREMENT        : 51
NEGACAO              : 38
NEW                  : 
NFLOAT               : 
NULL                 : 
OCTAL                : 
OR                   : 39
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PV                   : 18 19 21 21
RCHAVES              : 15
RCOLCHETE            : 7 8 9 10
RESTO                : 57
RESTOINCREMENT       : 49
RETURN               : 18
RPAREN               : 12 20 21 22 23 62 63
SHORT                : 
SOMA                 : 29
STATIC               : 
STRING               : 61
SUB                  : 60
SUPER                : 
SWITCH               : 
TERNARIO1            : 37
TERNARIO2            : 37
THIS                 : 
THROW                : 
TRUE                 : 31
TRY                  : 
TYPEOF               : 
VAR                  : 69
VIRGULA              : 14 64 71
VOID                 : 25
WHILE                : 20
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

assign               : 35
body                 : 11 26
bodyorstm            : 20 21 22 22 23
call                 : 36
exp                  : 6 18 19 20 22 23 24 29 29 37 37 37 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 53 54 55 55 56 57 57 58 58 59 59 60 60 64 65 66 70 71
funcdecl             : 1 2
listexp              : 8 9 71
opexp                : 21 21 21
params               : 62 64
program              : 2 4 0
sigParams            : 12 14
signature            : 11
stm                  : 16 17 27
stms                 : 3 4 15 17
tipodecl             : 5 6 7 8 9 10
vardecl              : 28

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . funcdecl
    (2) program -> . funcdecl program
    (3) program -> . stms
    (4) program -> . stms program
    (11) funcdecl -> . signature body
    (16) stms -> . stm
    (17) stms -> . stm stms
    (12) signature -> . FUNCTION ID LPAREN sigParams RPAREN
    (18) stm -> . RETURN exp PV
    (19) stm -> . exp PV
    (20) stm -> . WHILE LPAREN exp RPAREN bodyorstm
    (21) stm -> . FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm
    (22) stm -> . IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm
    (23) stm -> . IF LPAREN exp RPAREN bodyorstm
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FUNCTION        shift and go to state 6
    RETURN          shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    IF              shift and go to state 12
    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    program                        shift and go to state 1
    funcdecl                       shift and go to state 2
    stms                           shift and go to state 3
    signature                      shift and go to state 4
    stm                            shift and go to state 5
    exp                            shift and go to state 9
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 1

    (0) S' -> program .



state 2

    (1) program -> funcdecl .
    (2) program -> funcdecl . program
    (1) program -> . funcdecl
    (2) program -> . funcdecl program
    (3) program -> . stms
    (4) program -> . stms program
    (11) funcdecl -> . signature body
    (16) stms -> . stm
    (17) stms -> . stm stms
    (12) signature -> . FUNCTION ID LPAREN sigParams RPAREN
    (18) stm -> . RETURN exp PV
    (19) stm -> . exp PV
    (20) stm -> . WHILE LPAREN exp RPAREN bodyorstm
    (21) stm -> . FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm
    (22) stm -> . IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm
    (23) stm -> . IF LPAREN exp RPAREN bodyorstm
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    $end            reduce using rule 1 (program -> funcdecl .)
    FUNCTION        shift and go to state 6
    RETURN          shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    IF              shift and go to state 12
    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    funcdecl                       shift and go to state 2
    program                        shift and go to state 26
    stms                           shift and go to state 3
    signature                      shift and go to state 4
    stm                            shift and go to state 5
    exp                            shift and go to state 9
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 3

    (3) program -> stms .
    (4) program -> stms . program
    (1) program -> . funcdecl
    (2) program -> . funcdecl program
    (3) program -> . stms
    (4) program -> . stms program
    (11) funcdecl -> . signature body
    (16) stms -> . stm
    (17) stms -> . stm stms
    (12) signature -> . FUNCTION ID LPAREN sigParams RPAREN
    (18) stm -> . RETURN exp PV
    (19) stm -> . exp PV
    (20) stm -> . WHILE LPAREN exp RPAREN bodyorstm
    (21) stm -> . FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm
    (22) stm -> . IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm
    (23) stm -> . IF LPAREN exp RPAREN bodyorstm
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    $end            reduce using rule 3 (program -> stms .)
    FUNCTION        shift and go to state 6
    RETURN          shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    IF              shift and go to state 12
    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    stms                           shift and go to state 3
    program                        shift and go to state 27
    funcdecl                       shift and go to state 2
    signature                      shift and go to state 4
    stm                            shift and go to state 5
    exp                            shift and go to state 9
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 4

    (11) funcdecl -> signature . body
    (15) body -> . LCHAVES stms RCHAVES

    LCHAVES         shift and go to state 29

    body                           shift and go to state 28

state 5

    (16) stms -> stm .
    (17) stms -> stm . stms
    (16) stms -> . stm
    (17) stms -> . stm stms
    (18) stm -> . RETURN exp PV
    (19) stm -> . exp PV
    (20) stm -> . WHILE LPAREN exp RPAREN bodyorstm
    (21) stm -> . FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm
    (22) stm -> . IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm
    (23) stm -> . IF LPAREN exp RPAREN bodyorstm
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INTEIRO resolved as shift
  ! shift/reduce conflict for NEGACAO resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
    FUNCTION        reduce using rule 16 (stms -> stm .)
    $end            reduce using rule 16 (stms -> stm .)
    RCHAVES         reduce using rule 16 (stms -> stm .)
    RETURN          shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    IF              shift and go to state 12
    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

  ! RETURN          [ reduce using rule 16 (stms -> stm .) ]
  ! WHILE           [ reduce using rule 16 (stms -> stm .) ]
  ! FOR             [ reduce using rule 16 (stms -> stm .) ]
  ! IF              [ reduce using rule 16 (stms -> stm .) ]
  ! FALSE           [ reduce using rule 16 (stms -> stm .) ]
  ! TRUE            [ reduce using rule 16 (stms -> stm .) ]
  ! ID              [ reduce using rule 16 (stms -> stm .) ]
  ! FLOAT           [ reduce using rule 16 (stms -> stm .) ]
  ! INTEIRO         [ reduce using rule 16 (stms -> stm .) ]
  ! NEGACAO         [ reduce using rule 16 (stms -> stm .) ]
  ! STRING          [ reduce using rule 16 (stms -> stm .) ]
  ! LET             [ reduce using rule 16 (stms -> stm .) ]
  ! CONST           [ reduce using rule 16 (stms -> stm .) ]
  ! VAR             [ reduce using rule 16 (stms -> stm .) ]

    stm                            shift and go to state 5
    stms                           shift and go to state 30
    exp                            shift and go to state 9
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 6

    (12) signature -> FUNCTION . ID LPAREN sigParams RPAREN

    ID              shift and go to state 31


state 7

    (32) exp -> ID .
    (66) assign -> ID . ATRIBUICAO exp
    (62) call -> ID . LPAREN params RPAREN
    (63) call -> ID . LPAREN RPAREN

    PV              reduce using rule 32 (exp -> ID .)
    SOMA            reduce using rule 32 (exp -> ID .)
    TERNARIO1       reduce using rule 32 (exp -> ID .)
    OR              reduce using rule 32 (exp -> ID .)
    AND             reduce using rule 32 (exp -> ID .)
    MAIORIGUALQ     reduce using rule 32 (exp -> ID .)
    MENORIGUALQ     reduce using rule 32 (exp -> ID .)
    MENORQ          reduce using rule 32 (exp -> ID .)
    MAIORQ          reduce using rule 32 (exp -> ID .)
    DIFERENTEPACARAI reduce using rule 32 (exp -> ID .)
    DIFERENTE       reduce using rule 32 (exp -> ID .)
    IGUALPACARAI    reduce using rule 32 (exp -> ID .)
    IGUAL           reduce using rule 32 (exp -> ID .)
    RESTOINCREMENT  reduce using rule 32 (exp -> ID .)
    DIVINCREMENT    reduce using rule 32 (exp -> ID .)
    MULTINCREMENT   reduce using rule 32 (exp -> ID .)
    DECREMENTN      reduce using rule 32 (exp -> ID .)
    INCREMENTN      reduce using rule 32 (exp -> ID .)
    DECREMENT       reduce using rule 32 (exp -> ID .)
    EXPONENCIACAO   reduce using rule 32 (exp -> ID .)
    INCREMENT       reduce using rule 32 (exp -> ID .)
    RESTO           reduce using rule 32 (exp -> ID .)
    MULT            reduce using rule 32 (exp -> ID .)
    DIV             reduce using rule 32 (exp -> ID .)
    SUB             reduce using rule 32 (exp -> ID .)
    VIRGULA         reduce using rule 32 (exp -> ID .)
    RPAREN          reduce using rule 32 (exp -> ID .)
    TERNARIO2       reduce using rule 32 (exp -> ID .)
    RCOLCHETE       reduce using rule 32 (exp -> ID .)
    ATRIBUICAO      shift and go to state 32
    LPAREN          shift and go to state 33


state 8

    (18) stm -> RETURN . exp PV
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 34
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 9

    (19) stm -> exp . PV
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              shift and go to state 35
    SOMA            shift and go to state 36
    TERNARIO1       shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    MAIORIGUALQ     shift and go to state 40
    MENORIGUALQ     shift and go to state 41
    MENORQ          shift and go to state 42
    MAIORQ          shift and go to state 43
    DIFERENTEPACARAI shift and go to state 44
    DIFERENTE       shift and go to state 45
    IGUALPACARAI    shift and go to state 46
    IGUAL           shift and go to state 47
    RESTOINCREMENT  shift and go to state 48
    DIVINCREMENT    shift and go to state 49
    MULTINCREMENT   shift and go to state 50
    DECREMENTN      shift and go to state 51
    INCREMENTN      shift and go to state 52
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59


state 10

    (20) stm -> WHILE . LPAREN exp RPAREN bodyorstm

    LPAREN          shift and go to state 60


state 11

    (21) stm -> FOR . LPAREN opexp PV opexp PV opexp RPAREN bodyorstm

    LPAREN          shift and go to state 61


state 12

    (22) stm -> IF . LPAREN exp RPAREN bodyorstm ELSE bodyorstm
    (23) stm -> IF . LPAREN exp RPAREN bodyorstm

    LPAREN          shift and go to state 62


state 13

    (28) exp -> vardecl .

    PV              reduce using rule 28 (exp -> vardecl .)
    SOMA            reduce using rule 28 (exp -> vardecl .)
    TERNARIO1       reduce using rule 28 (exp -> vardecl .)
    OR              reduce using rule 28 (exp -> vardecl .)
    AND             reduce using rule 28 (exp -> vardecl .)
    MAIORIGUALQ     reduce using rule 28 (exp -> vardecl .)
    MENORIGUALQ     reduce using rule 28 (exp -> vardecl .)
    MENORQ          reduce using rule 28 (exp -> vardecl .)
    MAIORQ          reduce using rule 28 (exp -> vardecl .)
    DIFERENTEPACARAI reduce using rule 28 (exp -> vardecl .)
    DIFERENTE       reduce using rule 28 (exp -> vardecl .)
    IGUALPACARAI    reduce using rule 28 (exp -> vardecl .)
    IGUAL           reduce using rule 28 (exp -> vardecl .)
    RESTOINCREMENT  reduce using rule 28 (exp -> vardecl .)
    DIVINCREMENT    reduce using rule 28 (exp -> vardecl .)
    MULTINCREMENT   reduce using rule 28 (exp -> vardecl .)
    DECREMENTN      reduce using rule 28 (exp -> vardecl .)
    INCREMENTN      reduce using rule 28 (exp -> vardecl .)
    DECREMENT       reduce using rule 28 (exp -> vardecl .)
    EXPONENCIACAO   reduce using rule 28 (exp -> vardecl .)
    INCREMENT       reduce using rule 28 (exp -> vardecl .)
    RESTO           reduce using rule 28 (exp -> vardecl .)
    MULT            reduce using rule 28 (exp -> vardecl .)
    DIV             reduce using rule 28 (exp -> vardecl .)
    SUB             reduce using rule 28 (exp -> vardecl .)
    VIRGULA         reduce using rule 28 (exp -> vardecl .)
    RPAREN          reduce using rule 28 (exp -> vardecl .)
    TERNARIO2       reduce using rule 28 (exp -> vardecl .)
    RCOLCHETE       reduce using rule 28 (exp -> vardecl .)


state 14

    (30) exp -> FALSE .

    PV              reduce using rule 30 (exp -> FALSE .)
    SOMA            reduce using rule 30 (exp -> FALSE .)
    TERNARIO1       reduce using rule 30 (exp -> FALSE .)
    OR              reduce using rule 30 (exp -> FALSE .)
    AND             reduce using rule 30 (exp -> FALSE .)
    MAIORIGUALQ     reduce using rule 30 (exp -> FALSE .)
    MENORIGUALQ     reduce using rule 30 (exp -> FALSE .)
    MENORQ          reduce using rule 30 (exp -> FALSE .)
    MAIORQ          reduce using rule 30 (exp -> FALSE .)
    DIFERENTEPACARAI reduce using rule 30 (exp -> FALSE .)
    DIFERENTE       reduce using rule 30 (exp -> FALSE .)
    IGUALPACARAI    reduce using rule 30 (exp -> FALSE .)
    IGUAL           reduce using rule 30 (exp -> FALSE .)
    RESTOINCREMENT  reduce using rule 30 (exp -> FALSE .)
    DIVINCREMENT    reduce using rule 30 (exp -> FALSE .)
    MULTINCREMENT   reduce using rule 30 (exp -> FALSE .)
    DECREMENTN      reduce using rule 30 (exp -> FALSE .)
    INCREMENTN      reduce using rule 30 (exp -> FALSE .)
    DECREMENT       reduce using rule 30 (exp -> FALSE .)
    EXPONENCIACAO   reduce using rule 30 (exp -> FALSE .)
    INCREMENT       reduce using rule 30 (exp -> FALSE .)
    RESTO           reduce using rule 30 (exp -> FALSE .)
    MULT            reduce using rule 30 (exp -> FALSE .)
    DIV             reduce using rule 30 (exp -> FALSE .)
    SUB             reduce using rule 30 (exp -> FALSE .)
    VIRGULA         reduce using rule 30 (exp -> FALSE .)
    RPAREN          reduce using rule 30 (exp -> FALSE .)
    TERNARIO2       reduce using rule 30 (exp -> FALSE .)
    RCOLCHETE       reduce using rule 30 (exp -> FALSE .)


state 15

    (31) exp -> TRUE .

    PV              reduce using rule 31 (exp -> TRUE .)
    SOMA            reduce using rule 31 (exp -> TRUE .)
    TERNARIO1       reduce using rule 31 (exp -> TRUE .)
    OR              reduce using rule 31 (exp -> TRUE .)
    AND             reduce using rule 31 (exp -> TRUE .)
    MAIORIGUALQ     reduce using rule 31 (exp -> TRUE .)
    MENORIGUALQ     reduce using rule 31 (exp -> TRUE .)
    MENORQ          reduce using rule 31 (exp -> TRUE .)
    MAIORQ          reduce using rule 31 (exp -> TRUE .)
    DIFERENTEPACARAI reduce using rule 31 (exp -> TRUE .)
    DIFERENTE       reduce using rule 31 (exp -> TRUE .)
    IGUALPACARAI    reduce using rule 31 (exp -> TRUE .)
    IGUAL           reduce using rule 31 (exp -> TRUE .)
    RESTOINCREMENT  reduce using rule 31 (exp -> TRUE .)
    DIVINCREMENT    reduce using rule 31 (exp -> TRUE .)
    MULTINCREMENT   reduce using rule 31 (exp -> TRUE .)
    DECREMENTN      reduce using rule 31 (exp -> TRUE .)
    INCREMENTN      reduce using rule 31 (exp -> TRUE .)
    DECREMENT       reduce using rule 31 (exp -> TRUE .)
    EXPONENCIACAO   reduce using rule 31 (exp -> TRUE .)
    INCREMENT       reduce using rule 31 (exp -> TRUE .)
    RESTO           reduce using rule 31 (exp -> TRUE .)
    MULT            reduce using rule 31 (exp -> TRUE .)
    DIV             reduce using rule 31 (exp -> TRUE .)
    SUB             reduce using rule 31 (exp -> TRUE .)
    VIRGULA         reduce using rule 31 (exp -> TRUE .)
    RPAREN          reduce using rule 31 (exp -> TRUE .)
    TERNARIO2       reduce using rule 31 (exp -> TRUE .)
    RCOLCHETE       reduce using rule 31 (exp -> TRUE .)


state 16

    (33) exp -> FLOAT .

    PV              reduce using rule 33 (exp -> FLOAT .)
    SOMA            reduce using rule 33 (exp -> FLOAT .)
    TERNARIO1       reduce using rule 33 (exp -> FLOAT .)
    OR              reduce using rule 33 (exp -> FLOAT .)
    AND             reduce using rule 33 (exp -> FLOAT .)
    MAIORIGUALQ     reduce using rule 33 (exp -> FLOAT .)
    MENORIGUALQ     reduce using rule 33 (exp -> FLOAT .)
    MENORQ          reduce using rule 33 (exp -> FLOAT .)
    MAIORQ          reduce using rule 33 (exp -> FLOAT .)
    DIFERENTEPACARAI reduce using rule 33 (exp -> FLOAT .)
    DIFERENTE       reduce using rule 33 (exp -> FLOAT .)
    IGUALPACARAI    reduce using rule 33 (exp -> FLOAT .)
    IGUAL           reduce using rule 33 (exp -> FLOAT .)
    RESTOINCREMENT  reduce using rule 33 (exp -> FLOAT .)
    DIVINCREMENT    reduce using rule 33 (exp -> FLOAT .)
    MULTINCREMENT   reduce using rule 33 (exp -> FLOAT .)
    DECREMENTN      reduce using rule 33 (exp -> FLOAT .)
    INCREMENTN      reduce using rule 33 (exp -> FLOAT .)
    DECREMENT       reduce using rule 33 (exp -> FLOAT .)
    EXPONENCIACAO   reduce using rule 33 (exp -> FLOAT .)
    INCREMENT       reduce using rule 33 (exp -> FLOAT .)
    RESTO           reduce using rule 33 (exp -> FLOAT .)
    MULT            reduce using rule 33 (exp -> FLOAT .)
    DIV             reduce using rule 33 (exp -> FLOAT .)
    SUB             reduce using rule 33 (exp -> FLOAT .)
    VIRGULA         reduce using rule 33 (exp -> FLOAT .)
    RPAREN          reduce using rule 33 (exp -> FLOAT .)
    TERNARIO2       reduce using rule 33 (exp -> FLOAT .)
    RCOLCHETE       reduce using rule 33 (exp -> FLOAT .)


state 17

    (34) exp -> INTEIRO .

    PV              reduce using rule 34 (exp -> INTEIRO .)
    SOMA            reduce using rule 34 (exp -> INTEIRO .)
    TERNARIO1       reduce using rule 34 (exp -> INTEIRO .)
    OR              reduce using rule 34 (exp -> INTEIRO .)
    AND             reduce using rule 34 (exp -> INTEIRO .)
    MAIORIGUALQ     reduce using rule 34 (exp -> INTEIRO .)
    MENORIGUALQ     reduce using rule 34 (exp -> INTEIRO .)
    MENORQ          reduce using rule 34 (exp -> INTEIRO .)
    MAIORQ          reduce using rule 34 (exp -> INTEIRO .)
    DIFERENTEPACARAI reduce using rule 34 (exp -> INTEIRO .)
    DIFERENTE       reduce using rule 34 (exp -> INTEIRO .)
    IGUALPACARAI    reduce using rule 34 (exp -> INTEIRO .)
    IGUAL           reduce using rule 34 (exp -> INTEIRO .)
    RESTOINCREMENT  reduce using rule 34 (exp -> INTEIRO .)
    DIVINCREMENT    reduce using rule 34 (exp -> INTEIRO .)
    MULTINCREMENT   reduce using rule 34 (exp -> INTEIRO .)
    DECREMENTN      reduce using rule 34 (exp -> INTEIRO .)
    INCREMENTN      reduce using rule 34 (exp -> INTEIRO .)
    DECREMENT       reduce using rule 34 (exp -> INTEIRO .)
    EXPONENCIACAO   reduce using rule 34 (exp -> INTEIRO .)
    INCREMENT       reduce using rule 34 (exp -> INTEIRO .)
    RESTO           reduce using rule 34 (exp -> INTEIRO .)
    MULT            reduce using rule 34 (exp -> INTEIRO .)
    DIV             reduce using rule 34 (exp -> INTEIRO .)
    SUB             reduce using rule 34 (exp -> INTEIRO .)
    VIRGULA         reduce using rule 34 (exp -> INTEIRO .)
    RPAREN          reduce using rule 34 (exp -> INTEIRO .)
    TERNARIO2       reduce using rule 34 (exp -> INTEIRO .)
    RCOLCHETE       reduce using rule 34 (exp -> INTEIRO .)


state 18

    (35) exp -> assign .

    PV              reduce using rule 35 (exp -> assign .)
    SOMA            reduce using rule 35 (exp -> assign .)
    TERNARIO1       reduce using rule 35 (exp -> assign .)
    OR              reduce using rule 35 (exp -> assign .)
    AND             reduce using rule 35 (exp -> assign .)
    MAIORIGUALQ     reduce using rule 35 (exp -> assign .)
    MENORIGUALQ     reduce using rule 35 (exp -> assign .)
    MENORQ          reduce using rule 35 (exp -> assign .)
    MAIORQ          reduce using rule 35 (exp -> assign .)
    DIFERENTEPACARAI reduce using rule 35 (exp -> assign .)
    DIFERENTE       reduce using rule 35 (exp -> assign .)
    IGUALPACARAI    reduce using rule 35 (exp -> assign .)
    IGUAL           reduce using rule 35 (exp -> assign .)
    RESTOINCREMENT  reduce using rule 35 (exp -> assign .)
    DIVINCREMENT    reduce using rule 35 (exp -> assign .)
    MULTINCREMENT   reduce using rule 35 (exp -> assign .)
    DECREMENTN      reduce using rule 35 (exp -> assign .)
    INCREMENTN      reduce using rule 35 (exp -> assign .)
    DECREMENT       reduce using rule 35 (exp -> assign .)
    EXPONENCIACAO   reduce using rule 35 (exp -> assign .)
    INCREMENT       reduce using rule 35 (exp -> assign .)
    RESTO           reduce using rule 35 (exp -> assign .)
    MULT            reduce using rule 35 (exp -> assign .)
    DIV             reduce using rule 35 (exp -> assign .)
    SUB             reduce using rule 35 (exp -> assign .)
    VIRGULA         reduce using rule 35 (exp -> assign .)
    RPAREN          reduce using rule 35 (exp -> assign .)
    TERNARIO2       reduce using rule 35 (exp -> assign .)
    RCOLCHETE       reduce using rule 35 (exp -> assign .)


state 19

    (36) exp -> call .

    PV              reduce using rule 36 (exp -> call .)
    SOMA            reduce using rule 36 (exp -> call .)
    TERNARIO1       reduce using rule 36 (exp -> call .)
    OR              reduce using rule 36 (exp -> call .)
    AND             reduce using rule 36 (exp -> call .)
    MAIORIGUALQ     reduce using rule 36 (exp -> call .)
    MENORIGUALQ     reduce using rule 36 (exp -> call .)
    MENORQ          reduce using rule 36 (exp -> call .)
    MAIORQ          reduce using rule 36 (exp -> call .)
    DIFERENTEPACARAI reduce using rule 36 (exp -> call .)
    DIFERENTE       reduce using rule 36 (exp -> call .)
    IGUALPACARAI    reduce using rule 36 (exp -> call .)
    IGUAL           reduce using rule 36 (exp -> call .)
    RESTOINCREMENT  reduce using rule 36 (exp -> call .)
    DIVINCREMENT    reduce using rule 36 (exp -> call .)
    MULTINCREMENT   reduce using rule 36 (exp -> call .)
    DECREMENTN      reduce using rule 36 (exp -> call .)
    INCREMENTN      reduce using rule 36 (exp -> call .)
    DECREMENT       reduce using rule 36 (exp -> call .)
    EXPONENCIACAO   reduce using rule 36 (exp -> call .)
    INCREMENT       reduce using rule 36 (exp -> call .)
    RESTO           reduce using rule 36 (exp -> call .)
    MULT            reduce using rule 36 (exp -> call .)
    DIV             reduce using rule 36 (exp -> call .)
    SUB             reduce using rule 36 (exp -> call .)
    VIRGULA         reduce using rule 36 (exp -> call .)
    RPAREN          reduce using rule 36 (exp -> call .)
    TERNARIO2       reduce using rule 36 (exp -> call .)
    RCOLCHETE       reduce using rule 36 (exp -> call .)


state 20

    (38) exp -> NEGACAO . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 63
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 21

    (61) exp -> STRING .

    PV              reduce using rule 61 (exp -> STRING .)
    SOMA            reduce using rule 61 (exp -> STRING .)
    TERNARIO1       reduce using rule 61 (exp -> STRING .)
    OR              reduce using rule 61 (exp -> STRING .)
    AND             reduce using rule 61 (exp -> STRING .)
    MAIORIGUALQ     reduce using rule 61 (exp -> STRING .)
    MENORIGUALQ     reduce using rule 61 (exp -> STRING .)
    MENORQ          reduce using rule 61 (exp -> STRING .)
    MAIORQ          reduce using rule 61 (exp -> STRING .)
    DIFERENTEPACARAI reduce using rule 61 (exp -> STRING .)
    DIFERENTE       reduce using rule 61 (exp -> STRING .)
    IGUALPACARAI    reduce using rule 61 (exp -> STRING .)
    IGUAL           reduce using rule 61 (exp -> STRING .)
    RESTOINCREMENT  reduce using rule 61 (exp -> STRING .)
    DIVINCREMENT    reduce using rule 61 (exp -> STRING .)
    MULTINCREMENT   reduce using rule 61 (exp -> STRING .)
    DECREMENTN      reduce using rule 61 (exp -> STRING .)
    INCREMENTN      reduce using rule 61 (exp -> STRING .)
    DECREMENT       reduce using rule 61 (exp -> STRING .)
    EXPONENCIACAO   reduce using rule 61 (exp -> STRING .)
    INCREMENT       reduce using rule 61 (exp -> STRING .)
    RESTO           reduce using rule 61 (exp -> STRING .)
    MULT            reduce using rule 61 (exp -> STRING .)
    DIV             reduce using rule 61 (exp -> STRING .)
    SUB             reduce using rule 61 (exp -> STRING .)
    VIRGULA         reduce using rule 61 (exp -> STRING .)
    RPAREN          reduce using rule 61 (exp -> STRING .)
    TERNARIO2       reduce using rule 61 (exp -> STRING .)
    RCOLCHETE       reduce using rule 61 (exp -> STRING .)


state 22

    (5) vardecl -> tipodecl . ID
    (6) vardecl -> tipodecl . ID ATRIBUICAO exp
    (7) vardecl -> tipodecl . ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> tipodecl . ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> tipodecl . ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> tipodecl . ID ATRIBUICAO LCOLCHETE RCOLCHETE

    ID              shift and go to state 64


state 23

    (67) tipodecl -> LET .

    ID              reduce using rule 67 (tipodecl -> LET .)


state 24

    (68) tipodecl -> CONST .

    ID              reduce using rule 68 (tipodecl -> CONST .)


state 25

    (69) tipodecl -> VAR .

    ID              reduce using rule 69 (tipodecl -> VAR .)


state 26

    (2) program -> funcdecl program .

    $end            reduce using rule 2 (program -> funcdecl program .)


state 27

    (4) program -> stms program .

    $end            reduce using rule 4 (program -> stms program .)


state 28

    (11) funcdecl -> signature body .

    FUNCTION        reduce using rule 11 (funcdecl -> signature body .)
    RETURN          reduce using rule 11 (funcdecl -> signature body .)
    WHILE           reduce using rule 11 (funcdecl -> signature body .)
    FOR             reduce using rule 11 (funcdecl -> signature body .)
    IF              reduce using rule 11 (funcdecl -> signature body .)
    FALSE           reduce using rule 11 (funcdecl -> signature body .)
    TRUE            reduce using rule 11 (funcdecl -> signature body .)
    ID              reduce using rule 11 (funcdecl -> signature body .)
    FLOAT           reduce using rule 11 (funcdecl -> signature body .)
    INTEIRO         reduce using rule 11 (funcdecl -> signature body .)
    NEGACAO         reduce using rule 11 (funcdecl -> signature body .)
    STRING          reduce using rule 11 (funcdecl -> signature body .)
    LET             reduce using rule 11 (funcdecl -> signature body .)
    CONST           reduce using rule 11 (funcdecl -> signature body .)
    VAR             reduce using rule 11 (funcdecl -> signature body .)
    $end            reduce using rule 11 (funcdecl -> signature body .)


state 29

    (15) body -> LCHAVES . stms RCHAVES
    (16) stms -> . stm
    (17) stms -> . stm stms
    (18) stm -> . RETURN exp PV
    (19) stm -> . exp PV
    (20) stm -> . WHILE LPAREN exp RPAREN bodyorstm
    (21) stm -> . FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm
    (22) stm -> . IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm
    (23) stm -> . IF LPAREN exp RPAREN bodyorstm
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    RETURN          shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    IF              shift and go to state 12
    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    stms                           shift and go to state 65
    stm                            shift and go to state 5
    exp                            shift and go to state 9
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 30

    (17) stms -> stm stms .

    FUNCTION        reduce using rule 17 (stms -> stm stms .)
    RETURN          reduce using rule 17 (stms -> stm stms .)
    WHILE           reduce using rule 17 (stms -> stm stms .)
    FOR             reduce using rule 17 (stms -> stm stms .)
    IF              reduce using rule 17 (stms -> stm stms .)
    FALSE           reduce using rule 17 (stms -> stm stms .)
    TRUE            reduce using rule 17 (stms -> stm stms .)
    ID              reduce using rule 17 (stms -> stm stms .)
    FLOAT           reduce using rule 17 (stms -> stm stms .)
    INTEIRO         reduce using rule 17 (stms -> stm stms .)
    NEGACAO         reduce using rule 17 (stms -> stm stms .)
    STRING          reduce using rule 17 (stms -> stm stms .)
    LET             reduce using rule 17 (stms -> stm stms .)
    CONST           reduce using rule 17 (stms -> stm stms .)
    VAR             reduce using rule 17 (stms -> stm stms .)
    $end            reduce using rule 17 (stms -> stm stms .)
    RCHAVES         reduce using rule 17 (stms -> stm stms .)


state 31

    (12) signature -> FUNCTION ID . LPAREN sigParams RPAREN

    LPAREN          shift and go to state 66


state 32

    (66) assign -> ID ATRIBUICAO . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 67
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 33

    (62) call -> ID LPAREN . params RPAREN
    (63) call -> ID LPAREN . RPAREN
    (64) params -> . exp VIRGULA params
    (65) params -> . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    RPAREN          shift and go to state 69
    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    params                         shift and go to state 68
    exp                            shift and go to state 70
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 34

    (18) stm -> RETURN exp . PV
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              shift and go to state 71
    SOMA            shift and go to state 36
    TERNARIO1       shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    MAIORIGUALQ     shift and go to state 40
    MENORIGUALQ     shift and go to state 41
    MENORQ          shift and go to state 42
    MAIORQ          shift and go to state 43
    DIFERENTEPACARAI shift and go to state 44
    DIFERENTE       shift and go to state 45
    IGUALPACARAI    shift and go to state 46
    IGUAL           shift and go to state 47
    RESTOINCREMENT  shift and go to state 48
    DIVINCREMENT    shift and go to state 49
    MULTINCREMENT   shift and go to state 50
    DECREMENTN      shift and go to state 51
    INCREMENTN      shift and go to state 52
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59


state 35

    (19) stm -> exp PV .

    RETURN          reduce using rule 19 (stm -> exp PV .)
    WHILE           reduce using rule 19 (stm -> exp PV .)
    FOR             reduce using rule 19 (stm -> exp PV .)
    IF              reduce using rule 19 (stm -> exp PV .)
    FALSE           reduce using rule 19 (stm -> exp PV .)
    TRUE            reduce using rule 19 (stm -> exp PV .)
    ID              reduce using rule 19 (stm -> exp PV .)
    FLOAT           reduce using rule 19 (stm -> exp PV .)
    INTEIRO         reduce using rule 19 (stm -> exp PV .)
    NEGACAO         reduce using rule 19 (stm -> exp PV .)
    STRING          reduce using rule 19 (stm -> exp PV .)
    LET             reduce using rule 19 (stm -> exp PV .)
    CONST           reduce using rule 19 (stm -> exp PV .)
    VAR             reduce using rule 19 (stm -> exp PV .)
    FUNCTION        reduce using rule 19 (stm -> exp PV .)
    $end            reduce using rule 19 (stm -> exp PV .)
    RCHAVES         reduce using rule 19 (stm -> exp PV .)
    ELSE            reduce using rule 19 (stm -> exp PV .)


state 36

    (29) exp -> exp SOMA . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 72
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 37

    (37) exp -> exp TERNARIO1 . exp TERNARIO2 exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 73
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 38

    (39) exp -> exp OR . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 74
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 39

    (40) exp -> exp AND . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 75
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 40

    (41) exp -> exp MAIORIGUALQ . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 76
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 41

    (42) exp -> exp MENORIGUALQ . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 77
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 42

    (43) exp -> exp MENORQ . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 78
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 43

    (44) exp -> exp MAIORQ . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 79
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 44

    (45) exp -> exp DIFERENTEPACARAI . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 80
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 45

    (46) exp -> exp DIFERENTE . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 81
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 46

    (47) exp -> exp IGUALPACARAI . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 82
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 47

    (48) exp -> exp IGUAL . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 83
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 48

    (49) exp -> exp RESTOINCREMENT . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 84
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 49

    (50) exp -> exp DIVINCREMENT . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 85
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 50

    (51) exp -> exp MULTINCREMENT . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 86
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 51

    (52) exp -> exp DECREMENTN . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 87
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 52

    (53) exp -> exp INCREMENTN . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 88
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 53

    (54) exp -> exp DECREMENT .

    PV              reduce using rule 54 (exp -> exp DECREMENT .)
    SOMA            reduce using rule 54 (exp -> exp DECREMENT .)
    TERNARIO1       reduce using rule 54 (exp -> exp DECREMENT .)
    OR              reduce using rule 54 (exp -> exp DECREMENT .)
    AND             reduce using rule 54 (exp -> exp DECREMENT .)
    MAIORIGUALQ     reduce using rule 54 (exp -> exp DECREMENT .)
    MENORIGUALQ     reduce using rule 54 (exp -> exp DECREMENT .)
    MENORQ          reduce using rule 54 (exp -> exp DECREMENT .)
    MAIORQ          reduce using rule 54 (exp -> exp DECREMENT .)
    DIFERENTEPACARAI reduce using rule 54 (exp -> exp DECREMENT .)
    DIFERENTE       reduce using rule 54 (exp -> exp DECREMENT .)
    IGUALPACARAI    reduce using rule 54 (exp -> exp DECREMENT .)
    IGUAL           reduce using rule 54 (exp -> exp DECREMENT .)
    RESTOINCREMENT  reduce using rule 54 (exp -> exp DECREMENT .)
    DIVINCREMENT    reduce using rule 54 (exp -> exp DECREMENT .)
    MULTINCREMENT   reduce using rule 54 (exp -> exp DECREMENT .)
    DECREMENTN      reduce using rule 54 (exp -> exp DECREMENT .)
    INCREMENTN      reduce using rule 54 (exp -> exp DECREMENT .)
    DECREMENT       reduce using rule 54 (exp -> exp DECREMENT .)
    EXPONENCIACAO   reduce using rule 54 (exp -> exp DECREMENT .)
    INCREMENT       reduce using rule 54 (exp -> exp DECREMENT .)
    RESTO           reduce using rule 54 (exp -> exp DECREMENT .)
    MULT            reduce using rule 54 (exp -> exp DECREMENT .)
    DIV             reduce using rule 54 (exp -> exp DECREMENT .)
    SUB             reduce using rule 54 (exp -> exp DECREMENT .)
    VIRGULA         reduce using rule 54 (exp -> exp DECREMENT .)
    RPAREN          reduce using rule 54 (exp -> exp DECREMENT .)
    TERNARIO2       reduce using rule 54 (exp -> exp DECREMENT .)
    RCOLCHETE       reduce using rule 54 (exp -> exp DECREMENT .)


state 54

    (55) exp -> exp EXPONENCIACAO . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 89
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 55

    (56) exp -> exp INCREMENT .

    PV              reduce using rule 56 (exp -> exp INCREMENT .)
    SOMA            reduce using rule 56 (exp -> exp INCREMENT .)
    TERNARIO1       reduce using rule 56 (exp -> exp INCREMENT .)
    OR              reduce using rule 56 (exp -> exp INCREMENT .)
    AND             reduce using rule 56 (exp -> exp INCREMENT .)
    MAIORIGUALQ     reduce using rule 56 (exp -> exp INCREMENT .)
    MENORIGUALQ     reduce using rule 56 (exp -> exp INCREMENT .)
    MENORQ          reduce using rule 56 (exp -> exp INCREMENT .)
    MAIORQ          reduce using rule 56 (exp -> exp INCREMENT .)
    DIFERENTEPACARAI reduce using rule 56 (exp -> exp INCREMENT .)
    DIFERENTE       reduce using rule 56 (exp -> exp INCREMENT .)
    IGUALPACARAI    reduce using rule 56 (exp -> exp INCREMENT .)
    IGUAL           reduce using rule 56 (exp -> exp INCREMENT .)
    RESTOINCREMENT  reduce using rule 56 (exp -> exp INCREMENT .)
    DIVINCREMENT    reduce using rule 56 (exp -> exp INCREMENT .)
    MULTINCREMENT   reduce using rule 56 (exp -> exp INCREMENT .)
    DECREMENTN      reduce using rule 56 (exp -> exp INCREMENT .)
    INCREMENTN      reduce using rule 56 (exp -> exp INCREMENT .)
    DECREMENT       reduce using rule 56 (exp -> exp INCREMENT .)
    EXPONENCIACAO   reduce using rule 56 (exp -> exp INCREMENT .)
    INCREMENT       reduce using rule 56 (exp -> exp INCREMENT .)
    RESTO           reduce using rule 56 (exp -> exp INCREMENT .)
    MULT            reduce using rule 56 (exp -> exp INCREMENT .)
    DIV             reduce using rule 56 (exp -> exp INCREMENT .)
    SUB             reduce using rule 56 (exp -> exp INCREMENT .)
    VIRGULA         reduce using rule 56 (exp -> exp INCREMENT .)
    RPAREN          reduce using rule 56 (exp -> exp INCREMENT .)
    TERNARIO2       reduce using rule 56 (exp -> exp INCREMENT .)
    RCOLCHETE       reduce using rule 56 (exp -> exp INCREMENT .)


state 56

    (57) exp -> exp RESTO . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 90
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 57

    (58) exp -> exp MULT . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 91
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 58

    (59) exp -> exp DIV . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 92
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 59

    (60) exp -> exp SUB . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 93
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 60

    (20) stm -> WHILE LPAREN . exp RPAREN bodyorstm
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 94
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 61

    (21) stm -> FOR LPAREN . opexp PV opexp PV opexp RPAREN bodyorstm
    (24) opexp -> . exp
    (25) opexp -> . VOID
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    VOID            shift and go to state 97
    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    opexp                          shift and go to state 95
    exp                            shift and go to state 96
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 62

    (22) stm -> IF LPAREN . exp RPAREN bodyorstm ELSE bodyorstm
    (23) stm -> IF LPAREN . exp RPAREN bodyorstm
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 98
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 63

    (38) exp -> NEGACAO exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 38 (exp -> NEGACAO exp .)
    SOMA            reduce using rule 38 (exp -> NEGACAO exp .)
    TERNARIO1       reduce using rule 38 (exp -> NEGACAO exp .)
    OR              reduce using rule 38 (exp -> NEGACAO exp .)
    AND             reduce using rule 38 (exp -> NEGACAO exp .)
    MAIORIGUALQ     reduce using rule 38 (exp -> NEGACAO exp .)
    MENORIGUALQ     reduce using rule 38 (exp -> NEGACAO exp .)
    MENORQ          reduce using rule 38 (exp -> NEGACAO exp .)
    MAIORQ          reduce using rule 38 (exp -> NEGACAO exp .)
    DIFERENTEPACARAI reduce using rule 38 (exp -> NEGACAO exp .)
    DIFERENTE       reduce using rule 38 (exp -> NEGACAO exp .)
    IGUALPACARAI    reduce using rule 38 (exp -> NEGACAO exp .)
    IGUAL           reduce using rule 38 (exp -> NEGACAO exp .)
    RESTOINCREMENT  reduce using rule 38 (exp -> NEGACAO exp .)
    DIVINCREMENT    reduce using rule 38 (exp -> NEGACAO exp .)
    MULTINCREMENT   reduce using rule 38 (exp -> NEGACAO exp .)
    DECREMENTN      reduce using rule 38 (exp -> NEGACAO exp .)
    INCREMENTN      reduce using rule 38 (exp -> NEGACAO exp .)
    EXPONENCIACAO   reduce using rule 38 (exp -> NEGACAO exp .)
    RESTO           reduce using rule 38 (exp -> NEGACAO exp .)
    MULT            reduce using rule 38 (exp -> NEGACAO exp .)
    DIV             reduce using rule 38 (exp -> NEGACAO exp .)
    SUB             reduce using rule 38 (exp -> NEGACAO exp .)
    VIRGULA         reduce using rule 38 (exp -> NEGACAO exp .)
    RPAREN          reduce using rule 38 (exp -> NEGACAO exp .)
    TERNARIO2       reduce using rule 38 (exp -> NEGACAO exp .)
    RCOLCHETE       reduce using rule 38 (exp -> NEGACAO exp .)
    DECREMENT       shift and go to state 53
    INCREMENT       shift and go to state 55

  ! DECREMENT       [ reduce using rule 38 (exp -> NEGACAO exp .) ]
  ! INCREMENT       [ reduce using rule 38 (exp -> NEGACAO exp .) ]
  ! SOMA            [ shift and go to state 36 ]
  ! TERNARIO1       [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! MAIORIGUALQ     [ shift and go to state 40 ]
  ! MENORIGUALQ     [ shift and go to state 41 ]
  ! MENORQ          [ shift and go to state 42 ]
  ! MAIORQ          [ shift and go to state 43 ]
  ! DIFERENTEPACARAI [ shift and go to state 44 ]
  ! DIFERENTE       [ shift and go to state 45 ]
  ! IGUALPACARAI    [ shift and go to state 46 ]
  ! IGUAL           [ shift and go to state 47 ]
  ! RESTOINCREMENT  [ shift and go to state 48 ]
  ! DIVINCREMENT    [ shift and go to state 49 ]
  ! MULTINCREMENT   [ shift and go to state 50 ]
  ! DECREMENTN      [ shift and go to state 51 ]
  ! INCREMENTN      [ shift and go to state 52 ]
  ! EXPONENCIACAO   [ shift and go to state 54 ]
  ! RESTO           [ shift and go to state 56 ]
  ! MULT            [ shift and go to state 57 ]
  ! DIV             [ shift and go to state 58 ]
  ! SUB             [ shift and go to state 59 ]


state 64

    (5) vardecl -> tipodecl ID .
    (6) vardecl -> tipodecl ID . ATRIBUICAO exp
    (7) vardecl -> tipodecl ID . LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> tipodecl ID . ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> tipodecl ID . LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> tipodecl ID . ATRIBUICAO LCOLCHETE RCOLCHETE

    PV              reduce using rule 5 (vardecl -> tipodecl ID .)
    SOMA            reduce using rule 5 (vardecl -> tipodecl ID .)
    TERNARIO1       reduce using rule 5 (vardecl -> tipodecl ID .)
    OR              reduce using rule 5 (vardecl -> tipodecl ID .)
    AND             reduce using rule 5 (vardecl -> tipodecl ID .)
    MAIORIGUALQ     reduce using rule 5 (vardecl -> tipodecl ID .)
    MENORIGUALQ     reduce using rule 5 (vardecl -> tipodecl ID .)
    MENORQ          reduce using rule 5 (vardecl -> tipodecl ID .)
    MAIORQ          reduce using rule 5 (vardecl -> tipodecl ID .)
    DIFERENTEPACARAI reduce using rule 5 (vardecl -> tipodecl ID .)
    DIFERENTE       reduce using rule 5 (vardecl -> tipodecl ID .)
    IGUALPACARAI    reduce using rule 5 (vardecl -> tipodecl ID .)
    IGUAL           reduce using rule 5 (vardecl -> tipodecl ID .)
    RESTOINCREMENT  reduce using rule 5 (vardecl -> tipodecl ID .)
    DIVINCREMENT    reduce using rule 5 (vardecl -> tipodecl ID .)
    MULTINCREMENT   reduce using rule 5 (vardecl -> tipodecl ID .)
    DECREMENTN      reduce using rule 5 (vardecl -> tipodecl ID .)
    INCREMENTN      reduce using rule 5 (vardecl -> tipodecl ID .)
    DECREMENT       reduce using rule 5 (vardecl -> tipodecl ID .)
    EXPONENCIACAO   reduce using rule 5 (vardecl -> tipodecl ID .)
    INCREMENT       reduce using rule 5 (vardecl -> tipodecl ID .)
    RESTO           reduce using rule 5 (vardecl -> tipodecl ID .)
    MULT            reduce using rule 5 (vardecl -> tipodecl ID .)
    DIV             reduce using rule 5 (vardecl -> tipodecl ID .)
    SUB             reduce using rule 5 (vardecl -> tipodecl ID .)
    VIRGULA         reduce using rule 5 (vardecl -> tipodecl ID .)
    RPAREN          reduce using rule 5 (vardecl -> tipodecl ID .)
    TERNARIO2       reduce using rule 5 (vardecl -> tipodecl ID .)
    RCOLCHETE       reduce using rule 5 (vardecl -> tipodecl ID .)
    ATRIBUICAO      shift and go to state 99
    LCOLCHETE       shift and go to state 100


state 65

    (15) body -> LCHAVES stms . RCHAVES

    RCHAVES         shift and go to state 101


state 66

    (12) signature -> FUNCTION ID LPAREN . sigParams RPAREN
    (13) sigParams -> . ID
    (14) sigParams -> . ID VIRGULA sigParams

    ID              shift and go to state 102

    sigParams                      shift and go to state 103

state 67

    (66) assign -> ID ATRIBUICAO exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 66 (assign -> ID ATRIBUICAO exp .)
    VIRGULA         reduce using rule 66 (assign -> ID ATRIBUICAO exp .)
    RPAREN          reduce using rule 66 (assign -> ID ATRIBUICAO exp .)
    TERNARIO2       reduce using rule 66 (assign -> ID ATRIBUICAO exp .)
    RCOLCHETE       reduce using rule 66 (assign -> ID ATRIBUICAO exp .)
    SOMA            shift and go to state 36
    TERNARIO1       shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    MAIORIGUALQ     shift and go to state 40
    MENORIGUALQ     shift and go to state 41
    MENORQ          shift and go to state 42
    MAIORQ          shift and go to state 43
    DIFERENTEPACARAI shift and go to state 44
    DIFERENTE       shift and go to state 45
    IGUALPACARAI    shift and go to state 46
    IGUAL           shift and go to state 47
    RESTOINCREMENT  shift and go to state 48
    DIVINCREMENT    shift and go to state 49
    MULTINCREMENT   shift and go to state 50
    DECREMENTN      shift and go to state 51
    INCREMENTN      shift and go to state 52
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59

  ! SOMA            [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! TERNARIO1       [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! OR              [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! AND             [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! MENORIGUALQ     [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! MENORQ          [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! MAIORQ          [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! DIFERENTEPACARAI [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! DIFERENTE       [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! IGUALPACARAI    [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! IGUAL           [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! RESTOINCREMENT  [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! DIVINCREMENT    [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! MULTINCREMENT   [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! DECREMENTN      [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! INCREMENTN      [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! DECREMENT       [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! INCREMENT       [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! RESTO           [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! MULT            [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! DIV             [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]
  ! SUB             [ reduce using rule 66 (assign -> ID ATRIBUICAO exp .) ]


state 68

    (62) call -> ID LPAREN params . RPAREN

    RPAREN          shift and go to state 104


state 69

    (63) call -> ID LPAREN RPAREN .

    PV              reduce using rule 63 (call -> ID LPAREN RPAREN .)
    SOMA            reduce using rule 63 (call -> ID LPAREN RPAREN .)
    TERNARIO1       reduce using rule 63 (call -> ID LPAREN RPAREN .)
    OR              reduce using rule 63 (call -> ID LPAREN RPAREN .)
    AND             reduce using rule 63 (call -> ID LPAREN RPAREN .)
    MAIORIGUALQ     reduce using rule 63 (call -> ID LPAREN RPAREN .)
    MENORIGUALQ     reduce using rule 63 (call -> ID LPAREN RPAREN .)
    MENORQ          reduce using rule 63 (call -> ID LPAREN RPAREN .)
    MAIORQ          reduce using rule 63 (call -> ID LPAREN RPAREN .)
    DIFERENTEPACARAI reduce using rule 63 (call -> ID LPAREN RPAREN .)
    DIFERENTE       reduce using rule 63 (call -> ID LPAREN RPAREN .)
    IGUALPACARAI    reduce using rule 63 (call -> ID LPAREN RPAREN .)
    IGUAL           reduce using rule 63 (call -> ID LPAREN RPAREN .)
    RESTOINCREMENT  reduce using rule 63 (call -> ID LPAREN RPAREN .)
    DIVINCREMENT    reduce using rule 63 (call -> ID LPAREN RPAREN .)
    MULTINCREMENT   reduce using rule 63 (call -> ID LPAREN RPAREN .)
    DECREMENTN      reduce using rule 63 (call -> ID LPAREN RPAREN .)
    INCREMENTN      reduce using rule 63 (call -> ID LPAREN RPAREN .)
    DECREMENT       reduce using rule 63 (call -> ID LPAREN RPAREN .)
    EXPONENCIACAO   reduce using rule 63 (call -> ID LPAREN RPAREN .)
    INCREMENT       reduce using rule 63 (call -> ID LPAREN RPAREN .)
    RESTO           reduce using rule 63 (call -> ID LPAREN RPAREN .)
    MULT            reduce using rule 63 (call -> ID LPAREN RPAREN .)
    DIV             reduce using rule 63 (call -> ID LPAREN RPAREN .)
    SUB             reduce using rule 63 (call -> ID LPAREN RPAREN .)
    VIRGULA         reduce using rule 63 (call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 63 (call -> ID LPAREN RPAREN .)
    TERNARIO2       reduce using rule 63 (call -> ID LPAREN RPAREN .)
    RCOLCHETE       reduce using rule 63 (call -> ID LPAREN RPAREN .)


state 70

    (64) params -> exp . VIRGULA params
    (65) params -> exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    VIRGULA         shift and go to state 105
    RPAREN          reduce using rule 65 (params -> exp .)
    SOMA            shift and go to state 36
    TERNARIO1       shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    MAIORIGUALQ     shift and go to state 40
    MENORIGUALQ     shift and go to state 41
    MENORQ          shift and go to state 42
    MAIORQ          shift and go to state 43
    DIFERENTEPACARAI shift and go to state 44
    DIFERENTE       shift and go to state 45
    IGUALPACARAI    shift and go to state 46
    IGUAL           shift and go to state 47
    RESTOINCREMENT  shift and go to state 48
    DIVINCREMENT    shift and go to state 49
    MULTINCREMENT   shift and go to state 50
    DECREMENTN      shift and go to state 51
    INCREMENTN      shift and go to state 52
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59


state 71

    (18) stm -> RETURN exp PV .

    RETURN          reduce using rule 18 (stm -> RETURN exp PV .)
    WHILE           reduce using rule 18 (stm -> RETURN exp PV .)
    FOR             reduce using rule 18 (stm -> RETURN exp PV .)
    IF              reduce using rule 18 (stm -> RETURN exp PV .)
    FALSE           reduce using rule 18 (stm -> RETURN exp PV .)
    TRUE            reduce using rule 18 (stm -> RETURN exp PV .)
    ID              reduce using rule 18 (stm -> RETURN exp PV .)
    FLOAT           reduce using rule 18 (stm -> RETURN exp PV .)
    INTEIRO         reduce using rule 18 (stm -> RETURN exp PV .)
    NEGACAO         reduce using rule 18 (stm -> RETURN exp PV .)
    STRING          reduce using rule 18 (stm -> RETURN exp PV .)
    LET             reduce using rule 18 (stm -> RETURN exp PV .)
    CONST           reduce using rule 18 (stm -> RETURN exp PV .)
    VAR             reduce using rule 18 (stm -> RETURN exp PV .)
    FUNCTION        reduce using rule 18 (stm -> RETURN exp PV .)
    $end            reduce using rule 18 (stm -> RETURN exp PV .)
    RCHAVES         reduce using rule 18 (stm -> RETURN exp PV .)
    ELSE            reduce using rule 18 (stm -> RETURN exp PV .)


state 72

    (29) exp -> exp SOMA exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 29 (exp -> exp SOMA exp .)
    SOMA            reduce using rule 29 (exp -> exp SOMA exp .)
    TERNARIO1       reduce using rule 29 (exp -> exp SOMA exp .)
    OR              reduce using rule 29 (exp -> exp SOMA exp .)
    AND             reduce using rule 29 (exp -> exp SOMA exp .)
    MAIORIGUALQ     reduce using rule 29 (exp -> exp SOMA exp .)
    MENORIGUALQ     reduce using rule 29 (exp -> exp SOMA exp .)
    MENORQ          reduce using rule 29 (exp -> exp SOMA exp .)
    MAIORQ          reduce using rule 29 (exp -> exp SOMA exp .)
    DIFERENTEPACARAI reduce using rule 29 (exp -> exp SOMA exp .)
    DIFERENTE       reduce using rule 29 (exp -> exp SOMA exp .)
    IGUALPACARAI    reduce using rule 29 (exp -> exp SOMA exp .)
    IGUAL           reduce using rule 29 (exp -> exp SOMA exp .)
    RESTOINCREMENT  reduce using rule 29 (exp -> exp SOMA exp .)
    DIVINCREMENT    reduce using rule 29 (exp -> exp SOMA exp .)
    MULTINCREMENT   reduce using rule 29 (exp -> exp SOMA exp .)
    DECREMENTN      reduce using rule 29 (exp -> exp SOMA exp .)
    INCREMENTN      reduce using rule 29 (exp -> exp SOMA exp .)
    SUB             reduce using rule 29 (exp -> exp SOMA exp .)
    VIRGULA         reduce using rule 29 (exp -> exp SOMA exp .)
    RPAREN          reduce using rule 29 (exp -> exp SOMA exp .)
    TERNARIO2       reduce using rule 29 (exp -> exp SOMA exp .)
    RCOLCHETE       reduce using rule 29 (exp -> exp SOMA exp .)
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58

  ! DECREMENT       [ reduce using rule 29 (exp -> exp SOMA exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 29 (exp -> exp SOMA exp .) ]
  ! INCREMENT       [ reduce using rule 29 (exp -> exp SOMA exp .) ]
  ! RESTO           [ reduce using rule 29 (exp -> exp SOMA exp .) ]
  ! MULT            [ reduce using rule 29 (exp -> exp SOMA exp .) ]
  ! DIV             [ reduce using rule 29 (exp -> exp SOMA exp .) ]
  ! SOMA            [ shift and go to state 36 ]
  ! TERNARIO1       [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! MAIORIGUALQ     [ shift and go to state 40 ]
  ! MENORIGUALQ     [ shift and go to state 41 ]
  ! MENORQ          [ shift and go to state 42 ]
  ! MAIORQ          [ shift and go to state 43 ]
  ! DIFERENTEPACARAI [ shift and go to state 44 ]
  ! DIFERENTE       [ shift and go to state 45 ]
  ! IGUALPACARAI    [ shift and go to state 46 ]
  ! IGUAL           [ shift and go to state 47 ]
  ! RESTOINCREMENT  [ shift and go to state 48 ]
  ! DIVINCREMENT    [ shift and go to state 49 ]
  ! MULTINCREMENT   [ shift and go to state 50 ]
  ! DECREMENTN      [ shift and go to state 51 ]
  ! INCREMENTN      [ shift and go to state 52 ]
  ! SUB             [ shift and go to state 59 ]


state 73

    (37) exp -> exp TERNARIO1 exp . TERNARIO2 exp
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    TERNARIO2       shift and go to state 106
    SOMA            shift and go to state 36
    TERNARIO1       shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    MAIORIGUALQ     shift and go to state 40
    MENORIGUALQ     shift and go to state 41
    MENORQ          shift and go to state 42
    MAIORQ          shift and go to state 43
    DIFERENTEPACARAI shift and go to state 44
    DIFERENTE       shift and go to state 45
    IGUALPACARAI    shift and go to state 46
    IGUAL           shift and go to state 47
    RESTOINCREMENT  shift and go to state 48
    DIVINCREMENT    shift and go to state 49
    MULTINCREMENT   shift and go to state 50
    DECREMENTN      shift and go to state 51
    INCREMENTN      shift and go to state 52
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59


state 74

    (39) exp -> exp OR exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 39 (exp -> exp OR exp .)
    TERNARIO1       reduce using rule 39 (exp -> exp OR exp .)
    OR              reduce using rule 39 (exp -> exp OR exp .)
    RESTOINCREMENT  reduce using rule 39 (exp -> exp OR exp .)
    DIVINCREMENT    reduce using rule 39 (exp -> exp OR exp .)
    MULTINCREMENT   reduce using rule 39 (exp -> exp OR exp .)
    DECREMENTN      reduce using rule 39 (exp -> exp OR exp .)
    INCREMENTN      reduce using rule 39 (exp -> exp OR exp .)
    VIRGULA         reduce using rule 39 (exp -> exp OR exp .)
    RPAREN          reduce using rule 39 (exp -> exp OR exp .)
    TERNARIO2       reduce using rule 39 (exp -> exp OR exp .)
    RCOLCHETE       reduce using rule 39 (exp -> exp OR exp .)
    SOMA            shift and go to state 36
    AND             shift and go to state 39
    MAIORIGUALQ     shift and go to state 40
    MENORIGUALQ     shift and go to state 41
    MENORQ          shift and go to state 42
    MAIORQ          shift and go to state 43
    DIFERENTEPACARAI shift and go to state 44
    DIFERENTE       shift and go to state 45
    IGUALPACARAI    shift and go to state 46
    IGUAL           shift and go to state 47
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59

  ! SOMA            [ reduce using rule 39 (exp -> exp OR exp .) ]
  ! AND             [ reduce using rule 39 (exp -> exp OR exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 39 (exp -> exp OR exp .) ]
  ! MENORIGUALQ     [ reduce using rule 39 (exp -> exp OR exp .) ]
  ! MENORQ          [ reduce using rule 39 (exp -> exp OR exp .) ]
  ! MAIORQ          [ reduce using rule 39 (exp -> exp OR exp .) ]
  ! DIFERENTEPACARAI [ reduce using rule 39 (exp -> exp OR exp .) ]
  ! DIFERENTE       [ reduce using rule 39 (exp -> exp OR exp .) ]
  ! IGUALPACARAI    [ reduce using rule 39 (exp -> exp OR exp .) ]
  ! IGUAL           [ reduce using rule 39 (exp -> exp OR exp .) ]
  ! DECREMENT       [ reduce using rule 39 (exp -> exp OR exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 39 (exp -> exp OR exp .) ]
  ! INCREMENT       [ reduce using rule 39 (exp -> exp OR exp .) ]
  ! RESTO           [ reduce using rule 39 (exp -> exp OR exp .) ]
  ! MULT            [ reduce using rule 39 (exp -> exp OR exp .) ]
  ! DIV             [ reduce using rule 39 (exp -> exp OR exp .) ]
  ! SUB             [ reduce using rule 39 (exp -> exp OR exp .) ]
  ! TERNARIO1       [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! RESTOINCREMENT  [ shift and go to state 48 ]
  ! DIVINCREMENT    [ shift and go to state 49 ]
  ! MULTINCREMENT   [ shift and go to state 50 ]
  ! DECREMENTN      [ shift and go to state 51 ]
  ! INCREMENTN      [ shift and go to state 52 ]


state 75

    (40) exp -> exp AND exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 40 (exp -> exp AND exp .)
    TERNARIO1       reduce using rule 40 (exp -> exp AND exp .)
    OR              reduce using rule 40 (exp -> exp AND exp .)
    AND             reduce using rule 40 (exp -> exp AND exp .)
    RESTOINCREMENT  reduce using rule 40 (exp -> exp AND exp .)
    DIVINCREMENT    reduce using rule 40 (exp -> exp AND exp .)
    MULTINCREMENT   reduce using rule 40 (exp -> exp AND exp .)
    DECREMENTN      reduce using rule 40 (exp -> exp AND exp .)
    INCREMENTN      reduce using rule 40 (exp -> exp AND exp .)
    VIRGULA         reduce using rule 40 (exp -> exp AND exp .)
    RPAREN          reduce using rule 40 (exp -> exp AND exp .)
    TERNARIO2       reduce using rule 40 (exp -> exp AND exp .)
    RCOLCHETE       reduce using rule 40 (exp -> exp AND exp .)
    SOMA            shift and go to state 36
    MAIORIGUALQ     shift and go to state 40
    MENORIGUALQ     shift and go to state 41
    MENORQ          shift and go to state 42
    MAIORQ          shift and go to state 43
    DIFERENTEPACARAI shift and go to state 44
    DIFERENTE       shift and go to state 45
    IGUALPACARAI    shift and go to state 46
    IGUAL           shift and go to state 47
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59

  ! SOMA            [ reduce using rule 40 (exp -> exp AND exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 40 (exp -> exp AND exp .) ]
  ! MENORIGUALQ     [ reduce using rule 40 (exp -> exp AND exp .) ]
  ! MENORQ          [ reduce using rule 40 (exp -> exp AND exp .) ]
  ! MAIORQ          [ reduce using rule 40 (exp -> exp AND exp .) ]
  ! DIFERENTEPACARAI [ reduce using rule 40 (exp -> exp AND exp .) ]
  ! DIFERENTE       [ reduce using rule 40 (exp -> exp AND exp .) ]
  ! IGUALPACARAI    [ reduce using rule 40 (exp -> exp AND exp .) ]
  ! IGUAL           [ reduce using rule 40 (exp -> exp AND exp .) ]
  ! DECREMENT       [ reduce using rule 40 (exp -> exp AND exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 40 (exp -> exp AND exp .) ]
  ! INCREMENT       [ reduce using rule 40 (exp -> exp AND exp .) ]
  ! RESTO           [ reduce using rule 40 (exp -> exp AND exp .) ]
  ! MULT            [ reduce using rule 40 (exp -> exp AND exp .) ]
  ! DIV             [ reduce using rule 40 (exp -> exp AND exp .) ]
  ! SUB             [ reduce using rule 40 (exp -> exp AND exp .) ]
  ! TERNARIO1       [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! RESTOINCREMENT  [ shift and go to state 48 ]
  ! DIVINCREMENT    [ shift and go to state 49 ]
  ! MULTINCREMENT   [ shift and go to state 50 ]
  ! DECREMENTN      [ shift and go to state 51 ]
  ! INCREMENTN      [ shift and go to state 52 ]


state 76

    (41) exp -> exp MAIORIGUALQ exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 41 (exp -> exp MAIORIGUALQ exp .)
    TERNARIO1       reduce using rule 41 (exp -> exp MAIORIGUALQ exp .)
    OR              reduce using rule 41 (exp -> exp MAIORIGUALQ exp .)
    AND             reduce using rule 41 (exp -> exp MAIORIGUALQ exp .)
    MAIORIGUALQ     reduce using rule 41 (exp -> exp MAIORIGUALQ exp .)
    MENORIGUALQ     reduce using rule 41 (exp -> exp MAIORIGUALQ exp .)
    MENORQ          reduce using rule 41 (exp -> exp MAIORIGUALQ exp .)
    MAIORQ          reduce using rule 41 (exp -> exp MAIORIGUALQ exp .)
    DIFERENTEPACARAI reduce using rule 41 (exp -> exp MAIORIGUALQ exp .)
    DIFERENTE       reduce using rule 41 (exp -> exp MAIORIGUALQ exp .)
    IGUALPACARAI    reduce using rule 41 (exp -> exp MAIORIGUALQ exp .)
    IGUAL           reduce using rule 41 (exp -> exp MAIORIGUALQ exp .)
    RESTOINCREMENT  reduce using rule 41 (exp -> exp MAIORIGUALQ exp .)
    DIVINCREMENT    reduce using rule 41 (exp -> exp MAIORIGUALQ exp .)
    MULTINCREMENT   reduce using rule 41 (exp -> exp MAIORIGUALQ exp .)
    DECREMENTN      reduce using rule 41 (exp -> exp MAIORIGUALQ exp .)
    INCREMENTN      reduce using rule 41 (exp -> exp MAIORIGUALQ exp .)
    VIRGULA         reduce using rule 41 (exp -> exp MAIORIGUALQ exp .)
    RPAREN          reduce using rule 41 (exp -> exp MAIORIGUALQ exp .)
    TERNARIO2       reduce using rule 41 (exp -> exp MAIORIGUALQ exp .)
    RCOLCHETE       reduce using rule 41 (exp -> exp MAIORIGUALQ exp .)
    SOMA            shift and go to state 36
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59

  ! SOMA            [ reduce using rule 41 (exp -> exp MAIORIGUALQ exp .) ]
  ! DECREMENT       [ reduce using rule 41 (exp -> exp MAIORIGUALQ exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 41 (exp -> exp MAIORIGUALQ exp .) ]
  ! INCREMENT       [ reduce using rule 41 (exp -> exp MAIORIGUALQ exp .) ]
  ! RESTO           [ reduce using rule 41 (exp -> exp MAIORIGUALQ exp .) ]
  ! MULT            [ reduce using rule 41 (exp -> exp MAIORIGUALQ exp .) ]
  ! DIV             [ reduce using rule 41 (exp -> exp MAIORIGUALQ exp .) ]
  ! SUB             [ reduce using rule 41 (exp -> exp MAIORIGUALQ exp .) ]
  ! TERNARIO1       [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! MAIORIGUALQ     [ shift and go to state 40 ]
  ! MENORIGUALQ     [ shift and go to state 41 ]
  ! MENORQ          [ shift and go to state 42 ]
  ! MAIORQ          [ shift and go to state 43 ]
  ! DIFERENTEPACARAI [ shift and go to state 44 ]
  ! DIFERENTE       [ shift and go to state 45 ]
  ! IGUALPACARAI    [ shift and go to state 46 ]
  ! IGUAL           [ shift and go to state 47 ]
  ! RESTOINCREMENT  [ shift and go to state 48 ]
  ! DIVINCREMENT    [ shift and go to state 49 ]
  ! MULTINCREMENT   [ shift and go to state 50 ]
  ! DECREMENTN      [ shift and go to state 51 ]
  ! INCREMENTN      [ shift and go to state 52 ]


state 77

    (42) exp -> exp MENORIGUALQ exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 42 (exp -> exp MENORIGUALQ exp .)
    TERNARIO1       reduce using rule 42 (exp -> exp MENORIGUALQ exp .)
    OR              reduce using rule 42 (exp -> exp MENORIGUALQ exp .)
    AND             reduce using rule 42 (exp -> exp MENORIGUALQ exp .)
    MAIORIGUALQ     reduce using rule 42 (exp -> exp MENORIGUALQ exp .)
    MENORIGUALQ     reduce using rule 42 (exp -> exp MENORIGUALQ exp .)
    MENORQ          reduce using rule 42 (exp -> exp MENORIGUALQ exp .)
    MAIORQ          reduce using rule 42 (exp -> exp MENORIGUALQ exp .)
    DIFERENTEPACARAI reduce using rule 42 (exp -> exp MENORIGUALQ exp .)
    DIFERENTE       reduce using rule 42 (exp -> exp MENORIGUALQ exp .)
    IGUALPACARAI    reduce using rule 42 (exp -> exp MENORIGUALQ exp .)
    IGUAL           reduce using rule 42 (exp -> exp MENORIGUALQ exp .)
    RESTOINCREMENT  reduce using rule 42 (exp -> exp MENORIGUALQ exp .)
    DIVINCREMENT    reduce using rule 42 (exp -> exp MENORIGUALQ exp .)
    MULTINCREMENT   reduce using rule 42 (exp -> exp MENORIGUALQ exp .)
    DECREMENTN      reduce using rule 42 (exp -> exp MENORIGUALQ exp .)
    INCREMENTN      reduce using rule 42 (exp -> exp MENORIGUALQ exp .)
    VIRGULA         reduce using rule 42 (exp -> exp MENORIGUALQ exp .)
    RPAREN          reduce using rule 42 (exp -> exp MENORIGUALQ exp .)
    TERNARIO2       reduce using rule 42 (exp -> exp MENORIGUALQ exp .)
    RCOLCHETE       reduce using rule 42 (exp -> exp MENORIGUALQ exp .)
    SOMA            shift and go to state 36
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59

  ! SOMA            [ reduce using rule 42 (exp -> exp MENORIGUALQ exp .) ]
  ! DECREMENT       [ reduce using rule 42 (exp -> exp MENORIGUALQ exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 42 (exp -> exp MENORIGUALQ exp .) ]
  ! INCREMENT       [ reduce using rule 42 (exp -> exp MENORIGUALQ exp .) ]
  ! RESTO           [ reduce using rule 42 (exp -> exp MENORIGUALQ exp .) ]
  ! MULT            [ reduce using rule 42 (exp -> exp MENORIGUALQ exp .) ]
  ! DIV             [ reduce using rule 42 (exp -> exp MENORIGUALQ exp .) ]
  ! SUB             [ reduce using rule 42 (exp -> exp MENORIGUALQ exp .) ]
  ! TERNARIO1       [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! MAIORIGUALQ     [ shift and go to state 40 ]
  ! MENORIGUALQ     [ shift and go to state 41 ]
  ! MENORQ          [ shift and go to state 42 ]
  ! MAIORQ          [ shift and go to state 43 ]
  ! DIFERENTEPACARAI [ shift and go to state 44 ]
  ! DIFERENTE       [ shift and go to state 45 ]
  ! IGUALPACARAI    [ shift and go to state 46 ]
  ! IGUAL           [ shift and go to state 47 ]
  ! RESTOINCREMENT  [ shift and go to state 48 ]
  ! DIVINCREMENT    [ shift and go to state 49 ]
  ! MULTINCREMENT   [ shift and go to state 50 ]
  ! DECREMENTN      [ shift and go to state 51 ]
  ! INCREMENTN      [ shift and go to state 52 ]


state 78

    (43) exp -> exp MENORQ exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 43 (exp -> exp MENORQ exp .)
    TERNARIO1       reduce using rule 43 (exp -> exp MENORQ exp .)
    OR              reduce using rule 43 (exp -> exp MENORQ exp .)
    AND             reduce using rule 43 (exp -> exp MENORQ exp .)
    MAIORIGUALQ     reduce using rule 43 (exp -> exp MENORQ exp .)
    MENORIGUALQ     reduce using rule 43 (exp -> exp MENORQ exp .)
    MENORQ          reduce using rule 43 (exp -> exp MENORQ exp .)
    MAIORQ          reduce using rule 43 (exp -> exp MENORQ exp .)
    DIFERENTEPACARAI reduce using rule 43 (exp -> exp MENORQ exp .)
    DIFERENTE       reduce using rule 43 (exp -> exp MENORQ exp .)
    IGUALPACARAI    reduce using rule 43 (exp -> exp MENORQ exp .)
    IGUAL           reduce using rule 43 (exp -> exp MENORQ exp .)
    RESTOINCREMENT  reduce using rule 43 (exp -> exp MENORQ exp .)
    DIVINCREMENT    reduce using rule 43 (exp -> exp MENORQ exp .)
    MULTINCREMENT   reduce using rule 43 (exp -> exp MENORQ exp .)
    DECREMENTN      reduce using rule 43 (exp -> exp MENORQ exp .)
    INCREMENTN      reduce using rule 43 (exp -> exp MENORQ exp .)
    VIRGULA         reduce using rule 43 (exp -> exp MENORQ exp .)
    RPAREN          reduce using rule 43 (exp -> exp MENORQ exp .)
    TERNARIO2       reduce using rule 43 (exp -> exp MENORQ exp .)
    RCOLCHETE       reduce using rule 43 (exp -> exp MENORQ exp .)
    SOMA            shift and go to state 36
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59

  ! SOMA            [ reduce using rule 43 (exp -> exp MENORQ exp .) ]
  ! DECREMENT       [ reduce using rule 43 (exp -> exp MENORQ exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 43 (exp -> exp MENORQ exp .) ]
  ! INCREMENT       [ reduce using rule 43 (exp -> exp MENORQ exp .) ]
  ! RESTO           [ reduce using rule 43 (exp -> exp MENORQ exp .) ]
  ! MULT            [ reduce using rule 43 (exp -> exp MENORQ exp .) ]
  ! DIV             [ reduce using rule 43 (exp -> exp MENORQ exp .) ]
  ! SUB             [ reduce using rule 43 (exp -> exp MENORQ exp .) ]
  ! TERNARIO1       [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! MAIORIGUALQ     [ shift and go to state 40 ]
  ! MENORIGUALQ     [ shift and go to state 41 ]
  ! MENORQ          [ shift and go to state 42 ]
  ! MAIORQ          [ shift and go to state 43 ]
  ! DIFERENTEPACARAI [ shift and go to state 44 ]
  ! DIFERENTE       [ shift and go to state 45 ]
  ! IGUALPACARAI    [ shift and go to state 46 ]
  ! IGUAL           [ shift and go to state 47 ]
  ! RESTOINCREMENT  [ shift and go to state 48 ]
  ! DIVINCREMENT    [ shift and go to state 49 ]
  ! MULTINCREMENT   [ shift and go to state 50 ]
  ! DECREMENTN      [ shift and go to state 51 ]
  ! INCREMENTN      [ shift and go to state 52 ]


state 79

    (44) exp -> exp MAIORQ exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 44 (exp -> exp MAIORQ exp .)
    TERNARIO1       reduce using rule 44 (exp -> exp MAIORQ exp .)
    OR              reduce using rule 44 (exp -> exp MAIORQ exp .)
    AND             reduce using rule 44 (exp -> exp MAIORQ exp .)
    MAIORIGUALQ     reduce using rule 44 (exp -> exp MAIORQ exp .)
    MENORIGUALQ     reduce using rule 44 (exp -> exp MAIORQ exp .)
    MENORQ          reduce using rule 44 (exp -> exp MAIORQ exp .)
    MAIORQ          reduce using rule 44 (exp -> exp MAIORQ exp .)
    DIFERENTEPACARAI reduce using rule 44 (exp -> exp MAIORQ exp .)
    DIFERENTE       reduce using rule 44 (exp -> exp MAIORQ exp .)
    IGUALPACARAI    reduce using rule 44 (exp -> exp MAIORQ exp .)
    IGUAL           reduce using rule 44 (exp -> exp MAIORQ exp .)
    RESTOINCREMENT  reduce using rule 44 (exp -> exp MAIORQ exp .)
    DIVINCREMENT    reduce using rule 44 (exp -> exp MAIORQ exp .)
    MULTINCREMENT   reduce using rule 44 (exp -> exp MAIORQ exp .)
    DECREMENTN      reduce using rule 44 (exp -> exp MAIORQ exp .)
    INCREMENTN      reduce using rule 44 (exp -> exp MAIORQ exp .)
    VIRGULA         reduce using rule 44 (exp -> exp MAIORQ exp .)
    RPAREN          reduce using rule 44 (exp -> exp MAIORQ exp .)
    TERNARIO2       reduce using rule 44 (exp -> exp MAIORQ exp .)
    RCOLCHETE       reduce using rule 44 (exp -> exp MAIORQ exp .)
    SOMA            shift and go to state 36
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59

  ! SOMA            [ reduce using rule 44 (exp -> exp MAIORQ exp .) ]
  ! DECREMENT       [ reduce using rule 44 (exp -> exp MAIORQ exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 44 (exp -> exp MAIORQ exp .) ]
  ! INCREMENT       [ reduce using rule 44 (exp -> exp MAIORQ exp .) ]
  ! RESTO           [ reduce using rule 44 (exp -> exp MAIORQ exp .) ]
  ! MULT            [ reduce using rule 44 (exp -> exp MAIORQ exp .) ]
  ! DIV             [ reduce using rule 44 (exp -> exp MAIORQ exp .) ]
  ! SUB             [ reduce using rule 44 (exp -> exp MAIORQ exp .) ]
  ! TERNARIO1       [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! MAIORIGUALQ     [ shift and go to state 40 ]
  ! MENORIGUALQ     [ shift and go to state 41 ]
  ! MENORQ          [ shift and go to state 42 ]
  ! MAIORQ          [ shift and go to state 43 ]
  ! DIFERENTEPACARAI [ shift and go to state 44 ]
  ! DIFERENTE       [ shift and go to state 45 ]
  ! IGUALPACARAI    [ shift and go to state 46 ]
  ! IGUAL           [ shift and go to state 47 ]
  ! RESTOINCREMENT  [ shift and go to state 48 ]
  ! DIVINCREMENT    [ shift and go to state 49 ]
  ! MULTINCREMENT   [ shift and go to state 50 ]
  ! DECREMENTN      [ shift and go to state 51 ]
  ! INCREMENTN      [ shift and go to state 52 ]


state 80

    (45) exp -> exp DIFERENTEPACARAI exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .)
    TERNARIO1       reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .)
    OR              reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .)
    AND             reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .)
    DIFERENTEPACARAI reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .)
    DIFERENTE       reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .)
    IGUALPACARAI    reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .)
    IGUAL           reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .)
    RESTOINCREMENT  reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .)
    DIVINCREMENT    reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .)
    MULTINCREMENT   reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .)
    DECREMENTN      reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .)
    INCREMENTN      reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .)
    VIRGULA         reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .)
    RPAREN          reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .)
    TERNARIO2       reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .)
    RCOLCHETE       reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .)
    SOMA            shift and go to state 36
    MAIORIGUALQ     shift and go to state 40
    MENORIGUALQ     shift and go to state 41
    MENORQ          shift and go to state 42
    MAIORQ          shift and go to state 43
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59

  ! SOMA            [ reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! MENORIGUALQ     [ reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! MENORQ          [ reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! MAIORQ          [ reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! DECREMENT       [ reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! INCREMENT       [ reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! RESTO           [ reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! MULT            [ reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! DIV             [ reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! SUB             [ reduce using rule 45 (exp -> exp DIFERENTEPACARAI exp .) ]
  ! TERNARIO1       [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! DIFERENTEPACARAI [ shift and go to state 44 ]
  ! DIFERENTE       [ shift and go to state 45 ]
  ! IGUALPACARAI    [ shift and go to state 46 ]
  ! IGUAL           [ shift and go to state 47 ]
  ! RESTOINCREMENT  [ shift and go to state 48 ]
  ! DIVINCREMENT    [ shift and go to state 49 ]
  ! MULTINCREMENT   [ shift and go to state 50 ]
  ! DECREMENTN      [ shift and go to state 51 ]
  ! INCREMENTN      [ shift and go to state 52 ]


state 81

    (46) exp -> exp DIFERENTE exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 46 (exp -> exp DIFERENTE exp .)
    TERNARIO1       reduce using rule 46 (exp -> exp DIFERENTE exp .)
    OR              reduce using rule 46 (exp -> exp DIFERENTE exp .)
    AND             reduce using rule 46 (exp -> exp DIFERENTE exp .)
    DIFERENTEPACARAI reduce using rule 46 (exp -> exp DIFERENTE exp .)
    DIFERENTE       reduce using rule 46 (exp -> exp DIFERENTE exp .)
    IGUALPACARAI    reduce using rule 46 (exp -> exp DIFERENTE exp .)
    IGUAL           reduce using rule 46 (exp -> exp DIFERENTE exp .)
    RESTOINCREMENT  reduce using rule 46 (exp -> exp DIFERENTE exp .)
    DIVINCREMENT    reduce using rule 46 (exp -> exp DIFERENTE exp .)
    MULTINCREMENT   reduce using rule 46 (exp -> exp DIFERENTE exp .)
    DECREMENTN      reduce using rule 46 (exp -> exp DIFERENTE exp .)
    INCREMENTN      reduce using rule 46 (exp -> exp DIFERENTE exp .)
    VIRGULA         reduce using rule 46 (exp -> exp DIFERENTE exp .)
    RPAREN          reduce using rule 46 (exp -> exp DIFERENTE exp .)
    TERNARIO2       reduce using rule 46 (exp -> exp DIFERENTE exp .)
    RCOLCHETE       reduce using rule 46 (exp -> exp DIFERENTE exp .)
    SOMA            shift and go to state 36
    MAIORIGUALQ     shift and go to state 40
    MENORIGUALQ     shift and go to state 41
    MENORQ          shift and go to state 42
    MAIORQ          shift and go to state 43
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59

  ! SOMA            [ reduce using rule 46 (exp -> exp DIFERENTE exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 46 (exp -> exp DIFERENTE exp .) ]
  ! MENORIGUALQ     [ reduce using rule 46 (exp -> exp DIFERENTE exp .) ]
  ! MENORQ          [ reduce using rule 46 (exp -> exp DIFERENTE exp .) ]
  ! MAIORQ          [ reduce using rule 46 (exp -> exp DIFERENTE exp .) ]
  ! DECREMENT       [ reduce using rule 46 (exp -> exp DIFERENTE exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 46 (exp -> exp DIFERENTE exp .) ]
  ! INCREMENT       [ reduce using rule 46 (exp -> exp DIFERENTE exp .) ]
  ! RESTO           [ reduce using rule 46 (exp -> exp DIFERENTE exp .) ]
  ! MULT            [ reduce using rule 46 (exp -> exp DIFERENTE exp .) ]
  ! DIV             [ reduce using rule 46 (exp -> exp DIFERENTE exp .) ]
  ! SUB             [ reduce using rule 46 (exp -> exp DIFERENTE exp .) ]
  ! TERNARIO1       [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! DIFERENTEPACARAI [ shift and go to state 44 ]
  ! DIFERENTE       [ shift and go to state 45 ]
  ! IGUALPACARAI    [ shift and go to state 46 ]
  ! IGUAL           [ shift and go to state 47 ]
  ! RESTOINCREMENT  [ shift and go to state 48 ]
  ! DIVINCREMENT    [ shift and go to state 49 ]
  ! MULTINCREMENT   [ shift and go to state 50 ]
  ! DECREMENTN      [ shift and go to state 51 ]
  ! INCREMENTN      [ shift and go to state 52 ]


state 82

    (47) exp -> exp IGUALPACARAI exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 47 (exp -> exp IGUALPACARAI exp .)
    TERNARIO1       reduce using rule 47 (exp -> exp IGUALPACARAI exp .)
    OR              reduce using rule 47 (exp -> exp IGUALPACARAI exp .)
    AND             reduce using rule 47 (exp -> exp IGUALPACARAI exp .)
    DIFERENTEPACARAI reduce using rule 47 (exp -> exp IGUALPACARAI exp .)
    DIFERENTE       reduce using rule 47 (exp -> exp IGUALPACARAI exp .)
    IGUALPACARAI    reduce using rule 47 (exp -> exp IGUALPACARAI exp .)
    IGUAL           reduce using rule 47 (exp -> exp IGUALPACARAI exp .)
    RESTOINCREMENT  reduce using rule 47 (exp -> exp IGUALPACARAI exp .)
    DIVINCREMENT    reduce using rule 47 (exp -> exp IGUALPACARAI exp .)
    MULTINCREMENT   reduce using rule 47 (exp -> exp IGUALPACARAI exp .)
    DECREMENTN      reduce using rule 47 (exp -> exp IGUALPACARAI exp .)
    INCREMENTN      reduce using rule 47 (exp -> exp IGUALPACARAI exp .)
    VIRGULA         reduce using rule 47 (exp -> exp IGUALPACARAI exp .)
    RPAREN          reduce using rule 47 (exp -> exp IGUALPACARAI exp .)
    TERNARIO2       reduce using rule 47 (exp -> exp IGUALPACARAI exp .)
    RCOLCHETE       reduce using rule 47 (exp -> exp IGUALPACARAI exp .)
    SOMA            shift and go to state 36
    MAIORIGUALQ     shift and go to state 40
    MENORIGUALQ     shift and go to state 41
    MENORQ          shift and go to state 42
    MAIORQ          shift and go to state 43
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59

  ! SOMA            [ reduce using rule 47 (exp -> exp IGUALPACARAI exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 47 (exp -> exp IGUALPACARAI exp .) ]
  ! MENORIGUALQ     [ reduce using rule 47 (exp -> exp IGUALPACARAI exp .) ]
  ! MENORQ          [ reduce using rule 47 (exp -> exp IGUALPACARAI exp .) ]
  ! MAIORQ          [ reduce using rule 47 (exp -> exp IGUALPACARAI exp .) ]
  ! DECREMENT       [ reduce using rule 47 (exp -> exp IGUALPACARAI exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 47 (exp -> exp IGUALPACARAI exp .) ]
  ! INCREMENT       [ reduce using rule 47 (exp -> exp IGUALPACARAI exp .) ]
  ! RESTO           [ reduce using rule 47 (exp -> exp IGUALPACARAI exp .) ]
  ! MULT            [ reduce using rule 47 (exp -> exp IGUALPACARAI exp .) ]
  ! DIV             [ reduce using rule 47 (exp -> exp IGUALPACARAI exp .) ]
  ! SUB             [ reduce using rule 47 (exp -> exp IGUALPACARAI exp .) ]
  ! TERNARIO1       [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! DIFERENTEPACARAI [ shift and go to state 44 ]
  ! DIFERENTE       [ shift and go to state 45 ]
  ! IGUALPACARAI    [ shift and go to state 46 ]
  ! IGUAL           [ shift and go to state 47 ]
  ! RESTOINCREMENT  [ shift and go to state 48 ]
  ! DIVINCREMENT    [ shift and go to state 49 ]
  ! MULTINCREMENT   [ shift and go to state 50 ]
  ! DECREMENTN      [ shift and go to state 51 ]
  ! INCREMENTN      [ shift and go to state 52 ]


state 83

    (48) exp -> exp IGUAL exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 48 (exp -> exp IGUAL exp .)
    TERNARIO1       reduce using rule 48 (exp -> exp IGUAL exp .)
    OR              reduce using rule 48 (exp -> exp IGUAL exp .)
    AND             reduce using rule 48 (exp -> exp IGUAL exp .)
    DIFERENTEPACARAI reduce using rule 48 (exp -> exp IGUAL exp .)
    DIFERENTE       reduce using rule 48 (exp -> exp IGUAL exp .)
    IGUALPACARAI    reduce using rule 48 (exp -> exp IGUAL exp .)
    IGUAL           reduce using rule 48 (exp -> exp IGUAL exp .)
    RESTOINCREMENT  reduce using rule 48 (exp -> exp IGUAL exp .)
    DIVINCREMENT    reduce using rule 48 (exp -> exp IGUAL exp .)
    MULTINCREMENT   reduce using rule 48 (exp -> exp IGUAL exp .)
    DECREMENTN      reduce using rule 48 (exp -> exp IGUAL exp .)
    INCREMENTN      reduce using rule 48 (exp -> exp IGUAL exp .)
    VIRGULA         reduce using rule 48 (exp -> exp IGUAL exp .)
    RPAREN          reduce using rule 48 (exp -> exp IGUAL exp .)
    TERNARIO2       reduce using rule 48 (exp -> exp IGUAL exp .)
    RCOLCHETE       reduce using rule 48 (exp -> exp IGUAL exp .)
    SOMA            shift and go to state 36
    MAIORIGUALQ     shift and go to state 40
    MENORIGUALQ     shift and go to state 41
    MENORQ          shift and go to state 42
    MAIORQ          shift and go to state 43
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59

  ! SOMA            [ reduce using rule 48 (exp -> exp IGUAL exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 48 (exp -> exp IGUAL exp .) ]
  ! MENORIGUALQ     [ reduce using rule 48 (exp -> exp IGUAL exp .) ]
  ! MENORQ          [ reduce using rule 48 (exp -> exp IGUAL exp .) ]
  ! MAIORQ          [ reduce using rule 48 (exp -> exp IGUAL exp .) ]
  ! DECREMENT       [ reduce using rule 48 (exp -> exp IGUAL exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 48 (exp -> exp IGUAL exp .) ]
  ! INCREMENT       [ reduce using rule 48 (exp -> exp IGUAL exp .) ]
  ! RESTO           [ reduce using rule 48 (exp -> exp IGUAL exp .) ]
  ! MULT            [ reduce using rule 48 (exp -> exp IGUAL exp .) ]
  ! DIV             [ reduce using rule 48 (exp -> exp IGUAL exp .) ]
  ! SUB             [ reduce using rule 48 (exp -> exp IGUAL exp .) ]
  ! TERNARIO1       [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! DIFERENTEPACARAI [ shift and go to state 44 ]
  ! DIFERENTE       [ shift and go to state 45 ]
  ! IGUALPACARAI    [ shift and go to state 46 ]
  ! IGUAL           [ shift and go to state 47 ]
  ! RESTOINCREMENT  [ shift and go to state 48 ]
  ! DIVINCREMENT    [ shift and go to state 49 ]
  ! MULTINCREMENT   [ shift and go to state 50 ]
  ! DECREMENTN      [ shift and go to state 51 ]
  ! INCREMENTN      [ shift and go to state 52 ]


state 84

    (49) exp -> exp RESTOINCREMENT exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 49 (exp -> exp RESTOINCREMENT exp .)
    VIRGULA         reduce using rule 49 (exp -> exp RESTOINCREMENT exp .)
    RPAREN          reduce using rule 49 (exp -> exp RESTOINCREMENT exp .)
    TERNARIO2       reduce using rule 49 (exp -> exp RESTOINCREMENT exp .)
    RCOLCHETE       reduce using rule 49 (exp -> exp RESTOINCREMENT exp .)
    SOMA            shift and go to state 36
    TERNARIO1       shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    MAIORIGUALQ     shift and go to state 40
    MENORIGUALQ     shift and go to state 41
    MENORQ          shift and go to state 42
    MAIORQ          shift and go to state 43
    DIFERENTEPACARAI shift and go to state 44
    DIFERENTE       shift and go to state 45
    IGUALPACARAI    shift and go to state 46
    IGUAL           shift and go to state 47
    RESTOINCREMENT  shift and go to state 48
    DIVINCREMENT    shift and go to state 49
    MULTINCREMENT   shift and go to state 50
    DECREMENTN      shift and go to state 51
    INCREMENTN      shift and go to state 52
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59

  ! SOMA            [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! TERNARIO1       [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! OR              [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! AND             [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! MENORIGUALQ     [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! MENORQ          [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! MAIORQ          [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! DIFERENTEPACARAI [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! DIFERENTE       [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! IGUALPACARAI    [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! IGUAL           [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! RESTOINCREMENT  [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! DIVINCREMENT    [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! MULTINCREMENT   [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! DECREMENTN      [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! INCREMENTN      [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! DECREMENT       [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! INCREMENT       [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! RESTO           [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! MULT            [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! DIV             [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]
  ! SUB             [ reduce using rule 49 (exp -> exp RESTOINCREMENT exp .) ]


state 85

    (50) exp -> exp DIVINCREMENT exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 50 (exp -> exp DIVINCREMENT exp .)
    VIRGULA         reduce using rule 50 (exp -> exp DIVINCREMENT exp .)
    RPAREN          reduce using rule 50 (exp -> exp DIVINCREMENT exp .)
    TERNARIO2       reduce using rule 50 (exp -> exp DIVINCREMENT exp .)
    RCOLCHETE       reduce using rule 50 (exp -> exp DIVINCREMENT exp .)
    SOMA            shift and go to state 36
    TERNARIO1       shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    MAIORIGUALQ     shift and go to state 40
    MENORIGUALQ     shift and go to state 41
    MENORQ          shift and go to state 42
    MAIORQ          shift and go to state 43
    DIFERENTEPACARAI shift and go to state 44
    DIFERENTE       shift and go to state 45
    IGUALPACARAI    shift and go to state 46
    IGUAL           shift and go to state 47
    RESTOINCREMENT  shift and go to state 48
    DIVINCREMENT    shift and go to state 49
    MULTINCREMENT   shift and go to state 50
    DECREMENTN      shift and go to state 51
    INCREMENTN      shift and go to state 52
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59

  ! SOMA            [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! TERNARIO1       [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! OR              [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! AND             [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! MENORIGUALQ     [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! MENORQ          [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! MAIORQ          [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! DIFERENTEPACARAI [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! DIFERENTE       [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! IGUALPACARAI    [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! IGUAL           [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! RESTOINCREMENT  [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! DIVINCREMENT    [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! MULTINCREMENT   [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! DECREMENTN      [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! INCREMENTN      [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! DECREMENT       [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! INCREMENT       [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! RESTO           [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! MULT            [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! DIV             [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]
  ! SUB             [ reduce using rule 50 (exp -> exp DIVINCREMENT exp .) ]


state 86

    (51) exp -> exp MULTINCREMENT exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 51 (exp -> exp MULTINCREMENT exp .)
    VIRGULA         reduce using rule 51 (exp -> exp MULTINCREMENT exp .)
    RPAREN          reduce using rule 51 (exp -> exp MULTINCREMENT exp .)
    TERNARIO2       reduce using rule 51 (exp -> exp MULTINCREMENT exp .)
    RCOLCHETE       reduce using rule 51 (exp -> exp MULTINCREMENT exp .)
    SOMA            shift and go to state 36
    TERNARIO1       shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    MAIORIGUALQ     shift and go to state 40
    MENORIGUALQ     shift and go to state 41
    MENORQ          shift and go to state 42
    MAIORQ          shift and go to state 43
    DIFERENTEPACARAI shift and go to state 44
    DIFERENTE       shift and go to state 45
    IGUALPACARAI    shift and go to state 46
    IGUAL           shift and go to state 47
    RESTOINCREMENT  shift and go to state 48
    DIVINCREMENT    shift and go to state 49
    MULTINCREMENT   shift and go to state 50
    DECREMENTN      shift and go to state 51
    INCREMENTN      shift and go to state 52
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59

  ! SOMA            [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! TERNARIO1       [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! OR              [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! AND             [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! MENORIGUALQ     [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! MENORQ          [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! MAIORQ          [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! DIFERENTEPACARAI [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! DIFERENTE       [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! IGUALPACARAI    [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! IGUAL           [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! RESTOINCREMENT  [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! DIVINCREMENT    [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! MULTINCREMENT   [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! DECREMENTN      [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! INCREMENTN      [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! DECREMENT       [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! INCREMENT       [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! RESTO           [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! MULT            [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! DIV             [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]
  ! SUB             [ reduce using rule 51 (exp -> exp MULTINCREMENT exp .) ]


state 87

    (52) exp -> exp DECREMENTN exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 52 (exp -> exp DECREMENTN exp .)
    VIRGULA         reduce using rule 52 (exp -> exp DECREMENTN exp .)
    RPAREN          reduce using rule 52 (exp -> exp DECREMENTN exp .)
    TERNARIO2       reduce using rule 52 (exp -> exp DECREMENTN exp .)
    RCOLCHETE       reduce using rule 52 (exp -> exp DECREMENTN exp .)
    SOMA            shift and go to state 36
    TERNARIO1       shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    MAIORIGUALQ     shift and go to state 40
    MENORIGUALQ     shift and go to state 41
    MENORQ          shift and go to state 42
    MAIORQ          shift and go to state 43
    DIFERENTEPACARAI shift and go to state 44
    DIFERENTE       shift and go to state 45
    IGUALPACARAI    shift and go to state 46
    IGUAL           shift and go to state 47
    RESTOINCREMENT  shift and go to state 48
    DIVINCREMENT    shift and go to state 49
    MULTINCREMENT   shift and go to state 50
    DECREMENTN      shift and go to state 51
    INCREMENTN      shift and go to state 52
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59

  ! SOMA            [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! TERNARIO1       [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! OR              [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! AND             [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! MENORIGUALQ     [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! MENORQ          [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! MAIORQ          [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! DIFERENTEPACARAI [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! DIFERENTE       [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! IGUALPACARAI    [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! IGUAL           [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! RESTOINCREMENT  [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! DIVINCREMENT    [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! MULTINCREMENT   [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! DECREMENTN      [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! INCREMENTN      [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! DECREMENT       [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! INCREMENT       [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! RESTO           [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! MULT            [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! DIV             [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]
  ! SUB             [ reduce using rule 52 (exp -> exp DECREMENTN exp .) ]


state 88

    (53) exp -> exp INCREMENTN exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 53 (exp -> exp INCREMENTN exp .)
    VIRGULA         reduce using rule 53 (exp -> exp INCREMENTN exp .)
    RPAREN          reduce using rule 53 (exp -> exp INCREMENTN exp .)
    TERNARIO2       reduce using rule 53 (exp -> exp INCREMENTN exp .)
    RCOLCHETE       reduce using rule 53 (exp -> exp INCREMENTN exp .)
    SOMA            shift and go to state 36
    TERNARIO1       shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    MAIORIGUALQ     shift and go to state 40
    MENORIGUALQ     shift and go to state 41
    MENORQ          shift and go to state 42
    MAIORQ          shift and go to state 43
    DIFERENTEPACARAI shift and go to state 44
    DIFERENTE       shift and go to state 45
    IGUALPACARAI    shift and go to state 46
    IGUAL           shift and go to state 47
    RESTOINCREMENT  shift and go to state 48
    DIVINCREMENT    shift and go to state 49
    MULTINCREMENT   shift and go to state 50
    DECREMENTN      shift and go to state 51
    INCREMENTN      shift and go to state 52
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59

  ! SOMA            [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! TERNARIO1       [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! OR              [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! AND             [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! MENORIGUALQ     [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! MENORQ          [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! MAIORQ          [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! DIFERENTEPACARAI [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! DIFERENTE       [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! IGUALPACARAI    [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! IGUAL           [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! RESTOINCREMENT  [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! DIVINCREMENT    [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! MULTINCREMENT   [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! DECREMENTN      [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! INCREMENTN      [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! DECREMENT       [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! INCREMENT       [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! RESTO           [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! MULT            [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! DIV             [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]
  ! SUB             [ reduce using rule 53 (exp -> exp INCREMENTN exp .) ]


state 89

    (55) exp -> exp EXPONENCIACAO exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    SOMA            reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    TERNARIO1       reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    OR              reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    AND             reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    MAIORIGUALQ     reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    MENORIGUALQ     reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    MENORQ          reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    MAIORQ          reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    DIFERENTEPACARAI reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    DIFERENTE       reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    IGUALPACARAI    reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    IGUAL           reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    RESTOINCREMENT  reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    DIVINCREMENT    reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    MULTINCREMENT   reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    DECREMENTN      reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    INCREMENTN      reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    RESTO           reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    MULT            reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    DIV             reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    SUB             reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    VIRGULA         reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    RPAREN          reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    TERNARIO2       reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    RCOLCHETE       reduce using rule 55 (exp -> exp EXPONENCIACAO exp .)
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55

  ! DECREMENT       [ reduce using rule 55 (exp -> exp EXPONENCIACAO exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 55 (exp -> exp EXPONENCIACAO exp .) ]
  ! INCREMENT       [ reduce using rule 55 (exp -> exp EXPONENCIACAO exp .) ]
  ! SOMA            [ shift and go to state 36 ]
  ! TERNARIO1       [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! MAIORIGUALQ     [ shift and go to state 40 ]
  ! MENORIGUALQ     [ shift and go to state 41 ]
  ! MENORQ          [ shift and go to state 42 ]
  ! MAIORQ          [ shift and go to state 43 ]
  ! DIFERENTEPACARAI [ shift and go to state 44 ]
  ! DIFERENTE       [ shift and go to state 45 ]
  ! IGUALPACARAI    [ shift and go to state 46 ]
  ! IGUAL           [ shift and go to state 47 ]
  ! RESTOINCREMENT  [ shift and go to state 48 ]
  ! DIVINCREMENT    [ shift and go to state 49 ]
  ! MULTINCREMENT   [ shift and go to state 50 ]
  ! DECREMENTN      [ shift and go to state 51 ]
  ! INCREMENTN      [ shift and go to state 52 ]
  ! RESTO           [ shift and go to state 56 ]
  ! MULT            [ shift and go to state 57 ]
  ! DIV             [ shift and go to state 58 ]
  ! SUB             [ shift and go to state 59 ]


state 90

    (57) exp -> exp RESTO exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 57 (exp -> exp RESTO exp .)
    SOMA            reduce using rule 57 (exp -> exp RESTO exp .)
    TERNARIO1       reduce using rule 57 (exp -> exp RESTO exp .)
    OR              reduce using rule 57 (exp -> exp RESTO exp .)
    AND             reduce using rule 57 (exp -> exp RESTO exp .)
    MAIORIGUALQ     reduce using rule 57 (exp -> exp RESTO exp .)
    MENORIGUALQ     reduce using rule 57 (exp -> exp RESTO exp .)
    MENORQ          reduce using rule 57 (exp -> exp RESTO exp .)
    MAIORQ          reduce using rule 57 (exp -> exp RESTO exp .)
    DIFERENTEPACARAI reduce using rule 57 (exp -> exp RESTO exp .)
    DIFERENTE       reduce using rule 57 (exp -> exp RESTO exp .)
    IGUALPACARAI    reduce using rule 57 (exp -> exp RESTO exp .)
    IGUAL           reduce using rule 57 (exp -> exp RESTO exp .)
    RESTOINCREMENT  reduce using rule 57 (exp -> exp RESTO exp .)
    DIVINCREMENT    reduce using rule 57 (exp -> exp RESTO exp .)
    MULTINCREMENT   reduce using rule 57 (exp -> exp RESTO exp .)
    DECREMENTN      reduce using rule 57 (exp -> exp RESTO exp .)
    INCREMENTN      reduce using rule 57 (exp -> exp RESTO exp .)
    RESTO           reduce using rule 57 (exp -> exp RESTO exp .)
    MULT            reduce using rule 57 (exp -> exp RESTO exp .)
    DIV             reduce using rule 57 (exp -> exp RESTO exp .)
    SUB             reduce using rule 57 (exp -> exp RESTO exp .)
    VIRGULA         reduce using rule 57 (exp -> exp RESTO exp .)
    RPAREN          reduce using rule 57 (exp -> exp RESTO exp .)
    TERNARIO2       reduce using rule 57 (exp -> exp RESTO exp .)
    RCOLCHETE       reduce using rule 57 (exp -> exp RESTO exp .)
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55

  ! DECREMENT       [ reduce using rule 57 (exp -> exp RESTO exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 57 (exp -> exp RESTO exp .) ]
  ! INCREMENT       [ reduce using rule 57 (exp -> exp RESTO exp .) ]
  ! SOMA            [ shift and go to state 36 ]
  ! TERNARIO1       [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! MAIORIGUALQ     [ shift and go to state 40 ]
  ! MENORIGUALQ     [ shift and go to state 41 ]
  ! MENORQ          [ shift and go to state 42 ]
  ! MAIORQ          [ shift and go to state 43 ]
  ! DIFERENTEPACARAI [ shift and go to state 44 ]
  ! DIFERENTE       [ shift and go to state 45 ]
  ! IGUALPACARAI    [ shift and go to state 46 ]
  ! IGUAL           [ shift and go to state 47 ]
  ! RESTOINCREMENT  [ shift and go to state 48 ]
  ! DIVINCREMENT    [ shift and go to state 49 ]
  ! MULTINCREMENT   [ shift and go to state 50 ]
  ! DECREMENTN      [ shift and go to state 51 ]
  ! INCREMENTN      [ shift and go to state 52 ]
  ! RESTO           [ shift and go to state 56 ]
  ! MULT            [ shift and go to state 57 ]
  ! DIV             [ shift and go to state 58 ]
  ! SUB             [ shift and go to state 59 ]


state 91

    (58) exp -> exp MULT exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 58 (exp -> exp MULT exp .)
    SOMA            reduce using rule 58 (exp -> exp MULT exp .)
    TERNARIO1       reduce using rule 58 (exp -> exp MULT exp .)
    OR              reduce using rule 58 (exp -> exp MULT exp .)
    AND             reduce using rule 58 (exp -> exp MULT exp .)
    MAIORIGUALQ     reduce using rule 58 (exp -> exp MULT exp .)
    MENORIGUALQ     reduce using rule 58 (exp -> exp MULT exp .)
    MENORQ          reduce using rule 58 (exp -> exp MULT exp .)
    MAIORQ          reduce using rule 58 (exp -> exp MULT exp .)
    DIFERENTEPACARAI reduce using rule 58 (exp -> exp MULT exp .)
    DIFERENTE       reduce using rule 58 (exp -> exp MULT exp .)
    IGUALPACARAI    reduce using rule 58 (exp -> exp MULT exp .)
    IGUAL           reduce using rule 58 (exp -> exp MULT exp .)
    RESTOINCREMENT  reduce using rule 58 (exp -> exp MULT exp .)
    DIVINCREMENT    reduce using rule 58 (exp -> exp MULT exp .)
    MULTINCREMENT   reduce using rule 58 (exp -> exp MULT exp .)
    DECREMENTN      reduce using rule 58 (exp -> exp MULT exp .)
    INCREMENTN      reduce using rule 58 (exp -> exp MULT exp .)
    RESTO           reduce using rule 58 (exp -> exp MULT exp .)
    MULT            reduce using rule 58 (exp -> exp MULT exp .)
    DIV             reduce using rule 58 (exp -> exp MULT exp .)
    SUB             reduce using rule 58 (exp -> exp MULT exp .)
    VIRGULA         reduce using rule 58 (exp -> exp MULT exp .)
    RPAREN          reduce using rule 58 (exp -> exp MULT exp .)
    TERNARIO2       reduce using rule 58 (exp -> exp MULT exp .)
    RCOLCHETE       reduce using rule 58 (exp -> exp MULT exp .)
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55

  ! DECREMENT       [ reduce using rule 58 (exp -> exp MULT exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 58 (exp -> exp MULT exp .) ]
  ! INCREMENT       [ reduce using rule 58 (exp -> exp MULT exp .) ]
  ! SOMA            [ shift and go to state 36 ]
  ! TERNARIO1       [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! MAIORIGUALQ     [ shift and go to state 40 ]
  ! MENORIGUALQ     [ shift and go to state 41 ]
  ! MENORQ          [ shift and go to state 42 ]
  ! MAIORQ          [ shift and go to state 43 ]
  ! DIFERENTEPACARAI [ shift and go to state 44 ]
  ! DIFERENTE       [ shift and go to state 45 ]
  ! IGUALPACARAI    [ shift and go to state 46 ]
  ! IGUAL           [ shift and go to state 47 ]
  ! RESTOINCREMENT  [ shift and go to state 48 ]
  ! DIVINCREMENT    [ shift and go to state 49 ]
  ! MULTINCREMENT   [ shift and go to state 50 ]
  ! DECREMENTN      [ shift and go to state 51 ]
  ! INCREMENTN      [ shift and go to state 52 ]
  ! RESTO           [ shift and go to state 56 ]
  ! MULT            [ shift and go to state 57 ]
  ! DIV             [ shift and go to state 58 ]
  ! SUB             [ shift and go to state 59 ]


state 92

    (59) exp -> exp DIV exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 59 (exp -> exp DIV exp .)
    SOMA            reduce using rule 59 (exp -> exp DIV exp .)
    TERNARIO1       reduce using rule 59 (exp -> exp DIV exp .)
    OR              reduce using rule 59 (exp -> exp DIV exp .)
    AND             reduce using rule 59 (exp -> exp DIV exp .)
    MAIORIGUALQ     reduce using rule 59 (exp -> exp DIV exp .)
    MENORIGUALQ     reduce using rule 59 (exp -> exp DIV exp .)
    MENORQ          reduce using rule 59 (exp -> exp DIV exp .)
    MAIORQ          reduce using rule 59 (exp -> exp DIV exp .)
    DIFERENTEPACARAI reduce using rule 59 (exp -> exp DIV exp .)
    DIFERENTE       reduce using rule 59 (exp -> exp DIV exp .)
    IGUALPACARAI    reduce using rule 59 (exp -> exp DIV exp .)
    IGUAL           reduce using rule 59 (exp -> exp DIV exp .)
    RESTOINCREMENT  reduce using rule 59 (exp -> exp DIV exp .)
    DIVINCREMENT    reduce using rule 59 (exp -> exp DIV exp .)
    MULTINCREMENT   reduce using rule 59 (exp -> exp DIV exp .)
    DECREMENTN      reduce using rule 59 (exp -> exp DIV exp .)
    INCREMENTN      reduce using rule 59 (exp -> exp DIV exp .)
    RESTO           reduce using rule 59 (exp -> exp DIV exp .)
    MULT            reduce using rule 59 (exp -> exp DIV exp .)
    DIV             reduce using rule 59 (exp -> exp DIV exp .)
    SUB             reduce using rule 59 (exp -> exp DIV exp .)
    VIRGULA         reduce using rule 59 (exp -> exp DIV exp .)
    RPAREN          reduce using rule 59 (exp -> exp DIV exp .)
    TERNARIO2       reduce using rule 59 (exp -> exp DIV exp .)
    RCOLCHETE       reduce using rule 59 (exp -> exp DIV exp .)
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55

  ! DECREMENT       [ reduce using rule 59 (exp -> exp DIV exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 59 (exp -> exp DIV exp .) ]
  ! INCREMENT       [ reduce using rule 59 (exp -> exp DIV exp .) ]
  ! SOMA            [ shift and go to state 36 ]
  ! TERNARIO1       [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! MAIORIGUALQ     [ shift and go to state 40 ]
  ! MENORIGUALQ     [ shift and go to state 41 ]
  ! MENORQ          [ shift and go to state 42 ]
  ! MAIORQ          [ shift and go to state 43 ]
  ! DIFERENTEPACARAI [ shift and go to state 44 ]
  ! DIFERENTE       [ shift and go to state 45 ]
  ! IGUALPACARAI    [ shift and go to state 46 ]
  ! IGUAL           [ shift and go to state 47 ]
  ! RESTOINCREMENT  [ shift and go to state 48 ]
  ! DIVINCREMENT    [ shift and go to state 49 ]
  ! MULTINCREMENT   [ shift and go to state 50 ]
  ! DECREMENTN      [ shift and go to state 51 ]
  ! INCREMENTN      [ shift and go to state 52 ]
  ! RESTO           [ shift and go to state 56 ]
  ! MULT            [ shift and go to state 57 ]
  ! DIV             [ shift and go to state 58 ]
  ! SUB             [ shift and go to state 59 ]


state 93

    (60) exp -> exp SUB exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 60 (exp -> exp SUB exp .)
    SOMA            reduce using rule 60 (exp -> exp SUB exp .)
    TERNARIO1       reduce using rule 60 (exp -> exp SUB exp .)
    OR              reduce using rule 60 (exp -> exp SUB exp .)
    AND             reduce using rule 60 (exp -> exp SUB exp .)
    MAIORIGUALQ     reduce using rule 60 (exp -> exp SUB exp .)
    MENORIGUALQ     reduce using rule 60 (exp -> exp SUB exp .)
    MENORQ          reduce using rule 60 (exp -> exp SUB exp .)
    MAIORQ          reduce using rule 60 (exp -> exp SUB exp .)
    DIFERENTEPACARAI reduce using rule 60 (exp -> exp SUB exp .)
    DIFERENTE       reduce using rule 60 (exp -> exp SUB exp .)
    IGUALPACARAI    reduce using rule 60 (exp -> exp SUB exp .)
    IGUAL           reduce using rule 60 (exp -> exp SUB exp .)
    RESTOINCREMENT  reduce using rule 60 (exp -> exp SUB exp .)
    DIVINCREMENT    reduce using rule 60 (exp -> exp SUB exp .)
    MULTINCREMENT   reduce using rule 60 (exp -> exp SUB exp .)
    DECREMENTN      reduce using rule 60 (exp -> exp SUB exp .)
    INCREMENTN      reduce using rule 60 (exp -> exp SUB exp .)
    SUB             reduce using rule 60 (exp -> exp SUB exp .)
    VIRGULA         reduce using rule 60 (exp -> exp SUB exp .)
    RPAREN          reduce using rule 60 (exp -> exp SUB exp .)
    TERNARIO2       reduce using rule 60 (exp -> exp SUB exp .)
    RCOLCHETE       reduce using rule 60 (exp -> exp SUB exp .)
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58

  ! DECREMENT       [ reduce using rule 60 (exp -> exp SUB exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 60 (exp -> exp SUB exp .) ]
  ! INCREMENT       [ reduce using rule 60 (exp -> exp SUB exp .) ]
  ! RESTO           [ reduce using rule 60 (exp -> exp SUB exp .) ]
  ! MULT            [ reduce using rule 60 (exp -> exp SUB exp .) ]
  ! DIV             [ reduce using rule 60 (exp -> exp SUB exp .) ]
  ! SOMA            [ shift and go to state 36 ]
  ! TERNARIO1       [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! MAIORIGUALQ     [ shift and go to state 40 ]
  ! MENORIGUALQ     [ shift and go to state 41 ]
  ! MENORQ          [ shift and go to state 42 ]
  ! MAIORQ          [ shift and go to state 43 ]
  ! DIFERENTEPACARAI [ shift and go to state 44 ]
  ! DIFERENTE       [ shift and go to state 45 ]
  ! IGUALPACARAI    [ shift and go to state 46 ]
  ! IGUAL           [ shift and go to state 47 ]
  ! RESTOINCREMENT  [ shift and go to state 48 ]
  ! DIVINCREMENT    [ shift and go to state 49 ]
  ! MULTINCREMENT   [ shift and go to state 50 ]
  ! DECREMENTN      [ shift and go to state 51 ]
  ! INCREMENTN      [ shift and go to state 52 ]
  ! SUB             [ shift and go to state 59 ]


state 94

    (20) stm -> WHILE LPAREN exp . RPAREN bodyorstm
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    RPAREN          shift and go to state 107
    SOMA            shift and go to state 36
    TERNARIO1       shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    MAIORIGUALQ     shift and go to state 40
    MENORIGUALQ     shift and go to state 41
    MENORQ          shift and go to state 42
    MAIORQ          shift and go to state 43
    DIFERENTEPACARAI shift and go to state 44
    DIFERENTE       shift and go to state 45
    IGUALPACARAI    shift and go to state 46
    IGUAL           shift and go to state 47
    RESTOINCREMENT  shift and go to state 48
    DIVINCREMENT    shift and go to state 49
    MULTINCREMENT   shift and go to state 50
    DECREMENTN      shift and go to state 51
    INCREMENTN      shift and go to state 52
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59


state 95

    (21) stm -> FOR LPAREN opexp . PV opexp PV opexp RPAREN bodyorstm

    PV              shift and go to state 108


state 96

    (24) opexp -> exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 24 (opexp -> exp .)
    RPAREN          reduce using rule 24 (opexp -> exp .)
    SOMA            shift and go to state 36
    TERNARIO1       shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    MAIORIGUALQ     shift and go to state 40
    MENORIGUALQ     shift and go to state 41
    MENORQ          shift and go to state 42
    MAIORQ          shift and go to state 43
    DIFERENTEPACARAI shift and go to state 44
    DIFERENTE       shift and go to state 45
    IGUALPACARAI    shift and go to state 46
    IGUAL           shift and go to state 47
    RESTOINCREMENT  shift and go to state 48
    DIVINCREMENT    shift and go to state 49
    MULTINCREMENT   shift and go to state 50
    DECREMENTN      shift and go to state 51
    INCREMENTN      shift and go to state 52
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59


state 97

    (25) opexp -> VOID .

    PV              reduce using rule 25 (opexp -> VOID .)
    RPAREN          reduce using rule 25 (opexp -> VOID .)


state 98

    (22) stm -> IF LPAREN exp . RPAREN bodyorstm ELSE bodyorstm
    (23) stm -> IF LPAREN exp . RPAREN bodyorstm
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    RPAREN          shift and go to state 109
    SOMA            shift and go to state 36
    TERNARIO1       shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    MAIORIGUALQ     shift and go to state 40
    MENORIGUALQ     shift and go to state 41
    MENORQ          shift and go to state 42
    MAIORQ          shift and go to state 43
    DIFERENTEPACARAI shift and go to state 44
    DIFERENTE       shift and go to state 45
    IGUALPACARAI    shift and go to state 46
    IGUAL           shift and go to state 47
    RESTOINCREMENT  shift and go to state 48
    DIVINCREMENT    shift and go to state 49
    MULTINCREMENT   shift and go to state 50
    DECREMENTN      shift and go to state 51
    INCREMENTN      shift and go to state 52
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59


state 99

    (6) vardecl -> tipodecl ID ATRIBUICAO . exp
    (8) vardecl -> tipodecl ID ATRIBUICAO . LCOLCHETE listexp RCOLCHETE
    (10) vardecl -> tipodecl ID ATRIBUICAO . LCOLCHETE RCOLCHETE
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    LCOLCHETE       shift and go to state 111
    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    tipodecl                       shift and go to state 22
    exp                            shift and go to state 110
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19

state 100

    (7) vardecl -> tipodecl ID LCOLCHETE . INTEIRO RCOLCHETE
    (9) vardecl -> tipodecl ID LCOLCHETE . INTEIRO RCOLCHETE ATRIBUICAO listexp

    INTEIRO         shift and go to state 112


state 101

    (15) body -> LCHAVES stms RCHAVES .

    FUNCTION        reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    RETURN          reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    WHILE           reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    FOR             reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    IF              reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    FALSE           reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    TRUE            reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    ID              reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    FLOAT           reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    INTEIRO         reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    NEGACAO         reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    STRING          reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    LET             reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    CONST           reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    VAR             reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    $end            reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    RCHAVES         reduce using rule 15 (body -> LCHAVES stms RCHAVES .)
    ELSE            reduce using rule 15 (body -> LCHAVES stms RCHAVES .)


state 102

    (13) sigParams -> ID .
    (14) sigParams -> ID . VIRGULA sigParams

    RPAREN          reduce using rule 13 (sigParams -> ID .)
    VIRGULA         shift and go to state 113


state 103

    (12) signature -> FUNCTION ID LPAREN sigParams . RPAREN

    RPAREN          shift and go to state 114


state 104

    (62) call -> ID LPAREN params RPAREN .

    PV              reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    SOMA            reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    TERNARIO1       reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    OR              reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    AND             reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    MAIORIGUALQ     reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    MENORIGUALQ     reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    MENORQ          reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    MAIORQ          reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    DIFERENTEPACARAI reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    DIFERENTE       reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    IGUALPACARAI    reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    IGUAL           reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    RESTOINCREMENT  reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    DIVINCREMENT    reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    MULTINCREMENT   reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    DECREMENTN      reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    INCREMENTN      reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    DECREMENT       reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    EXPONENCIACAO   reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    INCREMENT       reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    RESTO           reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    MULT            reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    DIV             reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    SUB             reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    VIRGULA         reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    RPAREN          reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    TERNARIO2       reduce using rule 62 (call -> ID LPAREN params RPAREN .)
    RCOLCHETE       reduce using rule 62 (call -> ID LPAREN params RPAREN .)


state 105

    (64) params -> exp VIRGULA . params
    (64) params -> . exp VIRGULA params
    (65) params -> . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 70
    params                         shift and go to state 115
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 106

    (37) exp -> exp TERNARIO1 exp TERNARIO2 . exp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 116
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 107

    (20) stm -> WHILE LPAREN exp RPAREN . bodyorstm
    (26) bodyorstm -> . body
    (27) bodyorstm -> . stm
    (15) body -> . LCHAVES stms RCHAVES
    (18) stm -> . RETURN exp PV
    (19) stm -> . exp PV
    (20) stm -> . WHILE LPAREN exp RPAREN bodyorstm
    (21) stm -> . FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm
    (22) stm -> . IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm
    (23) stm -> . IF LPAREN exp RPAREN bodyorstm
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    LCHAVES         shift and go to state 29
    RETURN          shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    IF              shift and go to state 12
    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 9
    bodyorstm                      shift and go to state 117
    body                           shift and go to state 118
    stm                            shift and go to state 119
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 108

    (21) stm -> FOR LPAREN opexp PV . opexp PV opexp RPAREN bodyorstm
    (24) opexp -> . exp
    (25) opexp -> . VOID
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    VOID            shift and go to state 97
    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    opexp                          shift and go to state 120
    exp                            shift and go to state 96
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 109

    (22) stm -> IF LPAREN exp RPAREN . bodyorstm ELSE bodyorstm
    (23) stm -> IF LPAREN exp RPAREN . bodyorstm
    (26) bodyorstm -> . body
    (27) bodyorstm -> . stm
    (15) body -> . LCHAVES stms RCHAVES
    (18) stm -> . RETURN exp PV
    (19) stm -> . exp PV
    (20) stm -> . WHILE LPAREN exp RPAREN bodyorstm
    (21) stm -> . FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm
    (22) stm -> . IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm
    (23) stm -> . IF LPAREN exp RPAREN bodyorstm
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    LCHAVES         shift and go to state 29
    RETURN          shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    IF              shift and go to state 12
    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 9
    bodyorstm                      shift and go to state 121
    body                           shift and go to state 118
    stm                            shift and go to state 119
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 110

    (6) vardecl -> tipodecl ID ATRIBUICAO exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .)
    VIRGULA         reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .)
    RPAREN          reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .)
    TERNARIO2       reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .)
    RCOLCHETE       reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .)
    SOMA            shift and go to state 36
    TERNARIO1       shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    MAIORIGUALQ     shift and go to state 40
    MENORIGUALQ     shift and go to state 41
    MENORQ          shift and go to state 42
    MAIORQ          shift and go to state 43
    DIFERENTEPACARAI shift and go to state 44
    DIFERENTE       shift and go to state 45
    IGUALPACARAI    shift and go to state 46
    IGUAL           shift and go to state 47
    RESTOINCREMENT  shift and go to state 48
    DIVINCREMENT    shift and go to state 49
    MULTINCREMENT   shift and go to state 50
    DECREMENTN      shift and go to state 51
    INCREMENTN      shift and go to state 52
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59

  ! SOMA            [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! TERNARIO1       [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! OR              [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! AND             [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! MENORIGUALQ     [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! MENORQ          [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! MAIORQ          [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! DIFERENTEPACARAI [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! DIFERENTE       [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! IGUALPACARAI    [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! IGUAL           [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! RESTOINCREMENT  [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! DIVINCREMENT    [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! MULTINCREMENT   [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! DECREMENTN      [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! INCREMENTN      [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! DECREMENT       [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! INCREMENT       [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! RESTO           [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! MULT            [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! DIV             [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]
  ! SUB             [ reduce using rule 6 (vardecl -> tipodecl ID ATRIBUICAO exp .) ]


state 111

    (8) vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE . listexp RCOLCHETE
    (10) vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE . RCOLCHETE
    (70) listexp -> . exp
    (71) listexp -> . exp VIRGULA listexp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    RCOLCHETE       shift and go to state 123
    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    tipodecl                       shift and go to state 22
    listexp                        shift and go to state 122
    exp                            shift and go to state 124
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19

state 112

    (7) vardecl -> tipodecl ID LCOLCHETE INTEIRO . RCOLCHETE
    (9) vardecl -> tipodecl ID LCOLCHETE INTEIRO . RCOLCHETE ATRIBUICAO listexp

    RCOLCHETE       shift and go to state 125


state 113

    (14) sigParams -> ID VIRGULA . sigParams
    (13) sigParams -> . ID
    (14) sigParams -> . ID VIRGULA sigParams

    ID              shift and go to state 102

    sigParams                      shift and go to state 126

state 114

    (12) signature -> FUNCTION ID LPAREN sigParams RPAREN .

    LCHAVES         reduce using rule 12 (signature -> FUNCTION ID LPAREN sigParams RPAREN .)


state 115

    (64) params -> exp VIRGULA params .

    RPAREN          reduce using rule 64 (params -> exp VIRGULA params .)


state 116

    (37) exp -> exp TERNARIO1 exp TERNARIO2 exp .
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

    PV              reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .)
    RESTOINCREMENT  reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .)
    DIVINCREMENT    reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .)
    MULTINCREMENT   reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .)
    DECREMENTN      reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .)
    INCREMENTN      reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .)
    VIRGULA         reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .)
    RPAREN          reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .)
    TERNARIO2       reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .)
    RCOLCHETE       reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .)
    SOMA            shift and go to state 36
    TERNARIO1       shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    MAIORIGUALQ     shift and go to state 40
    MENORIGUALQ     shift and go to state 41
    MENORQ          shift and go to state 42
    MAIORQ          shift and go to state 43
    DIFERENTEPACARAI shift and go to state 44
    DIFERENTE       shift and go to state 45
    IGUALPACARAI    shift and go to state 46
    IGUAL           shift and go to state 47
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59

  ! SOMA            [ reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! TERNARIO1       [ reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! OR              [ reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! AND             [ reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! MENORIGUALQ     [ reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! MENORQ          [ reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! MAIORQ          [ reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! DIFERENTEPACARAI [ reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! DIFERENTE       [ reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! IGUALPACARAI    [ reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! IGUAL           [ reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! DECREMENT       [ reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! INCREMENT       [ reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! RESTO           [ reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! MULT            [ reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! DIV             [ reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! SUB             [ reduce using rule 37 (exp -> exp TERNARIO1 exp TERNARIO2 exp .) ]
  ! RESTOINCREMENT  [ shift and go to state 48 ]
  ! DIVINCREMENT    [ shift and go to state 49 ]
  ! MULTINCREMENT   [ shift and go to state 50 ]
  ! DECREMENTN      [ shift and go to state 51 ]
  ! INCREMENTN      [ shift and go to state 52 ]


state 117

    (20) stm -> WHILE LPAREN exp RPAREN bodyorstm .

    RETURN          reduce using rule 20 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    WHILE           reduce using rule 20 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    FOR             reduce using rule 20 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    IF              reduce using rule 20 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    FALSE           reduce using rule 20 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    TRUE            reduce using rule 20 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    ID              reduce using rule 20 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    FLOAT           reduce using rule 20 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    INTEIRO         reduce using rule 20 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    NEGACAO         reduce using rule 20 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    STRING          reduce using rule 20 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    LET             reduce using rule 20 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    CONST           reduce using rule 20 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    VAR             reduce using rule 20 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    FUNCTION        reduce using rule 20 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    $end            reduce using rule 20 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    RCHAVES         reduce using rule 20 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)
    ELSE            reduce using rule 20 (stm -> WHILE LPAREN exp RPAREN bodyorstm .)


state 118

    (26) bodyorstm -> body .

    RETURN          reduce using rule 26 (bodyorstm -> body .)
    WHILE           reduce using rule 26 (bodyorstm -> body .)
    FOR             reduce using rule 26 (bodyorstm -> body .)
    IF              reduce using rule 26 (bodyorstm -> body .)
    FALSE           reduce using rule 26 (bodyorstm -> body .)
    TRUE            reduce using rule 26 (bodyorstm -> body .)
    ID              reduce using rule 26 (bodyorstm -> body .)
    FLOAT           reduce using rule 26 (bodyorstm -> body .)
    INTEIRO         reduce using rule 26 (bodyorstm -> body .)
    NEGACAO         reduce using rule 26 (bodyorstm -> body .)
    STRING          reduce using rule 26 (bodyorstm -> body .)
    LET             reduce using rule 26 (bodyorstm -> body .)
    CONST           reduce using rule 26 (bodyorstm -> body .)
    VAR             reduce using rule 26 (bodyorstm -> body .)
    FUNCTION        reduce using rule 26 (bodyorstm -> body .)
    $end            reduce using rule 26 (bodyorstm -> body .)
    RCHAVES         reduce using rule 26 (bodyorstm -> body .)
    ELSE            reduce using rule 26 (bodyorstm -> body .)


state 119

    (27) bodyorstm -> stm .

    RETURN          reduce using rule 27 (bodyorstm -> stm .)
    WHILE           reduce using rule 27 (bodyorstm -> stm .)
    FOR             reduce using rule 27 (bodyorstm -> stm .)
    IF              reduce using rule 27 (bodyorstm -> stm .)
    FALSE           reduce using rule 27 (bodyorstm -> stm .)
    TRUE            reduce using rule 27 (bodyorstm -> stm .)
    ID              reduce using rule 27 (bodyorstm -> stm .)
    FLOAT           reduce using rule 27 (bodyorstm -> stm .)
    INTEIRO         reduce using rule 27 (bodyorstm -> stm .)
    NEGACAO         reduce using rule 27 (bodyorstm -> stm .)
    STRING          reduce using rule 27 (bodyorstm -> stm .)
    LET             reduce using rule 27 (bodyorstm -> stm .)
    CONST           reduce using rule 27 (bodyorstm -> stm .)
    VAR             reduce using rule 27 (bodyorstm -> stm .)
    FUNCTION        reduce using rule 27 (bodyorstm -> stm .)
    $end            reduce using rule 27 (bodyorstm -> stm .)
    RCHAVES         reduce using rule 27 (bodyorstm -> stm .)
    ELSE            reduce using rule 27 (bodyorstm -> stm .)


state 120

    (21) stm -> FOR LPAREN opexp PV opexp . PV opexp RPAREN bodyorstm

    PV              shift and go to state 127


state 121

    (22) stm -> IF LPAREN exp RPAREN bodyorstm . ELSE bodyorstm
    (23) stm -> IF LPAREN exp RPAREN bodyorstm .

    RETURN          reduce using rule 23 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    WHILE           reduce using rule 23 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    FOR             reduce using rule 23 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    IF              reduce using rule 23 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    FALSE           reduce using rule 23 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    TRUE            reduce using rule 23 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    ID              reduce using rule 23 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    FLOAT           reduce using rule 23 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    INTEIRO         reduce using rule 23 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    NEGACAO         reduce using rule 23 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    STRING          reduce using rule 23 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    LET             reduce using rule 23 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    CONST           reduce using rule 23 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    VAR             reduce using rule 23 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    FUNCTION        reduce using rule 23 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    $end            reduce using rule 23 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    RCHAVES         reduce using rule 23 (stm -> IF LPAREN exp RPAREN bodyorstm .)
    ELSE            reduce using rule 23 (stm -> IF LPAREN exp RPAREN bodyorstm .)

  ! ELSE            [ shift and go to state 128 ]


state 122

    (8) vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp . RCOLCHETE

    RCOLCHETE       shift and go to state 129


state 123

    (10) vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .

    PV              reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    SOMA            reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    TERNARIO1       reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    OR              reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    AND             reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    MAIORIGUALQ     reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    MENORIGUALQ     reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    MENORQ          reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    MAIORQ          reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    DIFERENTEPACARAI reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    DIFERENTE       reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    IGUALPACARAI    reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    IGUAL           reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    RESTOINCREMENT  reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    DIVINCREMENT    reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    MULTINCREMENT   reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    DECREMENTN      reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    INCREMENTN      reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    DECREMENT       reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    EXPONENCIACAO   reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    INCREMENT       reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    RESTO           reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    MULT            reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    DIV             reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    SUB             reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    VIRGULA         reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    RPAREN          reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    TERNARIO2       reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)
    RCOLCHETE       reduce using rule 10 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE .)


state 124

    (70) listexp -> exp .
    (71) listexp -> exp . VIRGULA listexp
    (29) exp -> exp . SOMA exp
    (37) exp -> exp . TERNARIO1 exp TERNARIO2 exp
    (39) exp -> exp . OR exp
    (40) exp -> exp . AND exp
    (41) exp -> exp . MAIORIGUALQ exp
    (42) exp -> exp . MENORIGUALQ exp
    (43) exp -> exp . MENORQ exp
    (44) exp -> exp . MAIORQ exp
    (45) exp -> exp . DIFERENTEPACARAI exp
    (46) exp -> exp . DIFERENTE exp
    (47) exp -> exp . IGUALPACARAI exp
    (48) exp -> exp . IGUAL exp
    (49) exp -> exp . RESTOINCREMENT exp
    (50) exp -> exp . DIVINCREMENT exp
    (51) exp -> exp . MULTINCREMENT exp
    (52) exp -> exp . DECREMENTN exp
    (53) exp -> exp . INCREMENTN exp
    (54) exp -> exp . DECREMENT
    (55) exp -> exp . EXPONENCIACAO exp
    (56) exp -> exp . INCREMENT
    (57) exp -> exp . RESTO exp
    (58) exp -> exp . MULT exp
    (59) exp -> exp . DIV exp
    (60) exp -> exp . SUB exp

  ! shift/reduce conflict for VIRGULA resolved as shift
  ! shift/reduce conflict for SOMA resolved as shift
  ! shift/reduce conflict for TERNARIO1 resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MAIORIGUALQ resolved as shift
  ! shift/reduce conflict for MENORIGUALQ resolved as shift
  ! shift/reduce conflict for MENORQ resolved as shift
  ! shift/reduce conflict for MAIORQ resolved as shift
  ! shift/reduce conflict for DIFERENTEPACARAI resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IGUALPACARAI resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for RESTOINCREMENT resolved as shift
  ! shift/reduce conflict for DIVINCREMENT resolved as shift
  ! shift/reduce conflict for MULTINCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENTN resolved as shift
  ! shift/reduce conflict for INCREMENTN resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for EXPONENCIACAO resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for RESTO resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
    RCOLCHETE       reduce using rule 70 (listexp -> exp .)
    PV              reduce using rule 70 (listexp -> exp .)
    RPAREN          reduce using rule 70 (listexp -> exp .)
    TERNARIO2       reduce using rule 70 (listexp -> exp .)
    VIRGULA         shift and go to state 130
    SOMA            shift and go to state 36
    TERNARIO1       shift and go to state 37
    OR              shift and go to state 38
    AND             shift and go to state 39
    MAIORIGUALQ     shift and go to state 40
    MENORIGUALQ     shift and go to state 41
    MENORQ          shift and go to state 42
    MAIORQ          shift and go to state 43
    DIFERENTEPACARAI shift and go to state 44
    DIFERENTE       shift and go to state 45
    IGUALPACARAI    shift and go to state 46
    IGUAL           shift and go to state 47
    RESTOINCREMENT  shift and go to state 48
    DIVINCREMENT    shift and go to state 49
    MULTINCREMENT   shift and go to state 50
    DECREMENTN      shift and go to state 51
    INCREMENTN      shift and go to state 52
    DECREMENT       shift and go to state 53
    EXPONENCIACAO   shift and go to state 54
    INCREMENT       shift and go to state 55
    RESTO           shift and go to state 56
    MULT            shift and go to state 57
    DIV             shift and go to state 58
    SUB             shift and go to state 59

  ! SOMA            [ reduce using rule 70 (listexp -> exp .) ]
  ! TERNARIO1       [ reduce using rule 70 (listexp -> exp .) ]
  ! OR              [ reduce using rule 70 (listexp -> exp .) ]
  ! AND             [ reduce using rule 70 (listexp -> exp .) ]
  ! MAIORIGUALQ     [ reduce using rule 70 (listexp -> exp .) ]
  ! MENORIGUALQ     [ reduce using rule 70 (listexp -> exp .) ]
  ! MENORQ          [ reduce using rule 70 (listexp -> exp .) ]
  ! MAIORQ          [ reduce using rule 70 (listexp -> exp .) ]
  ! DIFERENTEPACARAI [ reduce using rule 70 (listexp -> exp .) ]
  ! DIFERENTE       [ reduce using rule 70 (listexp -> exp .) ]
  ! IGUALPACARAI    [ reduce using rule 70 (listexp -> exp .) ]
  ! IGUAL           [ reduce using rule 70 (listexp -> exp .) ]
  ! RESTOINCREMENT  [ reduce using rule 70 (listexp -> exp .) ]
  ! DIVINCREMENT    [ reduce using rule 70 (listexp -> exp .) ]
  ! MULTINCREMENT   [ reduce using rule 70 (listexp -> exp .) ]
  ! DECREMENTN      [ reduce using rule 70 (listexp -> exp .) ]
  ! INCREMENTN      [ reduce using rule 70 (listexp -> exp .) ]
  ! DECREMENT       [ reduce using rule 70 (listexp -> exp .) ]
  ! EXPONENCIACAO   [ reduce using rule 70 (listexp -> exp .) ]
  ! INCREMENT       [ reduce using rule 70 (listexp -> exp .) ]
  ! RESTO           [ reduce using rule 70 (listexp -> exp .) ]
  ! MULT            [ reduce using rule 70 (listexp -> exp .) ]
  ! DIV             [ reduce using rule 70 (listexp -> exp .) ]
  ! SUB             [ reduce using rule 70 (listexp -> exp .) ]
  ! VIRGULA         [ reduce using rule 70 (listexp -> exp .) ]


state 125

    (7) vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .
    (9) vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE . ATRIBUICAO listexp

    PV              reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    SOMA            reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    TERNARIO1       reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    OR              reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    AND             reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    MAIORIGUALQ     reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    MENORIGUALQ     reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    MENORQ          reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    MAIORQ          reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    DIFERENTEPACARAI reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    DIFERENTE       reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    IGUALPACARAI    reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    IGUAL           reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    RESTOINCREMENT  reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    DIVINCREMENT    reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    MULTINCREMENT   reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    DECREMENTN      reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    INCREMENTN      reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    DECREMENT       reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    EXPONENCIACAO   reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    INCREMENT       reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    RESTO           reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    MULT            reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    DIV             reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    SUB             reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    VIRGULA         reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    RPAREN          reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    TERNARIO2       reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    RCOLCHETE       reduce using rule 7 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE .)
    ATRIBUICAO      shift and go to state 131


state 126

    (14) sigParams -> ID VIRGULA sigParams .

    RPAREN          reduce using rule 14 (sigParams -> ID VIRGULA sigParams .)


state 127

    (21) stm -> FOR LPAREN opexp PV opexp PV . opexp RPAREN bodyorstm
    (24) opexp -> . exp
    (25) opexp -> . VOID
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    VOID            shift and go to state 97
    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    opexp                          shift and go to state 132
    exp                            shift and go to state 96
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 128

    (22) stm -> IF LPAREN exp RPAREN bodyorstm ELSE . bodyorstm
    (26) bodyorstm -> . body
    (27) bodyorstm -> . stm
    (15) body -> . LCHAVES stms RCHAVES
    (18) stm -> . RETURN exp PV
    (19) stm -> . exp PV
    (20) stm -> . WHILE LPAREN exp RPAREN bodyorstm
    (21) stm -> . FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm
    (22) stm -> . IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm
    (23) stm -> . IF LPAREN exp RPAREN bodyorstm
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    LCHAVES         shift and go to state 29
    RETURN          shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    IF              shift and go to state 12
    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 9
    bodyorstm                      shift and go to state 133
    body                           shift and go to state 118
    stm                            shift and go to state 119
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 129

    (8) vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .

    PV              reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    SOMA            reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    TERNARIO1       reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    OR              reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    AND             reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    MAIORIGUALQ     reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    MENORIGUALQ     reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    MENORQ          reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    MAIORQ          reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    DIFERENTEPACARAI reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    DIFERENTE       reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    IGUALPACARAI    reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    IGUAL           reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    RESTOINCREMENT  reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    DIVINCREMENT    reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    MULTINCREMENT   reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    DECREMENTN      reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    INCREMENTN      reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    DECREMENT       reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    EXPONENCIACAO   reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    INCREMENT       reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    RESTO           reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    MULT            reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    DIV             reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    SUB             reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    VIRGULA         reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    RPAREN          reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    TERNARIO2       reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)
    RCOLCHETE       reduce using rule 8 (vardecl -> tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE .)


state 130

    (71) listexp -> exp VIRGULA . listexp
    (70) listexp -> . exp
    (71) listexp -> . exp VIRGULA listexp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    exp                            shift and go to state 124
    listexp                        shift and go to state 134
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 131

    (9) vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO . listexp
    (70) listexp -> . exp
    (71) listexp -> . exp VIRGULA listexp
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    tipodecl                       shift and go to state 22
    listexp                        shift and go to state 135
    exp                            shift and go to state 124
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19

state 132

    (21) stm -> FOR LPAREN opexp PV opexp PV opexp . RPAREN bodyorstm

    RPAREN          shift and go to state 136


state 133

    (22) stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .

    RETURN          reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    WHILE           reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    FOR             reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    IF              reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    FALSE           reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    TRUE            reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    ID              reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    FLOAT           reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    INTEIRO         reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    NEGACAO         reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    STRING          reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    LET             reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    CONST           reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    VAR             reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    FUNCTION        reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    $end            reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    RCHAVES         reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)
    ELSE            reduce using rule 22 (stm -> IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm .)


state 134

    (71) listexp -> exp VIRGULA listexp .

    RCOLCHETE       reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    SOMA            reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    TERNARIO1       reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    OR              reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    AND             reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    MAIORIGUALQ     reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    MENORIGUALQ     reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    MENORQ          reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    MAIORQ          reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    DIFERENTEPACARAI reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    DIFERENTE       reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    IGUALPACARAI    reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    IGUAL           reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    RESTOINCREMENT  reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    DIVINCREMENT    reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    MULTINCREMENT   reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    DECREMENTN      reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    INCREMENTN      reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    DECREMENT       reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    EXPONENCIACAO   reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    INCREMENT       reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    RESTO           reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    MULT            reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    DIV             reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    SUB             reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    PV              reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    VIRGULA         reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    RPAREN          reduce using rule 71 (listexp -> exp VIRGULA listexp .)
    TERNARIO2       reduce using rule 71 (listexp -> exp VIRGULA listexp .)


state 135

    (9) vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .

    PV              reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    SOMA            reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    TERNARIO1       reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    OR              reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    AND             reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    MAIORIGUALQ     reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    MENORIGUALQ     reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    MENORQ          reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    MAIORQ          reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    DIFERENTEPACARAI reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    DIFERENTE       reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    IGUALPACARAI    reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    IGUAL           reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    RESTOINCREMENT  reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    DIVINCREMENT    reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    MULTINCREMENT   reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    DECREMENTN      reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    INCREMENTN      reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    DECREMENT       reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    EXPONENCIACAO   reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    INCREMENT       reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    RESTO           reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    MULT            reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    DIV             reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    SUB             reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    VIRGULA         reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    RPAREN          reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    TERNARIO2       reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)
    RCOLCHETE       reduce using rule 9 (vardecl -> tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp .)


state 136

    (21) stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN . bodyorstm
    (26) bodyorstm -> . body
    (27) bodyorstm -> . stm
    (15) body -> . LCHAVES stms RCHAVES
    (18) stm -> . RETURN exp PV
    (19) stm -> . exp PV
    (20) stm -> . WHILE LPAREN exp RPAREN bodyorstm
    (21) stm -> . FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm
    (22) stm -> . IF LPAREN exp RPAREN bodyorstm ELSE bodyorstm
    (23) stm -> . IF LPAREN exp RPAREN bodyorstm
    (28) exp -> . vardecl
    (29) exp -> . exp SOMA exp
    (30) exp -> . FALSE
    (31) exp -> . TRUE
    (32) exp -> . ID
    (33) exp -> . FLOAT
    (34) exp -> . INTEIRO
    (35) exp -> . assign
    (36) exp -> . call
    (37) exp -> . exp TERNARIO1 exp TERNARIO2 exp
    (38) exp -> . NEGACAO exp
    (39) exp -> . exp OR exp
    (40) exp -> . exp AND exp
    (41) exp -> . exp MAIORIGUALQ exp
    (42) exp -> . exp MENORIGUALQ exp
    (43) exp -> . exp MENORQ exp
    (44) exp -> . exp MAIORQ exp
    (45) exp -> . exp DIFERENTEPACARAI exp
    (46) exp -> . exp DIFERENTE exp
    (47) exp -> . exp IGUALPACARAI exp
    (48) exp -> . exp IGUAL exp
    (49) exp -> . exp RESTOINCREMENT exp
    (50) exp -> . exp DIVINCREMENT exp
    (51) exp -> . exp MULTINCREMENT exp
    (52) exp -> . exp DECREMENTN exp
    (53) exp -> . exp INCREMENTN exp
    (54) exp -> . exp DECREMENT
    (55) exp -> . exp EXPONENCIACAO exp
    (56) exp -> . exp INCREMENT
    (57) exp -> . exp RESTO exp
    (58) exp -> . exp MULT exp
    (59) exp -> . exp DIV exp
    (60) exp -> . exp SUB exp
    (61) exp -> . STRING
    (5) vardecl -> . tipodecl ID
    (6) vardecl -> . tipodecl ID ATRIBUICAO exp
    (7) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE
    (8) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE listexp RCOLCHETE
    (9) vardecl -> . tipodecl ID LCOLCHETE INTEIRO RCOLCHETE ATRIBUICAO listexp
    (10) vardecl -> . tipodecl ID ATRIBUICAO LCOLCHETE RCOLCHETE
    (66) assign -> . ID ATRIBUICAO exp
    (62) call -> . ID LPAREN params RPAREN
    (63) call -> . ID LPAREN RPAREN
    (67) tipodecl -> . LET
    (68) tipodecl -> . CONST
    (69) tipodecl -> . VAR

    LCHAVES         shift and go to state 29
    RETURN          shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    IF              shift and go to state 12
    FALSE           shift and go to state 14
    TRUE            shift and go to state 15
    ID              shift and go to state 7
    FLOAT           shift and go to state 16
    INTEIRO         shift and go to state 17
    NEGACAO         shift and go to state 20
    STRING          shift and go to state 21
    LET             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25

    bodyorstm                      shift and go to state 137
    body                           shift and go to state 118
    stm                            shift and go to state 119
    exp                            shift and go to state 9
    vardecl                        shift and go to state 13
    assign                         shift and go to state 18
    call                           shift and go to state 19
    tipodecl                       shift and go to state 22

state 137

    (21) stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .

    RETURN          reduce using rule 21 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    WHILE           reduce using rule 21 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    FOR             reduce using rule 21 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    IF              reduce using rule 21 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    FALSE           reduce using rule 21 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    TRUE            reduce using rule 21 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    ID              reduce using rule 21 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    FLOAT           reduce using rule 21 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    INTEIRO         reduce using rule 21 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    NEGACAO         reduce using rule 21 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    STRING          reduce using rule 21 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    LET             reduce using rule 21 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    CONST           reduce using rule 21 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    VAR             reduce using rule 21 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    FUNCTION        reduce using rule 21 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    $end            reduce using rule 21 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    RCHAVES         reduce using rule 21 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)
    ELSE            reduce using rule 21 (stm -> FOR LPAREN opexp PV opexp PV opexp RPAREN bodyorstm .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RETURN in state 5 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 5 resolved as shift
WARNING: shift/reduce conflict for FOR in state 5 resolved as shift
WARNING: shift/reduce conflict for IF in state 5 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 5 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 5 resolved as shift
WARNING: shift/reduce conflict for ID in state 5 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 5 resolved as shift
WARNING: shift/reduce conflict for INTEIRO in state 5 resolved as shift
WARNING: shift/reduce conflict for NEGACAO in state 5 resolved as shift
WARNING: shift/reduce conflict for STRING in state 5 resolved as shift
WARNING: shift/reduce conflict for LET in state 5 resolved as shift
WARNING: shift/reduce conflict for CONST in state 5 resolved as shift
WARNING: shift/reduce conflict for VAR in state 5 resolved as shift
WARNING: shift/reduce conflict for VIRGULA in state 124 resolved as shift
WARNING: shift/reduce conflict for SOMA in state 124 resolved as shift
WARNING: shift/reduce conflict for TERNARIO1 in state 124 resolved as shift
WARNING: shift/reduce conflict for OR in state 124 resolved as shift
WARNING: shift/reduce conflict for AND in state 124 resolved as shift
WARNING: shift/reduce conflict for MAIORIGUALQ in state 124 resolved as shift
WARNING: shift/reduce conflict for MENORIGUALQ in state 124 resolved as shift
WARNING: shift/reduce conflict for MENORQ in state 124 resolved as shift
WARNING: shift/reduce conflict for MAIORQ in state 124 resolved as shift
WARNING: shift/reduce conflict for DIFERENTEPACARAI in state 124 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 124 resolved as shift
WARNING: shift/reduce conflict for IGUALPACARAI in state 124 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for RESTOINCREMENT in state 124 resolved as shift
WARNING: shift/reduce conflict for DIVINCREMENT in state 124 resolved as shift
WARNING: shift/reduce conflict for MULTINCREMENT in state 124 resolved as shift
WARNING: shift/reduce conflict for DECREMENTN in state 124 resolved as shift
WARNING: shift/reduce conflict for INCREMENTN in state 124 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 124 resolved as shift
WARNING: shift/reduce conflict for EXPONENCIACAO in state 124 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 124 resolved as shift
WARNING: shift/reduce conflict for RESTO in state 124 resolved as shift
WARNING: shift/reduce conflict for MULT in state 124 resolved as shift
WARNING: shift/reduce conflict for DIV in state 124 resolved as shift
WARNING: shift/reduce conflict for SUB in state 124 resolved as shift
